{
  "paths": {
    "/instances": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstances",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "clusterIdIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "hosted",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "idIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "idMin",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includeLabels",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includePromCurrentActiveSeries",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "labels",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "nameIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgIdIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgSlug",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgSlugIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "planIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "planNot",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slugIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "updatedOrCreatedAtMin",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "url",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "versionIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "versionNot",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "versionNotIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "summary": "Get a list of instances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "title": "items",
                      "items": {
                        "$ref": "#/components/schemas/FormattedApiInstance"
                      }
                    },
                    "orderBy": {
                      "type": "string",
                      "title": "orderBy"
                    },
                    "direction": {
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "title": "direction"
                    },
                    "total": {
                      "type": "number",
                      "title": "total"
                    },
                    "pages": {
                      "type": "number",
                      "title": "pages"
                    },
                    "pageSize": {
                      "type": "number",
                      "title": "pageSize"
                    },
                    "page": {
                      "type": "number",
                      "title": "page"
                    }
                  },
                  "required": [
                    "items",
                    "orderBy",
                    "direction",
                    "total",
                    "pages",
                    "pageSize",
                    "page"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstances",
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adminUserInstance": {
                    "type": "boolean"
                  },
                  "alerts": {
                    "type": "boolean"
                  },
                  "cluster": {
                    "type": "string"
                  },
                  "deleteProtection": {
                    "default": false,
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "graphite": {
                    "type": "boolean"
                  },
                  "hlInstanceId": {
                    "type": "integer"
                  },
                  "hosted": {
                    "type": "boolean"
                  },
                  "k6OrgId": {
                    "type": "integer"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "logs": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "org": {
                    "type": "string"
                  },
                  "plan": {
                    "enum": [
                      "free",
                      "free-trial",
                      "gcloud",
                      "enterprise",
                      "advanced",
                      "payg",
                      "fedramp",
                      "trial",
                      "logsdemo",
                      "starter",
                      "starter-prom",
                      "basic",
                      "basic-prom",
                      "bundled",
                      "fog"
                    ],
                    "type": "string"
                  },
                  "plugins": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "prometheus": {
                    "type": "boolean"
                  },
                  "publicInstance": {
                    "type": "boolean"
                  },
                  "region": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usernameOrEmail": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "waitForReadiness": {
                    "default": true,
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "summary": "Create a new instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "config",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "summary": "Gets an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alerts": {
                    "type": "boolean"
                  },
                  "deleteProtection": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "graphite": {
                    "type": "boolean"
                  },
                  "hlInstanceId": {
                    "type": "integer"
                  },
                  "k6OrgId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "logs": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "plan": {
                    "type": "string"
                  },
                  "prometheus": {
                    "type": "boolean"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "summary": "Updates an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "deleteInstance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Deletes an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/api/serviceaccounts": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceServiceAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isDisabled": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "role"
                ]
              }
            }
          }
        },
        "summary": "Creates a service account on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrafanaServiceAccountDTO"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/api/serviceaccounts/{serviceAccountId}": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstanceServiceAccount",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "serviceAccountId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Gets a service account on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrafanaServiceAccountDTO"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "deleteInstanceServiceAccount",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "serviceAccountId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Delete a service account on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/api/serviceaccounts/{serviceAccountId}/tokens": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceServiceAccountTokens",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "serviceAccountId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "secondsToLive": {
                    "type": "integer"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "summary": "Creates a service account token on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrafanaNewApiKeyResult"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstanceServiceAccountTokens",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "serviceAccountId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get a service account's tokens on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GrafanaTokenDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/api/serviceaccounts/{serviceAccountId}/tokens/{tokenId}": {
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "deleteInstanceServiceAccountToken",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "serviceAccountId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tokenId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Delete a service account token on a Grafana instance",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/connections": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getConnections",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "config",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "summary": "Gets an instance's connectivity information (InfluxDB, OTEL, AWS private link, etc.)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstanceConnections"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/oauth-azuread": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceOAuthAzureAD",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedGroups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "authUrl": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tokenUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "authUrl",
                  "tokenUrl"
                ]
              }
            }
          }
        },
        "summary": "Configure Azure OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "delInstanceOAuthAzureAD",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Disable Azure OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/oauth-github": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceOAuthGithub",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedOrganizations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "teamIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "clientId"
                ]
              }
            }
          }
        },
        "summary": "Configure Github OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "delInstanceOAuthGithub",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Disable Github OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/oauth-google": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceOAuthGoogle",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "allowedDomains"
                ]
              }
            }
          }
        },
        "summary": "Configure Google OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "delInstanceOAuthGoogle",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Disable Google OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/oauth-okta": {
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstanceOAuthOkta",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedGroups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "apiUrl": {
                    "type": "string"
                  },
                  "authUrl": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "roleAttributePath": {
                    "type": "string"
                  },
                  "tokenUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "authUrl",
                  "tokenUrl",
                  "apiUrl"
                ]
              }
            }
          }
        },
        "summary": "Configure Okta OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "delInstanceOAuthOkta",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Disable Okta OAuth in an instance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstance"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/plugins": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstancePlugins",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "enum": [
                "instanceId",
                "pluginId",
                "pluginSlug",
                "pluginName"
              ],
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "title": "items",
                      "items": {
                        "$ref": "#/components/schemas/FormattedApiInstancePlugin"
                      }
                    },
                    "orderBy": {
                      "type": "string",
                      "title": "orderBy"
                    },
                    "direction": {
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "title": "direction"
                    },
                    "total": {
                      "type": "number",
                      "title": "total"
                    },
                    "pages": {
                      "type": "number",
                      "title": "pages"
                    },
                    "pageSize": {
                      "type": "number",
                      "title": "pageSize"
                    },
                    "page": {
                      "type": "number",
                      "title": "page"
                    }
                  },
                  "required": [
                    "items",
                    "orderBy",
                    "direction",
                    "total",
                    "pages",
                    "pageSize",
                    "page"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstancePlugins",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noRestart": {
                    "type": "boolean"
                  },
                  "plugin": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "plugin"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstancePlugin"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/plugins/{pluginSlugOrId}": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstancePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pluginSlugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstancePlugin"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "operationId": "postInstancePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pluginSlugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noRestart": {
                    "type": "boolean"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstancePlugin"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "operationId": "deleteInstancePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pluginSlugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "noRestart",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiInstancePlugin"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instanceId}/users": {
      "get": {
        "tags": [
          "instances"
        ],
        "operationId": "getInstanceUsers",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "activeSince",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includeInternal",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "summary": "Gets instance active users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgSlugOrId}/billed-usage": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrgBilledUsage",
        "parameters": [
          {
            "in": "path",
            "name": "orgSlugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "enum": [
                "csv"
              ],
              "type": "string"
            },
            "required": false
          }
        ],
        "summary": "Retrieve an org's billed usage for a specific month",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifiedGetOrgBilledUsageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgSlugOrId}/billed-usage-history": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrgBilledUsageHistory",
        "parameters": [
          {
            "in": "path",
            "name": "orgSlugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Retrieve an org's billed usage items for the last 12 months",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgBilledUsageHistory"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgSlug}/instances": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrgInstances",
        "parameters": [
          {
            "in": "path",
            "name": "orgSlug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "cluster",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "idIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "nameIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "planIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "planNot",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slugIn",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "url",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "urlIn",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "summary": "Get the list of instances belonging to the org",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "title": "items",
                      "items": {
                        "$ref": "#/components/schemas/FormattedApiInstance"
                      }
                    },
                    "orderBy": {
                      "type": "string",
                      "title": "orderBy"
                    },
                    "direction": {
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "title": "direction"
                    },
                    "total": {
                      "type": "number",
                      "title": "total"
                    },
                    "pages": {
                      "type": "number",
                      "title": "pages"
                    },
                    "pageSize": {
                      "type": "number",
                      "title": "pageSize"
                    },
                    "page": {
                      "type": "number",
                      "title": "page"
                    }
                  },
                  "required": [
                    "items",
                    "orderBy",
                    "direction",
                    "total",
                    "pages",
                    "pageSize",
                    "page"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrg",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiOrgPublic"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}/api-keys": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getApiKeys",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "excludeProvisioned",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "summary": "Get an organization's API keys",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiApiKeyListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "operationId": "postApiKeys",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "role": {
                    "enum": [
                      "Viewer",
                      "Editor",
                      "Admin",
                      "MetricsPublisher",
                      "PluginPublisher"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "role"
                ]
              }
            }
          }
        },
        "summary": "Create an API key.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiApiKey"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}/api-keys/{name}": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getApiKey",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get an API key by name",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiApiKey"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orgs"
        ],
        "operationId": "delApiKey",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "unlock",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Delete an API key by name",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}/check-visibility": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "checkOrgVisibility",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Check visibility of the org",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}/members": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrgMembers",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "billing",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "privacy",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "privacyIn",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMemberListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "operationId": "postOrgMembers",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "billing": {
                    "type": "integer"
                  },
                  "privacy": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedOrgMembership"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{slugOrId}/members/{usernameOrId}": {
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getOrgMember",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "usernameOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedOrgMembership"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "operationId": "postOrgMember",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "usernameOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "billing": {
                    "type": "integer"
                  },
                  "defaultOrg": {
                    "type": "string"
                  },
                  "privacy": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedOrgMembership"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orgs"
        ],
        "operationId": "deleteOrgMember",
        "parameters": [
          {
            "in": "path",
            "name": "slugOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "usernameOrId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/{slug}": {
      "get": {
        "tags": [
          "plugins"
        ],
        "operationId": "getPlugin",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "summary": "Fetches a plugin by slug or id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiPlugin"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/stack-regions": {
      "get": {
        "tags": [
          "stack-regions"
        ],
        "operationId": "getStackRegions",
        "parameters": [
          {
            "in": "query",
            "name": "countryCode",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "idIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "enum": [
                "id",
                "createdAt",
                "updatedAt",
                "sortOrder"
              ],
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "provider",
            "schema": {
              "enum": [
                "aws",
                "gcp",
                "azure",
                "fedramp-palantir"
              ],
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "providerRegion",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "slugIn",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "title": "items",
                      "items": {
                        "$ref": "#/components/schemas/FormattedApiStackRegion"
                      }
                    },
                    "orderBy": {
                      "type": "string",
                      "title": "orderBy"
                    },
                    "direction": {
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "title": "direction"
                    },
                    "total": {
                      "type": "number",
                      "title": "total"
                    },
                    "pages": {
                      "type": "number",
                      "title": "pages"
                    },
                    "pageSize": {
                      "type": "number",
                      "title": "pageSize"
                    },
                    "page": {
                      "type": "number",
                      "title": "page"
                    }
                  },
                  "required": [
                    "items",
                    "orderBy",
                    "direction",
                    "total",
                    "pages",
                    "pageSize",
                    "page"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/stack-regions/closest": {
      "get": {
        "tags": [
          "stack-regions"
        ],
        "operationId": "getClosestStackRegion",
        "parameters": [
          {
            "in": "query",
            "name": "provider",
            "schema": {
              "enum": [
                "aws",
                "gcp",
                "azure",
                "fedramp-palantir"
              ],
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedApiStackRegion"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accesspolicies": {
      "get": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "getAccessPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageCursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "realmIdentifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "realmType",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "summary": "Get a list of access policies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "postAccessPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "lokiQueryPolicy": {
                        "type": "object",
                        "properties": {
                          "maxEntriesLimitPerQuery": {
                            "type": "integer",
                            "nullable": true
                          },
                          "maxQueryBytesRead": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryInterval": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryLength": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryLookback": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryTime": {
                            "type": "string",
                            "nullable": true
                          },
                          "minimumLabelsNumber": {
                            "type": "integer",
                            "nullable": true
                          },
                          "requiredLabels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          }
                        }
                      },
                      "pdcConfiguration": {
                        "type": "object",
                        "properties": {
                          "limitedHosts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          }
                        }
                      }
                    },
                    "nullable": true
                  },
                  "conditions": {
                    "type": "object",
                    "properties": {
                      "allowedSubnets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "labelPolicies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "selector": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "selector"
                            ]
                          }
                        },
                        "type": {
                          "enum": [
                            "stack",
                            "org"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "identifier"
                      ]
                    },
                    "minLength": 1
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minLength": 1
                  }
                },
                "required": [
                  "name",
                  "scopes",
                  "realms"
                ]
              }
            }
          }
        },
        "summary": "Create a new access policy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAccessPolicy"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accesspolicies/config": {
      "get": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "getConfig",
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get details about the Cloud Access Policy API",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accesspolicies/{id}": {
      "get": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "getAccessPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Get an access policy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAccessPolicy"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "postAccessPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "lokiQueryPolicy": {
                        "type": "object",
                        "properties": {
                          "maxEntriesLimitPerQuery": {
                            "type": "integer",
                            "nullable": true
                          },
                          "maxQueryBytesRead": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryInterval": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryLength": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryLookback": {
                            "type": "string",
                            "nullable": true
                          },
                          "maxQueryTime": {
                            "type": "string",
                            "nullable": true
                          },
                          "minimumLabelsNumber": {
                            "type": "integer",
                            "nullable": true
                          },
                          "requiredLabels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          }
                        }
                      },
                      "pdcConfiguration": {
                        "type": "object",
                        "properties": {
                          "limitedHosts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          }
                        }
                      }
                    },
                    "nullable": true
                  },
                  "conditions": {
                    "type": "object",
                    "properties": {
                      "allowedSubnets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "realms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "labelPolicies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "selector": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "selector"
                            ]
                          }
                        },
                        "type": {
                          "enum": [
                            "stack",
                            "org"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "identifier"
                      ]
                    },
                    "minLength": 1
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minLength": 1
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "summary": "Update an access policy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAccessPolicy"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accesspolicies"
        ],
        "operationId": "deleteAccessPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Delete an access policy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tokens": {
      "get": {
        "tags": [
          "tokens"
        ],
        "operationId": "getTokens",
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accessPolicyId",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accessPolicyIds",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accessPolicyName",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accessPolicyRealmIdentifier",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accessPolicyRealmType",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accessPolicyStatus",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "expiresAfter",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "expiresBefore",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "includeExpired",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageCursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "summary": "Get a list of tokens",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tokens"
        ],
        "operationId": "postTokens",
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accessPolicyId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "accessPolicyId"
                ]
              }
            }
          }
        },
        "summary": "Create a new token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenWithSecret"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tokens/{id}": {
      "get": {
        "tags": [
          "tokens"
        ],
        "operationId": "getToken",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Get info for a specific token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tokens"
        ],
        "operationId": "postToken",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "summary": "Update a token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tokens"
        ],
        "operationId": "deleteToken",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orgId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-request-id",
            "schema": {
              "type": "string",
              "default": "openapi-x-request-id"
            },
            "required": true
          }
        ],
        "summary": "Delete a token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Login Required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInvalidCredentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Element not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          },
          "409": {
            "description": "Invalid arguments: wrong or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServiceUnavailable"
                }
              }
            }
          }
        }
      }
    }
  },
  "openapi": "3.0.0",
  "info": {
    "title": "GCOM API",
    "version": "public",
    "description": "Grafana.com API (public).\n\nLooking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.\n\nIf you have any questions, please contact support in the Grafana Cloud UI.\n\nThis spec is in *Beta* stage, so use it with caution:\n- Not all endpoint responses are properly typed for the time being.\n- Some request parameter types may not be precise\n",
    "x-commit-sha": "93eba8a",
    "x-generated-at": "2025-07-03T12:55:02.012Z"
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "servers": [
    {
      "description": "Main API server",
      "url": "/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "ErrorServiceUnavailable": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Service is currently unavailable"
          },
          "code": {
            "type": "string",
            "enum": [
              "ServiceUnavailable"
            ]
          }
        }
      },
      "ErrorConflict": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid arguments: wrong or missing parameters"
          },
          "code": {
            "type": "string",
            "enum": [
              "Conflict"
            ]
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Element not found"
          },
          "code": {
            "type": "string",
            "enum": [
              "NotFound"
            ]
          }
        }
      },
      "ErrorForbidden": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Forbidden"
          },
          "code": {
            "type": "string",
            "enum": [
              "Forbidden"
            ]
          }
        }
      },
      "ErrorInvalidCredentials": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Login Required or invalid credentials"
          },
          "code": {
            "type": "string",
            "enum": [
              "InvalidCredentials"
            ]
          }
        }
      },
      "AccessPolicyListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "title": "items"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "pagination": {
                "type": "object",
                "properties": {
                  "pageCursor": {
                    "type": "string",
                    "title": "pageCursor",
                    "nullable": true
                  },
                  "nextPage": {
                    "type": "string",
                    "title": "nextPage",
                    "nullable": true
                  },
                  "pageSize": {
                    "type": "number",
                    "title": "pageSize"
                  }
                },
                "required": [
                  "pageSize"
                ],
                "title": "pagination"
              }
            },
            "required": [
              "pagination"
            ],
            "title": "metadata"
          }
        },
        "required": [
          "items",
          "metadata"
        ]
      },
      "AuthAccessPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "c45485b6-8321-4cf2-bcec-12006df755ff"
          },
          "orgId": {
            "type": "string",
            "example": "1",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "example": "stack-readers"
          },
          "displayName": {
            "type": "string",
            "example": "Stack Readers",
            "description": "Will be set to `name` if not provided."
          },
          "source": {
            "type": "string",
            "description": "Source of the Access Policy (requires system token).",
            "enum": [
              "user",
              "cloud"
            ],
            "example": "user"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "accesspolicies:read",
                "accesspolicies:write",
                "accesspolicies:delete",
                "billing-metrics:read",
                "metrics:read",
                "metrics:write",
                "metrics:delete",
                "metrics:import",
                "logs:read",
                "logs:write",
                "logs:delete",
                "traces:read",
                "traces:write",
                "traces:delete",
                "alerts:read",
                "alerts:write",
                "rules:read",
                "rules:write"
              ]
            },
            "example": [
              "metrics:read",
              "logs:read",
              "traces:read",
              "alerts:read"
            ]
          },
          "realms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the realm",
                  "enum": [
                    "org",
                    "stack",
                    "system"
                  ],
                  "example": "stack"
                },
                "identifier": {
                  "type": "string",
                  "description": "The unique identifier of a realm (org or stack).",
                  "format": "string",
                  "example": "123"
                },
                "labelPolicies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "format": "string",
                        "description": "Label selector",
                        "example": "{env != \"dev\"}"
                      }
                    }
                  }
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "conditions": {
            "type": "object",
            "description": "A set of criteria that is used to restrict access of the Access Policy and Tokens. Providing an empty object (\"{}\") results in the complete removal of the `conditions` object.\n",
            "properties": {
              "allowedSubnets": {
                "type": "array",
                "description": "An array of IP addresses with subnet masks in CIDR notation (both IPv4 or IPv6 are supported) that is used to restrict access to only hosts that are part of at least one of the subnets. Providing an empty array is equivalent to providing an empty `conditions` object, and results in the removal of the `conditions` object from the Access Policy.\nNote that an IP address is not valid CIDR notation. For specifying a single IP address use a subnet mask of `/32` for IPv4 and `/128` for IPv6.\nExamples: 192.168.0.10/32 2001:db0:82a3:0:0:8a2e:370:1234/128\n",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4-cidr"
                    },
                    {
                      "type": "string",
                      "format": "ipv6-cidr"
                    }
                  ]
                }
              }
            }
          },
          "attributes": {
            "type": "object",
            "description": "A set of criteria that can be to the backend service via headers through the gateway, or used to make authentication decisions.\n",
            "properties": {
              "lokiQueryPolicy": {
                "type": "object",
                "properties": {
                  "queryTimeout": {
                    "description": "String which represents a duration. For example \"10s\", \"2w\", \"5h\".",
                    "type": "string",
                    "format": "string",
                    "example": "10s"
                  },
                  "maxEntriesLimitPerQuery": {
                    "description": "Ordinary integer.",
                    "type": "integer",
                    "format": "integer",
                    "example": 20
                  },
                  "maxQueryLookback": {
                    "description": "String which represents a duration. For example \"10s\", \"2w\", \"5h\".",
                    "type": "string",
                    "format": "string",
                    "example": "30d"
                  },
                  "maxQueryLength": {
                    "description": "String which represents a duration. For example \"10s\", \"2w\", \"5h\".",
                    "type": "string",
                    "format": "string",
                    "example": "7d"
                  }
                }
              },
              "allowedScopes": {
                "type": "array",
                "description": "List of scopes allowed to be signed by an access policy (required if the access policy contains `grafana-id-token:sign`).\n",
                "items": {
                  "type": "string"
                },
                "example": [
                  "metrics:read",
                  "logs:read",
                  "traces:read",
                  "alerts:read"
                ]
              },
              "pdcConfiguration": {
                "type": "object",
                "properties": {
                  "limitedHosts": {
                    "description": "List of hosts that Grafana is able to access through a PDC. All hosts are allowed if not provided.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "string",
                      "description": "Hostname and port of host PDC is limited to access.",
                      "example": "mysql.example.com:3306"
                    }
                  }
                }
              },
              "allowedAudiences": {
                "type": "array",
                "description": "List of audience claims allowed to be included when signing access tokens.\n",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the access policy.",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          }
        },
        "required": [
          "name",
          "scopes",
          "realms"
        ]
      },
      "FormattedApiApiKeyListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "title": "id",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "accessPolicyId": {
                  "type": "string",
                  "title": "accessPolicyId"
                },
                "orgId": {
                  "type": "number",
                  "title": "orgId"
                },
                "orgSlug": {
                  "type": "string",
                  "title": "orgSlug"
                },
                "orgName": {
                  "type": "string",
                  "title": "orgName"
                },
                "instanceId": {
                  "type": "number",
                  "title": "instanceId",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "title": "name"
                },
                "role": {
                  "enum": [
                    "Admin",
                    "EasyStart",
                    "Editor",
                    "MetricsPublisher",
                    "None",
                    "PluginPublisher",
                    "SSO Access",
                    "Viewer"
                  ],
                  "type": "string",
                  "title": "role"
                },
                "createdAt": {
                  "type": "string",
                  "title": "createdAt"
                },
                "updatedAt": {
                  "type": "string",
                  "title": "updatedAt",
                  "nullable": true
                },
                "firstUsed": {
                  "type": "string",
                  "title": "firstUsed",
                  "nullable": true
                },
                "token": {
                  "type": "string",
                  "title": "token"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rel": {
                        "type": "string",
                        "title": "rel",
                        "default": "self"
                      },
                      "href": {
                        "type": "string",
                        "title": "href"
                      }
                    },
                    "required": [
                      "href",
                      "rel"
                    ]
                  },
                  "title": "links"
                }
              },
              "required": [
                "accessPolicyId",
                "createdAt",
                "firstUsed",
                "id",
                "instanceId",
                "links",
                "name",
                "orgId",
                "orgName",
                "orgSlug",
                "role",
                "updatedAt"
              ]
            },
            "title": "items"
          },
          "orderBy": {
            "type": "string",
            "title": "orderBy"
          },
          "direction": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "title": "direction"
          },
          "total": {
            "type": "number",
            "title": "total"
          },
          "pages": {
            "type": "number",
            "title": "pages"
          },
          "pageSize": {
            "type": "number",
            "title": "pageSize"
          },
          "page": {
            "type": "number",
            "title": "page"
          },
          "cursor": {
            "type": "number",
            "title": "cursor"
          },
          "nextCursor": {
            "type": "number",
            "title": "nextCursor"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          }
        },
        "required": [
          "items"
        ]
      },
      "FormattedApiApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "accessPolicyId": {
            "type": "string",
            "title": "accessPolicyId"
          },
          "orgId": {
            "type": "number",
            "title": "orgId"
          },
          "orgSlug": {
            "type": "string",
            "title": "orgSlug"
          },
          "orgName": {
            "type": "string",
            "title": "orgName"
          },
          "instanceId": {
            "type": "number",
            "title": "instanceId",
            "nullable": true
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "role": {
            "enum": [
              "Admin",
              "EasyStart",
              "Editor",
              "MetricsPublisher",
              "None",
              "PluginPublisher",
              "SSO Access",
              "Viewer"
            ],
            "type": "string",
            "title": "role"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt",
            "nullable": true
          },
          "firstUsed": {
            "type": "string",
            "title": "firstUsed",
            "nullable": true
          },
          "token": {
            "type": "string",
            "title": "token"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel",
                  "default": "self"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          }
        },
        "required": [
          "accessPolicyId",
          "createdAt",
          "firstUsed",
          "id",
          "instanceId",
          "links",
          "name",
          "orgId",
          "orgName",
          "orgSlug",
          "role",
          "updatedAt"
        ]
      },
      "FormattedApiInstancePlugin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "title": "id"
          },
          "instanceId": {
            "type": "number",
            "title": "instanceId"
          },
          "instanceUrl": {
            "type": "string",
            "title": "instanceUrl"
          },
          "instanceSlug": {
            "type": "string",
            "title": "instanceSlug"
          },
          "pluginId": {
            "type": "number",
            "title": "pluginId"
          },
          "pluginSlug": {
            "type": "string",
            "title": "pluginSlug"
          },
          "pluginName": {
            "type": "string",
            "title": "pluginName"
          },
          "version": {
            "type": "string",
            "title": "version"
          },
          "latestVersion": {
            "type": "string",
            "title": "latestVersion"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "updatedAt"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel",
                  "default": "self"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          }
        },
        "required": [
          "createdAt",
          "id",
          "instanceId",
          "instanceSlug",
          "instanceUrl",
          "latestVersion",
          "links",
          "pluginId",
          "pluginName",
          "pluginSlug",
          "version"
        ]
      },
      "FormattedApiInstance": {
        "type": "object",
        "properties": {
          "alertCnt": {
            "type": "number",
            "title": "alertCnt"
          },
          "alertQuota": {
            "type": "number",
            "title": "alertQuota"
          },
          "amInstanceGeneratorUrl": {
            "type": "string",
            "title": "amInstanceGeneratorUrl"
          },
          "amInstanceGeneratorUrlDatasource": {
            "type": "string",
            "title": "amInstanceGeneratorUrlDatasource"
          },
          "amInstanceId": {
            "type": "number",
            "title": "amInstanceId"
          },
          "amInstanceName": {
            "type": "string",
            "title": "amInstanceName"
          },
          "amInstanceStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "amInstanceStatus"
          },
          "amInstanceUrl": {
            "type": "string",
            "title": "amInstanceUrl"
          },
          "amInstanceClusterId": {
            "type": "number",
            "title": "amInstanceClusterId"
          },
          "billingActiveUsers": {
            "type": "number",
            "title": "billingActiveUsers"
          },
          "billingEndDate": {
            "type": "string",
            "title": "billingEndDate",
            "nullable": true
          },
          "billingGrafanaActiveUsers": {
            "type": "number",
            "title": "billingGrafanaActiveUsers"
          },
          "billingOnCallActiveUsers": {
            "type": "number",
            "title": "billingOnCallActiveUsers"
          },
          "billingStartDate": {
            "type": "string",
            "title": "billingStartDate"
          },
          "clusterId": {
            "type": "number",
            "title": "clusterId"
          },
          "clusterName": {
            "type": "string",
            "title": "clusterName"
          },
          "clusterSlug": {
            "type": "string",
            "title": "clusterSlug"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "type": "string",
            "title": "createdBy"
          },
          "currentActiveAdminUsers": {
            "type": "number",
            "title": "currentActiveAdminUsers"
          },
          "currentActiveEditorUsers": {
            "type": "number",
            "title": "currentActiveEditorUsers"
          },
          "currentActiveUsers": {
            "type": "number",
            "title": "currentActiveUsers"
          },
          "currentActiveViewerUsers": {
            "type": "number",
            "title": "currentActiveViewerUsers"
          },
          "customAuth": {
            "type": "boolean",
            "title": "customAuth"
          },
          "customDomain": {
            "type": "boolean",
            "title": "customDomain"
          },
          "dailyAdminCnt": {
            "type": "number",
            "title": "dailyAdminCnt"
          },
          "dailyEditorCnt": {
            "type": "number",
            "title": "dailyEditorCnt"
          },
          "dailyUserCnt": {
            "type": "number",
            "title": "dailyUserCnt"
          },
          "dailyViewerCnt": {
            "type": "number",
            "title": "dailyViewerCnt"
          },
          "dashboardCnt": {
            "type": "number",
            "title": "dashboardCnt"
          },
          "dashboardQuota": {
            "type": "number",
            "title": "dashboardQuota"
          },
          "datasourceCnts": {
            "type": "object",
            "title": "datasourceCnts"
          },
          "description": {
            "type": "string",
            "title": "description"
          },
          "gateway": {
            "type": "string",
            "title": "gateway"
          },
          "hlInstanceCurrentUsage": {
            "type": "number",
            "title": "hlInstanceCurrentUsage"
          },
          "hlInstanceBillingUsage": {
            "type": "number",
            "title": "hlInstanceBillingUsage"
          },
          "hlInstanceId": {
            "type": "number",
            "title": "hlInstanceId"
          },
          "hlInstanceName": {
            "type": "string",
            "title": "hlInstanceName"
          },
          "hlInstanceStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "hlInstanceStatus"
          },
          "hlInstanceUrl": {
            "type": "string",
            "title": "hlInstanceUrl"
          },
          "hlInstanceClusterId": {
            "type": "number",
            "title": "hlInstanceClusterId"
          },
          "hmInstanceGraphiteCurrentUsage": {
            "type": "number",
            "title": "hmInstanceGraphiteCurrentUsage"
          },
          "hmInstanceGraphiteBillingUsage": {
            "type": "number",
            "title": "hmInstanceGraphiteBillingUsage"
          },
          "hmInstanceGraphiteId": {
            "type": "number",
            "title": "hmInstanceGraphiteId"
          },
          "hmInstanceGraphiteName": {
            "type": "string",
            "title": "hmInstanceGraphiteName"
          },
          "hmInstanceGraphiteStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "hmInstanceGraphiteStatus"
          },
          "hmInstanceGraphiteType": {
            "type": "string",
            "title": "hmInstanceGraphiteType"
          },
          "hmInstanceGraphiteUrl": {
            "type": "string",
            "title": "hmInstanceGraphiteUrl"
          },
          "hmInstancePromClusterId": {
            "type": "number",
            "title": "hmInstancePromClusterId"
          },
          "hmInstancePromCurrentActiveSeries": {
            "type": "number",
            "title": "hmInstancePromCurrentActiveSeries",
            "nullable": true
          },
          "hmInstancePromCurrentUsage": {
            "type": "number",
            "title": "hmInstancePromCurrentUsage"
          },
          "hmInstancePromBillingUsage": {
            "type": "number",
            "title": "hmInstancePromBillingUsage"
          },
          "hmInstancePromId": {
            "type": "number",
            "title": "hmInstancePromId"
          },
          "hmInstancePromName": {
            "type": "string",
            "title": "hmInstancePromName"
          },
          "hmInstancePromStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "hmInstancePromStatus"
          },
          "hmInstancePromUrl": {
            "type": "string",
            "title": "hmInstancePromUrl"
          },
          "hmInstanceGraphiteClusterId": {
            "type": "number",
            "title": "hmInstanceGraphiteClusterId"
          },
          "htInstanceId": {
            "type": "number",
            "title": "htInstanceId"
          },
          "htInstanceName": {
            "type": "string",
            "title": "htInstanceName"
          },
          "htInstanceStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "htInstanceStatus"
          },
          "htInstanceUrl": {
            "type": "string",
            "title": "htInstanceUrl"
          },
          "htInstanceClusterId": {
            "type": "number",
            "title": "htInstanceClusterId"
          },
          "htInstanceCurrentUsage": {
            "type": "number",
            "title": "htInstanceCurrentUsage"
          },
          "htInstanceBillingUsage": {
            "type": "number",
            "title": "htInstanceBillingUsage"
          },
          "hpInstanceId": {
            "type": "number",
            "title": "hpInstanceId"
          },
          "hpInstanceName": {
            "type": "string",
            "title": "hpInstanceName"
          },
          "hpInstanceStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "hpInstanceStatus"
          },
          "hpInstanceUrl": {
            "type": "string",
            "title": "hpInstanceUrl"
          },
          "hpInstanceClusterId": {
            "type": "number",
            "title": "hpInstanceClusterId"
          },
          "hpInstanceCurrentUsage": {
            "type": "number",
            "title": "hpInstanceCurrentUsage"
          },
          "hpInstanceBillingUsage": {
            "type": "number",
            "title": "hpInstanceBillingUsage"
          },
          "id": {
            "type": "number",
            "title": "id"
          },
          "incident": {
            "type": "number",
            "title": "incident"
          },
          "labels": {
            "type": "object",
            "title": "labels"
          },
          "machineLearning": {
            "type": "number",
            "title": "machineLearning"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "orgId": {
            "type": "number",
            "title": "orgId"
          },
          "orgName": {
            "type": "string",
            "title": "orgName"
          },
          "orgSlug": {
            "type": "string",
            "title": "orgSlug"
          },
          "plan": {
            "enum": [
              "advanced",
              "basic",
              "basic-prom",
              "bundled",
              "enterprise",
              "fedramp",
              "fog",
              "free",
              "free-trial",
              "gcloud",
              "logsdemo",
              "payg",
              "starter",
              "starter-prom",
              "trial"
            ],
            "type": "string",
            "title": "plan"
          },
          "planName": {
            "type": "string",
            "title": "planName"
          },
          "regionId": {
            "type": "number",
            "title": "regionId"
          },
          "regionSlug": {
            "type": "string",
            "title": "regionSlug"
          },
          "regionPublicName": {
            "type": "string",
            "title": "regionPublicName"
          },
          "provider": {
            "type": "string",
            "title": "provider"
          },
          "providerRegion": {
            "type": "string",
            "title": "providerRegion"
          },
          "runningVersion": {
            "type": "string",
            "title": "runningVersion"
          },
          "slug": {
            "type": "string",
            "title": "slug"
          },
          "ssl": {
            "type": "boolean",
            "title": "ssl"
          },
          "status": {
            "enum": [
              "active",
              "archived",
              "archiving",
              "deleted",
              "deleting",
              "migrated",
              "migrating",
              "paused",
              "pending",
              "restoring",
              "starting",
              "suspended",
              "suspending",
              "unknown"
            ],
            "type": "string",
            "title": "status"
          },
          "support": {
            "type": "boolean",
            "title": "support"
          },
          "trial": {
            "type": "number",
            "title": "trial"
          },
          "trialExpiresAt": {
            "type": "string",
            "title": "trialExpiresAt",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "title": "updatedBy",
            "nullable": true
          },
          "url": {
            "type": "string",
            "title": "url"
          },
          "userQuota": {
            "type": "number",
            "title": "userQuota"
          },
          "version": {
            "type": "string",
            "title": "version"
          },
          "versionIssueLink": {
            "type": "string",
            "title": "versionIssueLink"
          },
          "agentManagementInstanceId": {
            "type": "number",
            "title": "agentManagementInstanceId"
          },
          "agentManagementInstanceUrl": {
            "type": "string",
            "title": "agentManagementInstanceUrl"
          },
          "agentManagementInstanceName": {
            "type": "string",
            "title": "agentManagementInstanceName"
          },
          "agentManagementInstanceStatus": {
            "enum": [
              "active",
              "deleted",
              "suspended",
              "unknown"
            ],
            "type": "string",
            "title": "agentManagementInstanceStatus"
          },
          "agentManagementInstanceClusterId": {
            "type": "number",
            "title": "agentManagementInstanceClusterId"
          },
          "config": {
            "type": "object",
            "title": "config"
          },
          "type": {
            "type": "string",
            "enum": [
              "grafana"
            ],
            "title": "type"
          },
          "k6OrgId": {
            "type": "number",
            "title": "k6OrgId",
            "nullable": true
          },
          "machineLearningLogsToken": {
            "type": "string",
            "title": "machineLearningLogsToken"
          },
          "usageStatsId": {
            "type": "string",
            "title": "usageStatsId"
          },
          "regionStackStateServiceUrl": {
            "type": "string",
            "title": "regionStackStateServiceUrl"
          },
          "regionSyntheticMonitoringApiUrl": {
            "type": "string",
            "title": "regionSyntheticMonitoringApiUrl"
          },
          "regionInsightsApiUrl": {
            "type": "string",
            "title": "regionInsightsApiUrl"
          },
          "regionIntegrationsApiUrl": {
            "type": "string",
            "title": "regionIntegrationsApiUrl"
          },
          "regionHostedExportersApiUrl": {
            "type": "string",
            "title": "regionHostedExportersApiUrl"
          },
          "regionMachineLearningApiUrl": {
            "type": "string",
            "title": "regionMachineLearningApiUrl"
          },
          "regionLLMGatewayUrl": {
            "type": "string",
            "title": "regionLLMGatewayUrl"
          },
          "regionAssistantUrl": {
            "type": "string",
            "title": "regionAssistantUrl"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          },
          "deleteProtection": {
            "type": "boolean",
            "title": "deleteProtection"
          }
        },
        "required": [
          "agentManagementInstanceClusterId",
          "agentManagementInstanceId",
          "agentManagementInstanceName",
          "agentManagementInstanceStatus",
          "agentManagementInstanceUrl",
          "alertCnt",
          "alertQuota",
          "amInstanceClusterId",
          "amInstanceGeneratorUrl",
          "amInstanceGeneratorUrlDatasource",
          "amInstanceId",
          "amInstanceName",
          "amInstanceStatus",
          "amInstanceUrl",
          "billingActiveUsers",
          "billingEndDate",
          "billingGrafanaActiveUsers",
          "billingOnCallActiveUsers",
          "billingStartDate",
          "clusterId",
          "clusterName",
          "clusterSlug",
          "createdAt",
          "createdBy",
          "currentActiveAdminUsers",
          "currentActiveEditorUsers",
          "currentActiveUsers",
          "currentActiveViewerUsers",
          "customAuth",
          "customDomain",
          "dailyAdminCnt",
          "dailyEditorCnt",
          "dailyUserCnt",
          "dailyViewerCnt",
          "dashboardCnt",
          "dashboardQuota",
          "datasourceCnts",
          "deleteProtection",
          "description",
          "gateway",
          "hlInstanceBillingUsage",
          "hlInstanceClusterId",
          "hlInstanceCurrentUsage",
          "hlInstanceId",
          "hlInstanceName",
          "hlInstanceStatus",
          "hlInstanceUrl",
          "hmInstanceGraphiteBillingUsage",
          "hmInstanceGraphiteClusterId",
          "hmInstanceGraphiteCurrentUsage",
          "hmInstanceGraphiteId",
          "hmInstanceGraphiteName",
          "hmInstanceGraphiteStatus",
          "hmInstanceGraphiteType",
          "hmInstanceGraphiteUrl",
          "hmInstancePromBillingUsage",
          "hmInstancePromClusterId",
          "hmInstancePromCurrentActiveSeries",
          "hmInstancePromCurrentUsage",
          "hmInstancePromId",
          "hmInstancePromName",
          "hmInstancePromStatus",
          "hmInstancePromUrl",
          "hpInstanceBillingUsage",
          "hpInstanceClusterId",
          "hpInstanceCurrentUsage",
          "hpInstanceId",
          "hpInstanceName",
          "hpInstanceStatus",
          "hpInstanceUrl",
          "htInstanceBillingUsage",
          "htInstanceClusterId",
          "htInstanceCurrentUsage",
          "htInstanceId",
          "htInstanceName",
          "htInstanceStatus",
          "htInstanceUrl",
          "id",
          "incident",
          "k6OrgId",
          "links",
          "machineLearning",
          "machineLearningLogsToken",
          "name",
          "orgId",
          "orgName",
          "orgSlug",
          "plan",
          "planName",
          "provider",
          "providerRegion",
          "regionAssistantUrl",
          "regionHostedExportersApiUrl",
          "regionId",
          "regionInsightsApiUrl",
          "regionIntegrationsApiUrl",
          "regionLLMGatewayUrl",
          "regionMachineLearningApiUrl",
          "regionPublicName",
          "regionSlug",
          "regionStackStateServiceUrl",
          "regionSyntheticMonitoringApiUrl",
          "runningVersion",
          "slug",
          "ssl",
          "status",
          "support",
          "trial",
          "trialExpiresAt",
          "type",
          "updatedAt",
          "updatedBy",
          "url",
          "usageStatsId",
          "userQuota",
          "version"
        ]
      },
      "GrafanaServiceAccountDTO": {
        "description": "swagger: model",
        "properties": {
          "accessControl": {
            "additionalProperties": {
              "type": "boolean"
            },
            "example": {
              "serviceaccounts:delete": true,
              "serviceaccounts:read": true,
              "serviceaccounts:write": true
            },
            "type": "object"
          },
          "avatarUrl": {
            "example": "/avatar/85ec38023d90823d3e5b43ef35646af9",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isDisabled": {
            "example": false,
            "type": "boolean"
          },
          "isExternal": {
            "example": false,
            "type": "boolean"
          },
          "login": {
            "example": "sa-grafana",
            "type": "string"
          },
          "name": {
            "example": "grafana",
            "type": "string"
          },
          "orgId": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "role": {
            "example": "Viewer",
            "type": "string"
          },
          "tokens": {
            "example": 0,
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GrafanaNewApiKeyResult": {
        "properties": {
          "id": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "key": {
            "example": "glsa_yscW25imSKJIuav8zF37RZmnbiDvB05G_fcaaf58a",
            "type": "string"
          },
          "name": {
            "example": "grafana",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GrafanaTokenDTO": {
        "properties": {
          "created": {
            "example": "2022-03-23T10:31:02Z",
            "format": "date-time",
            "type": "string"
          },
          "expiration": {
            "example": "2022-03-23T10:31:02Z",
            "format": "date-time",
            "type": "string"
          },
          "hasExpired": {
            "example": false,
            "type": "boolean"
          },
          "id": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "isRevoked": {
            "example": false,
            "type": "boolean"
          },
          "lastUsedAt": {
            "example": "2022-03-23T10:31:02Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "example": "grafana",
            "type": "string"
          },
          "secondsUntilExpiration": {
            "example": 0,
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "InstanceUsersResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lastSeenAt": {
                  "type": "string",
                  "title": "lastSeenAt"
                },
                "createdAt": {
                  "type": "string",
                  "title": "createdAt"
                },
                "updatedAt": {
                  "type": "string",
                  "title": "updatedAt"
                },
                "email": {
                  "type": "string",
                  "title": "email"
                },
                "login": {
                  "type": "string",
                  "title": "login"
                },
                "name": {
                  "type": "string",
                  "title": "name"
                },
                "role": {
                  "type": "string",
                  "title": "role"
                },
                "id": {
                  "type": "number",
                  "title": "id"
                },
                "isServiceAccount": {
                  "type": "boolean",
                  "title": "isServiceAccount"
                }
              },
              "required": [
                "createdAt",
                "email",
                "id",
                "isServiceAccount",
                "login",
                "name",
                "role",
                "updatedAt"
              ]
            },
            "title": "items"
          }
        },
        "required": [
          "items"
        ]
      },
      "FormattedApiInstanceConnections": {
        "type": "object",
        "properties": {
          "privateConnectivityInfo": {
            "type": "object",
            "properties": {
              "tenants": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "type"
                    },
                    "id": {
                      "type": "number",
                      "title": "id"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "serviceName": {
                          "type": "string",
                          "title": "serviceName"
                        },
                        "privateDNS": {
                          "type": "string",
                          "title": "privateDNS"
                        },
                        "regions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "regions"
                        }
                      },
                      "required": [
                        "privateDNS",
                        "serviceName"
                      ],
                      "title": "info"
                    },
                    "ipAllowListCNAME": {
                      "type": "string",
                      "title": "ipAllowListCNAME"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "tenants"
              },
              "otlp": {
                "type": "object",
                "properties": {
                  "serviceName": {
                    "type": "string",
                    "title": "serviceName"
                  },
                  "privateDNS": {
                    "type": "string",
                    "title": "privateDNS"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "regions"
                  }
                },
                "required": [
                  "privateDNS",
                  "serviceName"
                ],
                "title": "otlp"
              },
              "pdc": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "object",
                    "properties": {
                      "serviceName": {
                        "type": "string",
                        "title": "serviceName"
                      },
                      "privateDNS": {
                        "type": "string",
                        "title": "privateDNS"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "regions"
                      }
                    },
                    "required": [
                      "privateDNS",
                      "serviceName"
                    ],
                    "title": "api"
                  },
                  "gateway": {
                    "type": "object",
                    "properties": {
                      "serviceName": {
                        "type": "string",
                        "title": "serviceName"
                      },
                      "privateDNS": {
                        "type": "string",
                        "title": "privateDNS"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "regions"
                      }
                    },
                    "required": [
                      "privateDNS",
                      "serviceName"
                    ],
                    "title": "gateway"
                  }
                },
                "required": [
                  "api",
                  "gateway"
                ],
                "title": "pdc"
              }
            },
            "required": [
              "tenants"
            ],
            "title": "privateConnectivityInfo"
          },
          "appPlatform": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "title": "url"
              },
              "caData": {
                "type": "string",
                "title": "caData",
                "nullable": true
              }
            },
            "required": [
              "url"
            ],
            "title": "appPlatform"
          },
          "influxUrl": {
            "type": "string",
            "title": "influxUrl",
            "nullable": true
          },
          "otlpHttpUrl": {
            "type": "string",
            "title": "otlpHttpUrl",
            "nullable": true
          },
          "oncallApiUrl": {
            "type": "string",
            "title": "oncallApiUrl",
            "nullable": true
          }
        },
        "required": [
          "privateConnectivityInfo"
        ]
      },
      "OrgMemberListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "title": "id"
                },
                "orgId": {
                  "type": "number",
                  "title": "orgId"
                },
                "userId": {
                  "type": "number",
                  "title": "userId"
                },
                "status": {
                  "type": "number",
                  "title": "status"
                },
                "createdAt": {
                  "type": "string",
                  "title": "createdAt"
                },
                "updatedAt": {
                  "type": "string",
                  "title": "updatedAt",
                  "nullable": true
                },
                "defaultOrg": {
                  "type": "number",
                  "title": "defaultOrg"
                },
                "role": {
                  "enum": [
                    "Admin",
                    "Editor",
                    "None",
                    "SSO Access",
                    "Viewer"
                  ],
                  "type": "string",
                  "title": "role"
                },
                "privacy": {
                  "type": "number",
                  "title": "privacy"
                },
                "billing": {
                  "type": "number",
                  "title": "billing"
                },
                "createdBy": {
                  "type": "string",
                  "title": "createdBy"
                },
                "updatedBy": {
                  "type": "string",
                  "title": "updatedBy"
                },
                "orgName": {
                  "type": "string",
                  "title": "orgName"
                },
                "orgSlug": {
                  "type": "string",
                  "title": "orgSlug"
                },
                "orgUrl": {
                  "type": "string",
                  "title": "orgUrl"
                },
                "grafanaCloud": {
                  "enum": [
                    0,
                    1,
                    11,
                    14,
                    15,
                    2,
                    31,
                    4,
                    41,
                    6,
                    9
                  ],
                  "type": "number",
                  "title": "grafanaCloud"
                },
                "resellerId": {
                  "type": "number",
                  "title": "resellerId",
                  "nullable": true
                },
                "contractTypeId": {
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "type": "number",
                  "title": "contractTypeId"
                },
                "allowGCloudTrial": {
                  "type": "boolean",
                  "title": "allowGCloudTrial"
                },
                "hlUsage": {
                  "type": "number",
                  "title": "hlUsage"
                },
                "hmCurrentGraphiteUsage": {
                  "type": "number",
                  "title": "hmCurrentGraphiteUsage"
                },
                "hmCurrentPrometheusUsage": {
                  "type": "number",
                  "title": "hmCurrentPrometheusUsage"
                },
                "hgDatasourceCnts": {
                  "type": "string",
                  "title": "hgDatasourceCnts"
                },
                "userFirstName": {
                  "type": "string",
                  "title": "userFirstName"
                },
                "userLastName": {
                  "type": "string",
                  "title": "userLastName"
                },
                "userUsername": {
                  "type": "string",
                  "title": "userUsername"
                },
                "userStatus": {
                  "type": "number",
                  "title": "userStatus"
                },
                "userEmail": {
                  "type": "string",
                  "title": "userEmail"
                },
                "userName": {
                  "type": "string",
                  "title": "userName"
                },
                "subscriptions": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "object",
                          "properties": {
                            "product": {
                              "title": "product",
                              "nullable": true
                            },
                            "isTrial": {
                              "type": "boolean",
                              "enum": [
                                false
                              ],
                              "title": "isTrial"
                            },
                            "startDate": {
                              "title": "startDate",
                              "nullable": true
                            },
                            "endDate": {
                              "title": "endDate",
                              "nullable": true
                            },
                            "payload": {
                              "type": "object",
                              "title": "payload"
                            },
                            "plan": {
                              "title": "plan",
                              "nullable": true
                            },
                            "publicName": {
                              "title": "publicName",
                              "nullable": true
                            },
                            "enterprisePluginsAdded": {
                              "type": "boolean",
                              "enum": [
                                false
                              ],
                              "title": "enterprisePluginsAdded"
                            },
                            "planBillingCycle": {
                              "title": "planBillingCycle",
                              "nullable": true
                            }
                          },
                          "required": [
                            "endDate",
                            "enterprisePluginsAdded",
                            "isTrial",
                            "payload",
                            "plan",
                            "planBillingCycle",
                            "product",
                            "publicName",
                            "startDate"
                          ],
                          "title": "current"
                        },
                        "next": {
                          "title": "next",
                          "nullable": true
                        }
                      },
                      "required": [
                        "current",
                        "next"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "object",
                          "properties": {
                            "product": {
                              "enum": [
                                "grafana-cloud-advanced",
                                "grafana-cloud-fedramp",
                                "grafana-cloud-free",
                                "grafana-cloud-pro",
                                "grafana-cloud-ss-advanced"
                              ],
                              "type": "string",
                              "title": "product"
                            },
                            "isTrial": {
                              "type": "boolean",
                              "title": "isTrial"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "title": "startDate"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "title": "endDate"
                            },
                            "payload": {
                              "type": "object",
                              "additionalProperties": {},
                              "properties": {
                                "withAddons": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "withAddons"
                                },
                                "licenseAllPlugins": {
                                  "type": "boolean",
                                  "title": "licenseAllPlugins"
                                },
                                "caseId": {
                                  "type": "string",
                                  "title": "caseId"
                                }
                              },
                              "title": "payload"
                            },
                            "plan": {
                              "type": "string",
                              "title": "plan",
                              "nullable": true
                            },
                            "publicName": {
                              "type": "string",
                              "title": "publicName",
                              "nullable": true
                            },
                            "enterprisePluginsAdded": {
                              "type": "boolean",
                              "title": "enterprisePluginsAdded"
                            },
                            "planBillingCycle": {
                              "type": "string",
                              "title": "planBillingCycle"
                            }
                          },
                          "required": [
                            "endDate",
                            "enterprisePluginsAdded",
                            "isTrial",
                            "payload",
                            "plan",
                            "planBillingCycle",
                            "product",
                            "publicName",
                            "startDate"
                          ],
                          "title": "current"
                        },
                        "next": {
                          "type": "object",
                          "properties": {
                            "product": {
                              "enum": [
                                "grafana-cloud-advanced",
                                "grafana-cloud-fedramp",
                                "grafana-cloud-free",
                                "grafana-cloud-pro",
                                "grafana-cloud-ss-advanced"
                              ],
                              "type": "string",
                              "title": "product"
                            },
                            "payload": {
                              "type": "object",
                              "additionalProperties": {},
                              "properties": {
                                "withAddons": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "withAddons"
                                },
                                "licenseAllPlugins": {
                                  "type": "boolean",
                                  "title": "licenseAllPlugins"
                                },
                                "caseId": {
                                  "type": "string",
                                  "title": "caseId"
                                }
                              },
                              "title": "payload"
                            },
                            "plan": {
                              "type": "string",
                              "title": "plan",
                              "nullable": true
                            },
                            "publicName": {
                              "type": "string",
                              "title": "publicName",
                              "nullable": true
                            }
                          },
                          "required": [
                            "payload",
                            "plan",
                            "product",
                            "publicName"
                          ],
                          "title": "next"
                        }
                      },
                      "required": [
                        "current",
                        "next"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "object",
                          "properties": {
                            "product": {
                              "enum": [
                                "grafana-cloud-advanced",
                                "grafana-cloud-fedramp",
                                "grafana-cloud-free",
                                "grafana-cloud-pro",
                                "grafana-cloud-ss-advanced"
                              ],
                              "type": "string",
                              "title": "product"
                            },
                            "isTrial": {
                              "type": "boolean",
                              "title": "isTrial"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "title": "startDate"
                            },
                            "endDate": {
                              "title": "endDate",
                              "nullable": true
                            },
                            "payload": {
                              "type": "object",
                              "additionalProperties": {},
                              "properties": {
                                "withAddons": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "title": "withAddons"
                                },
                                "licenseAllPlugins": {
                                  "type": "boolean",
                                  "title": "licenseAllPlugins"
                                },
                                "caseId": {
                                  "type": "string",
                                  "title": "caseId"
                                }
                              },
                              "title": "payload"
                            },
                            "plan": {
                              "type": "string",
                              "title": "plan",
                              "nullable": true
                            },
                            "publicName": {
                              "type": "string",
                              "title": "publicName",
                              "nullable": true
                            },
                            "enterprisePluginsAdded": {
                              "type": "boolean",
                              "title": "enterprisePluginsAdded"
                            },
                            "planBillingCycle": {
                              "type": "string",
                              "title": "planBillingCycle"
                            }
                          },
                          "required": [
                            "endDate",
                            "enterprisePluginsAdded",
                            "isTrial",
                            "payload",
                            "plan",
                            "planBillingCycle",
                            "product",
                            "publicName",
                            "startDate"
                          ],
                          "title": "current"
                        },
                        "next": {
                          "title": "next",
                          "nullable": true
                        }
                      },
                      "required": [
                        "current",
                        "next"
                      ]
                    }
                  ],
                  "title": "subscriptions"
                },
                "marketplaceSubscription": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": [
                            "aws",
                            "azure",
                            "gcp"
                          ],
                          "title": "provider"
                        },
                        "isLegacy": {
                          "type": "boolean",
                          "title": "isLegacy"
                        }
                      },
                      "required": [
                        "isLegacy",
                        "provider"
                      ],
                      "nullable": true
                    }
                  ],
                  "title": "marketplaceSubscription"
                },
                "extraPermissions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "accesspolicies:write",
                      "orgs:read",
                      "support-ticket-comments:write",
                      "support-tickets:read",
                      "support-tickets:write"
                    ],
                    "type": "string"
                  },
                  "title": "extraPermissions"
                },
                "grafanaStaffAccess": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accessExpiresAt": {
                          "type": "string",
                          "format": "date-time",
                          "title": "accessExpiresAt"
                        },
                        "ticketId": {
                          "type": "number",
                          "title": "ticketId",
                          "nullable": true
                        },
                        "publicReason": {
                          "type": "string",
                          "title": "publicReason",
                          "nullable": true
                        }
                      },
                      "required": [
                        "accessExpiresAt"
                      ],
                      "nullable": true
                    }
                  ],
                  "title": "grafanaStaffAccess"
                }
              },
              "required": [
                "allowGCloudTrial",
                "billing",
                "contractTypeId",
                "createdAt",
                "createdBy",
                "defaultOrg",
                "grafanaCloud",
                "hgDatasourceCnts",
                "hlUsage",
                "hmCurrentGraphiteUsage",
                "hmCurrentPrometheusUsage",
                "id",
                "marketplaceSubscription",
                "orgId",
                "orgName",
                "orgSlug",
                "orgUrl",
                "privacy",
                "resellerId",
                "role",
                "status",
                "subscriptions",
                "updatedAt",
                "updatedBy",
                "userEmail",
                "userFirstName",
                "userId",
                "userLastName",
                "userName",
                "userStatus",
                "userUsername"
              ]
            },
            "title": "items"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          },
          "total": {
            "type": "number",
            "title": "total"
          },
          "pages": {
            "type": "number",
            "title": "pages"
          },
          "page": {
            "type": "number",
            "title": "page"
          },
          "perPage": {
            "type": "number",
            "title": "perPage"
          },
          "totalCount": {
            "type": "number",
            "title": "totalCount"
          },
          "orderBy": {
            "type": "string",
            "title": "orderBy"
          },
          "direction": {
            "type": "string",
            "title": "direction"
          },
          "cursor": {
            "type": "number",
            "title": "cursor"
          },
          "nextCursor": {
            "type": "number",
            "title": "nextCursor"
          }
        },
        "required": [
          "items",
          "links"
        ]
      },
      "FormattedOrgMembership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "title": "id"
          },
          "orgId": {
            "type": "number",
            "title": "orgId"
          },
          "userId": {
            "type": "number",
            "title": "userId"
          },
          "status": {
            "type": "number",
            "title": "status"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt",
            "nullable": true
          },
          "defaultOrg": {
            "type": "number",
            "title": "defaultOrg"
          },
          "role": {
            "enum": [
              "Admin",
              "Editor",
              "None",
              "SSO Access",
              "Viewer"
            ],
            "type": "string",
            "title": "role"
          },
          "privacy": {
            "type": "number",
            "title": "privacy"
          },
          "billing": {
            "type": "number",
            "title": "billing"
          },
          "createdBy": {
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "type": "string",
            "title": "updatedBy"
          },
          "orgName": {
            "type": "string",
            "title": "orgName"
          },
          "orgSlug": {
            "type": "string",
            "title": "orgSlug"
          },
          "orgUrl": {
            "type": "string",
            "title": "orgUrl"
          },
          "grafanaCloud": {
            "enum": [
              0,
              1,
              11,
              14,
              15,
              2,
              31,
              4,
              41,
              6,
              9
            ],
            "type": "number",
            "title": "grafanaCloud"
          },
          "resellerId": {
            "type": "number",
            "title": "resellerId",
            "nullable": true
          },
          "contractTypeId": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "number",
            "title": "contractTypeId"
          },
          "allowGCloudTrial": {
            "type": "boolean",
            "title": "allowGCloudTrial"
          },
          "hlUsage": {
            "type": "number",
            "title": "hlUsage"
          },
          "hmCurrentGraphiteUsage": {
            "type": "number",
            "title": "hmCurrentGraphiteUsage"
          },
          "hmCurrentPrometheusUsage": {
            "type": "number",
            "title": "hmCurrentPrometheusUsage"
          },
          "hgDatasourceCnts": {
            "type": "string",
            "title": "hgDatasourceCnts"
          },
          "userFirstName": {
            "type": "string",
            "title": "userFirstName"
          },
          "userLastName": {
            "type": "string",
            "title": "userLastName"
          },
          "userUsername": {
            "type": "string",
            "title": "userUsername"
          },
          "userStatus": {
            "type": "number",
            "title": "userStatus"
          },
          "userEmail": {
            "type": "string",
            "title": "userEmail"
          },
          "userName": {
            "type": "string",
            "title": "userName"
          },
          "subscriptions": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "title": "product",
                        "nullable": true
                      },
                      "isTrial": {
                        "type": "boolean",
                        "enum": [
                          false
                        ],
                        "title": "isTrial"
                      },
                      "startDate": {
                        "title": "startDate",
                        "nullable": true
                      },
                      "endDate": {
                        "title": "endDate",
                        "nullable": true
                      },
                      "payload": {
                        "type": "object",
                        "title": "payload"
                      },
                      "plan": {
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "enum": [
                          false
                        ],
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "title": "planBillingCycle",
                        "nullable": true
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "title": "next",
                    "nullable": true
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "isTrial": {
                        "type": "boolean",
                        "title": "isTrial"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "startDate"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "endDate"
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "type": "string",
                        "title": "planBillingCycle"
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      }
                    },
                    "required": [
                      "payload",
                      "plan",
                      "product",
                      "publicName"
                    ],
                    "title": "next"
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "isTrial": {
                        "type": "boolean",
                        "title": "isTrial"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "startDate"
                      },
                      "endDate": {
                        "title": "endDate",
                        "nullable": true
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "type": "string",
                        "title": "planBillingCycle"
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "title": "next",
                    "nullable": true
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              }
            ],
            "title": "subscriptions"
          },
          "marketplaceSubscription": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "aws",
                      "azure",
                      "gcp"
                    ],
                    "title": "provider"
                  },
                  "isLegacy": {
                    "type": "boolean",
                    "title": "isLegacy"
                  }
                },
                "required": [
                  "isLegacy",
                  "provider"
                ],
                "nullable": true
              }
            ],
            "title": "marketplaceSubscription"
          },
          "extraPermissions": {
            "type": "array",
            "items": {
              "enum": [
                "accesspolicies:write",
                "orgs:read",
                "support-ticket-comments:write",
                "support-tickets:read",
                "support-tickets:write"
              ],
              "type": "string"
            },
            "title": "extraPermissions"
          },
          "grafanaStaffAccess": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "accessExpiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "title": "accessExpiresAt"
                  },
                  "ticketId": {
                    "type": "number",
                    "title": "ticketId",
                    "nullable": true
                  },
                  "publicReason": {
                    "type": "string",
                    "title": "publicReason",
                    "nullable": true
                  }
                },
                "required": [
                  "accessExpiresAt"
                ],
                "nullable": true
              }
            ],
            "title": "grafanaStaffAccess"
          }
        },
        "required": [
          "allowGCloudTrial",
          "billing",
          "contractTypeId",
          "createdAt",
          "createdBy",
          "defaultOrg",
          "grafanaCloud",
          "hgDatasourceCnts",
          "hlUsage",
          "hmCurrentGraphiteUsage",
          "hmCurrentPrometheusUsage",
          "id",
          "marketplaceSubscription",
          "orgId",
          "orgName",
          "orgSlug",
          "orgUrl",
          "privacy",
          "resellerId",
          "role",
          "status",
          "subscriptions",
          "updatedAt",
          "updatedBy",
          "userEmail",
          "userFirstName",
          "userId",
          "userLastName",
          "userName",
          "userStatus",
          "userUsername"
        ]
      },
      "FormattedApiOrgPublic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "title": "id"
          },
          "slug": {
            "type": "string",
            "title": "slug"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "url": {
            "type": "string",
            "title": "url"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "type": "string",
            "title": "createdBy",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "title": "updatedBy",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "title": "avatar",
            "nullable": true
          },
          "checksPerMonth": {
            "type": "number",
            "title": "checksPerMonth"
          },
          "wpPlan": {
            "type": "string",
            "title": "wpPlan"
          },
          "hgInstanceLimit": {
            "type": "number",
            "title": "hgInstanceLimit"
          },
          "hmInstanceLimit": {
            "type": "number",
            "title": "hmInstanceLimit"
          },
          "hlInstanceLimit": {
            "type": "number",
            "title": "hlInstanceLimit"
          },
          "userQuota": {
            "type": "number",
            "title": "userQuota"
          },
          "supportPlan": {
            "type": "string",
            "title": "supportPlan"
          },
          "creditApproved": {
            "type": "number",
            "title": "creditApproved"
          },
          "msaSignedAt": {
            "type": "string",
            "title": "msaSignedAt",
            "nullable": true
          },
          "msaSignedBy": {
            "type": "string",
            "title": "msaSignedBy",
            "nullable": true
          },
          "enterprisePlugins": {
            "type": "number",
            "title": "enterprisePlugins"
          },
          "licenseProducts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "licenseProducts"
          },
          "grafanaCloud": {
            "enum": [
              0,
              1,
              11,
              14,
              15,
              2,
              31,
              4,
              41,
              6,
              9
            ],
            "type": "number",
            "title": "grafanaCloud"
          },
          "privacy": {
            "type": "string",
            "title": "privacy"
          },
          "reseller": {
            "type": "string",
            "title": "reseller"
          },
          "resellerId": {
            "type": "number",
            "title": "resellerId",
            "nullable": true
          },
          "resellerName": {
            "type": "string",
            "title": "resellerName",
            "nullable": true
          },
          "emergencySupport": {
            "type": "boolean",
            "title": "emergencySupport"
          },
          "gcloudMonthlyCost": {
            "type": "number",
            "title": "gcloudMonthlyCost"
          },
          "hgUsage": {
            "type": "number",
            "title": "hgUsage"
          },
          "hgCurrentActiveUsers": {
            "type": "number",
            "title": "hgCurrentActiveUsers"
          },
          "hgGrafanaUsage": {
            "type": "number",
            "title": "hgGrafanaUsage"
          },
          "hgOnCallUsage": {
            "type": "number",
            "title": "hgOnCallUsage"
          },
          "hmUsage": {
            "type": "number",
            "title": "hmUsage"
          },
          "hmCurrentUsage": {
            "type": "number",
            "title": "hmCurrentUsage"
          },
          "hmGraphiteUsage": {
            "type": "number",
            "title": "hmGraphiteUsage"
          },
          "hlUsage": {
            "type": "number",
            "title": "hlUsage"
          },
          "hlRetentionUsage": {
            "type": "number",
            "title": "hlRetentionUsage"
          },
          "htUsage": {
            "type": "number",
            "title": "htUsage"
          },
          "hpUsage": {
            "type": "number",
            "title": "hpUsage"
          },
          "irmUsage": {
            "type": "number",
            "title": "irmUsage"
          },
          "k6VuhUsage": {
            "type": "number",
            "title": "k6VuhUsage"
          },
          "k6IPUsage": {
            "type": "number",
            "title": "k6IPUsage"
          },
          "feO11YUsage": {
            "type": "number",
            "title": "feO11YUsage"
          },
          "appO11YUsage": {
            "type": "number",
            "title": "appO11YUsage"
          },
          "smUsage": {
            "type": "number",
            "title": "smUsage"
          },
          "infraO11YHostsUsage": {
            "type": "number",
            "title": "infraO11YHostsUsage"
          },
          "infraO11YContainersUsage": {
            "type": "number",
            "title": "infraO11YContainersUsage"
          },
          "geUsersUsage": {
            "type": "number",
            "title": "geUsersUsage"
          },
          "geInstancesUsage": {
            "type": "number",
            "title": "geInstancesUsage"
          },
          "smBrowserUsage": {
            "type": "number",
            "title": "smBrowserUsage"
          },
          "awsMarketplaceSupport": {
            "type": "number",
            "title": "awsMarketplaceSupport"
          },
          "trialStartDate": {
            "type": "string",
            "title": "trialStartDate",
            "nullable": true
          },
          "trialEndDate": {
            "type": "string",
            "title": "trialEndDate",
            "nullable": true
          },
          "trialLengthDays": {
            "type": "number",
            "title": "trialLengthDays",
            "nullable": true
          },
          "trialNoticeDate": {
            "type": "string",
            "title": "trialNoticeDate",
            "nullable": true
          },
          "cancellationDate": {
            "type": "string",
            "title": "cancellationDate",
            "nullable": true
          },
          "retainedStackId": {
            "type": "number",
            "title": "retainedStackId"
          },
          "allowGCloudTrial": {
            "type": "boolean",
            "title": "allowGCloudTrial"
          },
          "pluginSignatureType": {
            "type": "string",
            "title": "pluginSignatureType"
          },
          "contractType": {
            "type": "string",
            "title": "contractType"
          },
          "contractTypeId": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "number",
            "title": "contractTypeId"
          },
          "liveChatEnabled": {
            "type": "boolean",
            "title": "liveChatEnabled"
          },
          "disableTokenExpirationEmails": {
            "type": "boolean",
            "title": "disableTokenExpirationEmails"
          },
          "maxTokenExpirationDays": {
            "type": "number",
            "title": "maxTokenExpirationDays"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          },
          "subscriptions": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "title": "product",
                        "nullable": true
                      },
                      "isTrial": {
                        "type": "boolean",
                        "enum": [
                          false
                        ],
                        "title": "isTrial"
                      },
                      "startDate": {
                        "title": "startDate",
                        "nullable": true
                      },
                      "endDate": {
                        "title": "endDate",
                        "nullable": true
                      },
                      "payload": {
                        "type": "object",
                        "title": "payload"
                      },
                      "plan": {
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "enum": [
                          false
                        ],
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "title": "planBillingCycle",
                        "nullable": true
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "title": "next",
                    "nullable": true
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "isTrial": {
                        "type": "boolean",
                        "title": "isTrial"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "startDate"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "endDate"
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "type": "string",
                        "title": "planBillingCycle"
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      }
                    },
                    "required": [
                      "payload",
                      "plan",
                      "product",
                      "publicName"
                    ],
                    "title": "next"
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "enum": [
                          "grafana-cloud-advanced",
                          "grafana-cloud-fedramp",
                          "grafana-cloud-free",
                          "grafana-cloud-pro",
                          "grafana-cloud-ss-advanced"
                        ],
                        "type": "string",
                        "title": "product"
                      },
                      "isTrial": {
                        "type": "boolean",
                        "title": "isTrial"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "startDate"
                      },
                      "endDate": {
                        "title": "endDate",
                        "nullable": true
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                          "withAddons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "withAddons"
                          },
                          "licenseAllPlugins": {
                            "type": "boolean",
                            "title": "licenseAllPlugins"
                          },
                          "caseId": {
                            "type": "string",
                            "title": "caseId"
                          }
                        },
                        "title": "payload"
                      },
                      "plan": {
                        "type": "string",
                        "title": "plan",
                        "nullable": true
                      },
                      "publicName": {
                        "type": "string",
                        "title": "publicName",
                        "nullable": true
                      },
                      "enterprisePluginsAdded": {
                        "type": "boolean",
                        "title": "enterprisePluginsAdded"
                      },
                      "planBillingCycle": {
                        "type": "string",
                        "title": "planBillingCycle"
                      }
                    },
                    "required": [
                      "endDate",
                      "enterprisePluginsAdded",
                      "isTrial",
                      "payload",
                      "plan",
                      "planBillingCycle",
                      "product",
                      "publicName",
                      "startDate"
                    ],
                    "title": "current"
                  },
                  "next": {
                    "title": "next",
                    "nullable": true
                  }
                },
                "required": [
                  "current",
                  "next"
                ]
              }
            ],
            "title": "subscriptions"
          }
        },
        "required": [
          "allowGCloudTrial",
          "appO11YUsage",
          "avatar",
          "awsMarketplaceSupport",
          "cancellationDate",
          "checksPerMonth",
          "contractType",
          "contractTypeId",
          "createdAt",
          "createdBy",
          "creditApproved",
          "disableTokenExpirationEmails",
          "emergencySupport",
          "enterprisePlugins",
          "feO11YUsage",
          "gcloudMonthlyCost",
          "geInstancesUsage",
          "geUsersUsage",
          "grafanaCloud",
          "hgCurrentActiveUsers",
          "hgGrafanaUsage",
          "hgInstanceLimit",
          "hgOnCallUsage",
          "hgUsage",
          "hlInstanceLimit",
          "hlRetentionUsage",
          "hlUsage",
          "hmCurrentUsage",
          "hmGraphiteUsage",
          "hmInstanceLimit",
          "hmUsage",
          "hpUsage",
          "htUsage",
          "id",
          "infraO11YContainersUsage",
          "infraO11YHostsUsage",
          "irmUsage",
          "k6IPUsage",
          "k6VuhUsage",
          "licenseProducts",
          "links",
          "liveChatEnabled",
          "maxTokenExpirationDays",
          "msaSignedAt",
          "msaSignedBy",
          "name",
          "pluginSignatureType",
          "privacy",
          "reseller",
          "resellerId",
          "resellerName",
          "retainedStackId",
          "slug",
          "smBrowserUsage",
          "smUsage",
          "subscriptions",
          "supportPlan",
          "trialEndDate",
          "trialLengthDays",
          "trialNoticeDate",
          "trialStartDate",
          "updatedAt",
          "updatedBy",
          "url",
          "userQuota",
          "wpPlan"
        ]
      },
      "FormattedApiPlugin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "id": {
            "type": "number",
            "title": "id"
          },
          "typeId": {
            "type": "number",
            "title": "typeId"
          },
          "typeName": {
            "type": "string",
            "title": "typeName"
          },
          "typeCode": {
            "type": "string",
            "title": "typeCode"
          },
          "slug": {
            "type": "string",
            "title": "slug"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "description": {
            "type": "string",
            "title": "description"
          },
          "version": {
            "type": "string",
            "title": "version"
          },
          "versionStatus": {
            "type": "string",
            "title": "versionStatus"
          },
          "versionSignatureType": {
            "type": "string",
            "title": "versionSignatureType"
          },
          "versionSignedByOrg": {
            "type": "string",
            "title": "versionSignedByOrg"
          },
          "versionSignedByOrgName": {
            "type": "string",
            "title": "versionSignedByOrgName"
          },
          "userId": {
            "type": "number",
            "title": "userId"
          },
          "orgId": {
            "type": "number",
            "title": "orgId"
          },
          "orgName": {
            "type": "string",
            "title": "orgName"
          },
          "orgSlug": {
            "type": "string",
            "title": "orgSlug"
          },
          "orgUrl": {
            "type": "string",
            "title": "orgUrl"
          },
          "url": {
            "type": "string",
            "title": "url"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt"
          },
          "downloads": {
            "type": "number",
            "title": "downloads"
          },
          "verified": {
            "type": "boolean",
            "title": "verified"
          },
          "featured": {
            "type": "number",
            "title": "featured"
          },
          "internal": {
            "type": "boolean",
            "title": "internal"
          },
          "downloadSlug": {
            "type": "string",
            "title": "downloadSlug"
          },
          "popularity": {
            "type": "number",
            "title": "popularity"
          },
          "signatureType": {
            "type": "string",
            "title": "signatureType"
          },
          "packages": {
            "type": "object",
            "title": "packages"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "rel"
                },
                "href": {
                  "type": "string",
                  "title": "href"
                }
              },
              "required": [
                "href",
                "rel"
              ]
            },
            "title": "links"
          },
          "angularDetected": {
            "type": "boolean",
            "title": "angularDetected"
          },
          "lastCommitDate": {
            "type": "string",
            "title": "lastCommitDate"
          },
          "licenseUrl": {
            "type": "string",
            "title": "licenseUrl"
          },
          "documentationUrl": {
            "type": "string",
            "title": "documentationUrl"
          }
        },
        "required": [
          "angularDetected",
          "createdAt",
          "description",
          "downloadSlug",
          "downloads",
          "featured",
          "id",
          "internal",
          "lastCommitDate",
          "links",
          "name",
          "orgId",
          "orgName",
          "orgSlug",
          "orgUrl",
          "packages",
          "popularity",
          "signatureType",
          "slug",
          "status",
          "typeCode",
          "typeId",
          "typeName",
          "updatedAt",
          "url",
          "userId",
          "verified",
          "version",
          "versionSignatureType",
          "versionSignedByOrg",
          "versionSignedByOrgName",
          "versionStatus"
        ]
      },
      "FormattedApiStackRegion": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "title": "id"
              },
              "status": {
                "type": "string",
                "title": "status"
              },
              "visibility": {
                "type": "string",
                "title": "visibility"
              },
              "slug": {
                "type": "string",
                "title": "slug"
              },
              "name": {
                "type": "string",
                "title": "name"
              },
              "publicName": {
                "type": "string",
                "title": "publicName"
              },
              "description": {
                "type": "string",
                "title": "description"
              },
              "provider": {
                "enum": [
                  "aws",
                  "azure",
                  "fedramp-palantir",
                  "gcp"
                ],
                "type": "string",
                "title": "provider"
              },
              "createdAt": {
                "type": "string",
                "title": "createdAt"
              },
              "updatedAt": {
                "type": "string",
                "title": "updatedAt",
                "nullable": true
              },
              "sortOrder": {
                "type": "number",
                "title": "sortOrder"
              }
            },
            "required": [
              "createdAt",
              "description",
              "id",
              "name",
              "provider",
              "publicName",
              "slug",
              "sortOrder",
              "status",
              "updatedAt",
              "visibility"
            ]
          },
          {
            "type": "object",
            "properties": {
              "stackStateServiceUrl": {
                "type": "string",
                "title": "stackStateServiceUrl"
              },
              "syntheticMonitoringApiUrl": {
                "type": "string",
                "title": "syntheticMonitoringApiUrl"
              },
              "insightsApiUrl": {
                "type": "string",
                "title": "insightsApiUrl"
              },
              "integrationsApiUrl": {
                "type": "string",
                "title": "integrationsApiUrl"
              },
              "hostedExportersApiUrl": {
                "type": "string",
                "title": "hostedExportersApiUrl"
              },
              "machineLearningApiUrl": {
                "type": "string",
                "title": "machineLearningApiUrl"
              },
              "llmGatewayUrl": {
                "type": "string",
                "title": "llmGatewayUrl"
              },
              "assistantUrl": {
                "type": "string",
                "title": "assistantUrl"
              },
              "incidentApiUrl": {
                "type": "string",
                "title": "incidentApiUrl"
              },
              "oncallApiUrl": {
                "type": "string",
                "title": "oncallApiUrl"
              },
              "faroEndpointUrl": {
                "type": "string",
                "title": "faroEndpointUrl"
              },
              "pdcClusterSlug": {
                "type": "string",
                "title": "pdcClusterSlug"
              },
              "pdcPrivateConnectivityInfo": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "privateDNS": {
                        "type": "string",
                        "title": "privateDNS"
                      },
                      "serviceName": {
                        "type": "string",
                        "title": "serviceName"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "regions"
                      },
                      "endpointName": {
                        "type": "string",
                        "title": "endpointName"
                      },
                      "serviceId": {
                        "type": "string",
                        "title": "serviceId"
                      }
                    },
                    "required": [
                      "privateDNS",
                      "serviceName"
                    ],
                    "nullable": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "api": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "api"
                      },
                      "gateway": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "gateway"
                      }
                    },
                    "required": [
                      "api",
                      "gateway"
                    ],
                    "nullable": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "mimir": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "mimir"
                      },
                      "graphite": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "graphite"
                      },
                      "otlp": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "privateDNS": {
                                "type": "string",
                                "title": "privateDNS"
                              },
                              "serviceName": {
                                "type": "string",
                                "title": "serviceName"
                              },
                              "regions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "title": "regions"
                              },
                              "endpointName": {
                                "type": "string",
                                "title": "endpointName"
                              },
                              "serviceId": {
                                "type": "string",
                                "title": "serviceId"
                              }
                            },
                            "required": [
                              "privateDNS",
                              "serviceName"
                            ],
                            "nullable": true
                          }
                        ],
                        "title": "otlp"
                      }
                    },
                    "required": [
                      "mimir"
                    ],
                    "nullable": true
                  }
                ],
                "title": "pdcPrivateConnectivityInfo"
              },
              "otlpHttpUrl": {
                "type": "string",
                "title": "otlpHttpUrl",
                "nullable": true
              },
              "otlpPrivateConnectivityInfo": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "privateDNS": {
                        "type": "string",
                        "title": "privateDNS"
                      },
                      "serviceName": {
                        "type": "string",
                        "title": "serviceName"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "title": "regions"
                      },
                      "endpointName": {
                        "type": "string",
                        "title": "endpointName"
                      },
                      "serviceId": {
                        "type": "string",
                        "title": "serviceId"
                      }
                    },
                    "required": [
                      "privateDNS",
                      "serviceName"
                    ],
                    "nullable": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "api": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "api"
                      },
                      "gateway": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "gateway"
                      }
                    },
                    "required": [
                      "api",
                      "gateway"
                    ],
                    "nullable": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "mimir": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "mimir"
                      },
                      "graphite": {
                        "type": "object",
                        "properties": {
                          "privateDNS": {
                            "type": "string",
                            "title": "privateDNS"
                          },
                          "serviceName": {
                            "type": "string",
                            "title": "serviceName"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "regions"
                          },
                          "endpointName": {
                            "type": "string",
                            "title": "endpointName"
                          },
                          "serviceId": {
                            "type": "string",
                            "title": "serviceId"
                          }
                        },
                        "required": [
                          "privateDNS",
                          "serviceName"
                        ],
                        "title": "graphite"
                      },
                      "otlp": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "privateDNS": {
                                "type": "string",
                                "title": "privateDNS"
                              },
                              "serviceName": {
                                "type": "string",
                                "title": "serviceName"
                              },
                              "regions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "title": "regions"
                              },
                              "endpointName": {
                                "type": "string",
                                "title": "endpointName"
                              },
                              "serviceId": {
                                "type": "string",
                                "title": "serviceId"
                              }
                            },
                            "required": [
                              "privateDNS",
                              "serviceName"
                            ],
                            "nullable": true
                          }
                        ],
                        "title": "otlp"
                      }
                    },
                    "required": [
                      "mimir"
                    ],
                    "nullable": true
                  }
                ],
                "title": "otlpPrivateConnectivityInfo"
              },
              "authApiUrl": {
                "type": "string",
                "title": "authApiUrl"
              },
              "authApiTokenSet": {
                "type": "boolean",
                "title": "authApiTokenSet"
              },
              "hgClusterId": {
                "type": "number",
                "title": "hgClusterId"
              },
              "hgClusterSlug": {
                "type": "string",
                "title": "hgClusterSlug"
              },
              "hgClusterName": {
                "type": "string",
                "title": "hgClusterName"
              },
              "hgClusterUrl": {
                "type": "string",
                "title": "hgClusterUrl"
              },
              "hmPromClusterId": {
                "type": "number",
                "title": "hmPromClusterId"
              },
              "hmPromClusterSlug": {
                "type": "string",
                "title": "hmPromClusterSlug"
              },
              "hmPromClusterName": {
                "type": "string",
                "title": "hmPromClusterName"
              },
              "hmPromClusterUrl": {
                "type": "string",
                "title": "hmPromClusterUrl"
              },
              "hmGraphiteClusterId": {
                "type": "number",
                "title": "hmGraphiteClusterId"
              },
              "hmGraphiteClusterSlug": {
                "type": "string",
                "title": "hmGraphiteClusterSlug"
              },
              "hmGraphiteClusterName": {
                "type": "string",
                "title": "hmGraphiteClusterName"
              },
              "hmGraphiteClusterUrl": {
                "type": "string",
                "title": "hmGraphiteClusterUrl"
              },
              "hlClusterId": {
                "type": "number",
                "title": "hlClusterId"
              },
              "hlClusterSlug": {
                "type": "string",
                "title": "hlClusterSlug"
              },
              "hlClusterName": {
                "type": "string",
                "title": "hlClusterName"
              },
              "hlClusterUrl": {
                "type": "string",
                "title": "hlClusterUrl"
              },
              "amClusterId": {
                "type": "number",
                "title": "amClusterId"
              },
              "amClusterSlug": {
                "type": "string",
                "title": "amClusterSlug"
              },
              "amClusterName": {
                "type": "string",
                "title": "amClusterName"
              },
              "amClusterUrl": {
                "type": "string",
                "title": "amClusterUrl"
              },
              "htClusterId": {
                "type": "number",
                "title": "htClusterId"
              },
              "htClusterSlug": {
                "type": "string",
                "title": "htClusterSlug"
              },
              "htClusterName": {
                "type": "string",
                "title": "htClusterName"
              },
              "htClusterUrl": {
                "type": "string",
                "title": "htClusterUrl"
              },
              "hpClusterId": {
                "type": "number",
                "title": "hpClusterId"
              },
              "hpClusterSlug": {
                "type": "string",
                "title": "hpClusterSlug"
              },
              "hpClusterName": {
                "type": "string",
                "title": "hpClusterName"
              },
              "hpClusterUrl": {
                "type": "string",
                "title": "hpClusterUrl"
              },
              "agmClusterId": {
                "type": "number",
                "title": "agmClusterId"
              },
              "agmClusterSlug": {
                "type": "string",
                "title": "agmClusterSlug"
              },
              "agmClusterName": {
                "type": "string",
                "title": "agmClusterName"
              },
              "agmClusterUrl": {
                "type": "string",
                "title": "agmClusterUrl"
              },
              "assertsGraphClusterId": {
                "type": "number",
                "title": "assertsGraphClusterId"
              },
              "assertsGraphClusterSlug": {
                "type": "string",
                "title": "assertsGraphClusterSlug"
              },
              "assertsGraphClusterName": {
                "type": "string",
                "title": "assertsGraphClusterName"
              },
              "assertsGraphClusterApiUrl": {
                "type": "string",
                "title": "assertsGraphClusterApiUrl",
                "nullable": true
              },
              "providerRegion": {
                "type": "string",
                "title": "providerRegion"
              },
              "isStub": {
                "type": "boolean",
                "title": "isStub"
              },
              "geoLocation": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "title": "geoLocation"
              },
              "countryCode": {
                "type": "string",
                "title": "countryCode"
              },
              "complete": {
                "type": "boolean",
                "title": "complete"
              },
              "id": {
                "type": "number",
                "title": "id"
              },
              "status": {
                "type": "string",
                "title": "status"
              },
              "visibility": {
                "type": "string",
                "title": "visibility"
              },
              "slug": {
                "type": "string",
                "title": "slug"
              },
              "name": {
                "type": "string",
                "title": "name"
              },
              "publicName": {
                "type": "string",
                "title": "publicName"
              },
              "description": {
                "type": "string",
                "title": "description"
              },
              "provider": {
                "enum": [
                  "aws",
                  "azure",
                  "fedramp-palantir",
                  "gcp"
                ],
                "type": "string",
                "title": "provider"
              },
              "createdAt": {
                "type": "string",
                "title": "createdAt"
              },
              "updatedAt": {
                "type": "string",
                "title": "updatedAt",
                "nullable": true
              },
              "sortOrder": {
                "type": "number",
                "title": "sortOrder"
              }
            },
            "required": [
              "agmClusterId",
              "agmClusterName",
              "agmClusterSlug",
              "agmClusterUrl",
              "amClusterId",
              "amClusterName",
              "amClusterSlug",
              "amClusterUrl",
              "assertsGraphClusterId",
              "assertsGraphClusterName",
              "assertsGraphClusterSlug",
              "assistantUrl",
              "authApiTokenSet",
              "authApiUrl",
              "complete",
              "createdAt",
              "description",
              "faroEndpointUrl",
              "hgClusterId",
              "hgClusterName",
              "hgClusterSlug",
              "hgClusterUrl",
              "hlClusterId",
              "hlClusterName",
              "hlClusterSlug",
              "hlClusterUrl",
              "hmGraphiteClusterId",
              "hmGraphiteClusterName",
              "hmGraphiteClusterSlug",
              "hmGraphiteClusterUrl",
              "hmPromClusterId",
              "hmPromClusterName",
              "hmPromClusterSlug",
              "hmPromClusterUrl",
              "hostedExportersApiUrl",
              "hpClusterId",
              "hpClusterName",
              "hpClusterSlug",
              "hpClusterUrl",
              "htClusterId",
              "htClusterName",
              "htClusterSlug",
              "htClusterUrl",
              "id",
              "incidentApiUrl",
              "insightsApiUrl",
              "integrationsApiUrl",
              "isStub",
              "llmGatewayUrl",
              "machineLearningApiUrl",
              "name",
              "oncallApiUrl",
              "otlpHttpUrl",
              "otlpPrivateConnectivityInfo",
              "pdcClusterSlug",
              "pdcPrivateConnectivityInfo",
              "provider",
              "providerRegion",
              "publicName",
              "slug",
              "sortOrder",
              "stackStateServiceUrl",
              "status",
              "syntheticMonitoringApiUrl",
              "updatedAt",
              "visibility"
            ]
          }
        ]
      },
      "AuthTokenWithSecret": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "string",
                "example": "c45485b6-8321-4cf2-bcec-12006df755ff",
                "readOnly": true
              },
              "accessPolicyId": {
                "type": "string",
                "format": "string",
                "example": "c45485b6-8321-4cf2-bcec-12006df755ff"
              },
              "name": {
                "type": "string",
                "example": "mytoken"
              },
              "displayName": {
                "type": "string",
                "example": "My Token",
                "description": "Will be set to `name` if not provided."
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "Token does not expire if not provided."
              },
              "firstUsedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastUsedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "orgId": {
                "type": "string",
                "example": "1",
                "readOnly": true
              }
            },
            "required": [
              "accessPolicyId",
              "name"
            ]
          },
          {
            "properties": {
              "token": {
                "type": "string",
                "format": "password",
                "description": "This token is auto generated and will be shown only once.",
                "example": "glc_eyJrIjoiZjI0YzZkNGEwZDBmZmZjMmUzNTU2ODcxMmY0ZWZlNTQ1NTljMDFjOCIsIm4iOiJteXRva2VuIiwiaWQiOjF9"
              }
            }
          }
        ]
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "string",
            "example": "c45485b6-8321-4cf2-bcec-12006df755ff",
            "readOnly": true
          },
          "accessPolicyId": {
            "type": "string",
            "format": "string",
            "example": "c45485b6-8321-4cf2-bcec-12006df755ff"
          },
          "name": {
            "type": "string",
            "example": "mytoken"
          },
          "displayName": {
            "type": "string",
            "example": "My Token",
            "description": "Will be set to `name` if not provided."
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Token does not expire if not provided."
          },
          "firstUsedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orgId": {
            "type": "string",
            "example": "1",
            "readOnly": true
          }
        },
        "required": [
          "accessPolicyId",
          "name"
        ]
      },
      "ModifiedGetOrgBilledUsageResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "title": "total"
          },
          "page": {
            "type": "number",
            "title": "page"
          },
          "page_size": {
            "type": "number",
            "title": "page_size"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "usages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stackName": {
                        "type": "string",
                        "title": "stackName"
                      },
                      "stackLabels": {
                        "type": "object",
                        "title": "stackLabels"
                      }
                    },
                    "required": [
                      "stackLabels",
                      "stackName"
                    ]
                  },
                  "title": "usages"
                }
              },
              "required": [
                "usages"
              ]
            },
            "title": "items"
          }
        },
        "required": [
          "items",
          "page",
          "page_size",
          "total"
        ]
      },
      "OrgBilledUsageHistory": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "number",
                  "title": "month"
                },
                "year": {
                  "type": "number",
                  "title": "year"
                }
              },
              "required": [
                "month",
                "year"
              ]
            },
            "title": "items"
          }
        },
        "required": [
          "items"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "instances",
      "description": "Everything related to our Hosted Grafana Instances"
    }
  ]
}