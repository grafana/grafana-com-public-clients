/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the OtlpPrivateConnectivityInfoAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OtlpPrivateConnectivityInfoAnyOf{}

// OtlpPrivateConnectivityInfoAnyOf struct for OtlpPrivateConnectivityInfoAnyOf
type OtlpPrivateConnectivityInfoAnyOf struct {
	PrivateDNS           string `json:"privateDNS"`
	ServiceName          string `json:"serviceName"`
	AdditionalProperties map[string]interface{}
}

type _OtlpPrivateConnectivityInfoAnyOf OtlpPrivateConnectivityInfoAnyOf

// NewOtlpPrivateConnectivityInfoAnyOf instantiates a new OtlpPrivateConnectivityInfoAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtlpPrivateConnectivityInfoAnyOf(privateDNS string, serviceName string) *OtlpPrivateConnectivityInfoAnyOf {
	this := OtlpPrivateConnectivityInfoAnyOf{}
	this.PrivateDNS = privateDNS
	this.ServiceName = serviceName
	return &this
}

// NewOtlpPrivateConnectivityInfoAnyOfWithDefaults instantiates a new OtlpPrivateConnectivityInfoAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtlpPrivateConnectivityInfoAnyOfWithDefaults() *OtlpPrivateConnectivityInfoAnyOf {
	this := OtlpPrivateConnectivityInfoAnyOf{}
	return &this
}

// GetPrivateDNS returns the PrivateDNS field value
func (o *OtlpPrivateConnectivityInfoAnyOf) GetPrivateDNS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateDNS
}

// GetPrivateDNSOk returns a tuple with the PrivateDNS field value
// and a boolean to check if the value has been set.
func (o *OtlpPrivateConnectivityInfoAnyOf) GetPrivateDNSOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateDNS, true
}

// SetPrivateDNS sets field value
func (o *OtlpPrivateConnectivityInfoAnyOf) SetPrivateDNS(v string) {
	o.PrivateDNS = v
}

// GetServiceName returns the ServiceName field value
func (o *OtlpPrivateConnectivityInfoAnyOf) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *OtlpPrivateConnectivityInfoAnyOf) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *OtlpPrivateConnectivityInfoAnyOf) SetServiceName(v string) {
	o.ServiceName = v
}

func (o OtlpPrivateConnectivityInfoAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtlpPrivateConnectivityInfoAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["privateDNS"] = o.PrivateDNS
	toSerialize["serviceName"] = o.ServiceName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OtlpPrivateConnectivityInfoAnyOf) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varOtlpPrivateConnectivityInfoAnyOf := _OtlpPrivateConnectivityInfoAnyOf{}

	err = json.Unmarshal(data, &varOtlpPrivateConnectivityInfoAnyOf)

	if err != nil {
		return err
	}

	*o = OtlpPrivateConnectivityInfoAnyOf(varOtlpPrivateConnectivityInfoAnyOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "privateDNS")
		delete(additionalProperties, "serviceName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOtlpPrivateConnectivityInfoAnyOf struct {
	value *OtlpPrivateConnectivityInfoAnyOf
	isSet bool
}

func (v NullableOtlpPrivateConnectivityInfoAnyOf) Get() *OtlpPrivateConnectivityInfoAnyOf {
	return v.value
}

func (v *NullableOtlpPrivateConnectivityInfoAnyOf) Set(val *OtlpPrivateConnectivityInfoAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOtlpPrivateConnectivityInfoAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOtlpPrivateConnectivityInfoAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtlpPrivateConnectivityInfoAnyOf(val *OtlpPrivateConnectivityInfoAnyOf) *NullableOtlpPrivateConnectivityInfoAnyOf {
	return &NullableOtlpPrivateConnectivityInfoAnyOf{value: val, isSet: true}
}

func (v NullableOtlpPrivateConnectivityInfoAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtlpPrivateConnectivityInfoAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
