/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PostAccessPoliciesRequestAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccessPoliciesRequestAttributes{}

// PostAccessPoliciesRequestAttributes struct for PostAccessPoliciesRequestAttributes
type PostAccessPoliciesRequestAttributes struct {
	LokiQueryPolicy      *PostAccessPoliciesRequestAttributesLokiQueryPolicy `json:"lokiQueryPolicy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostAccessPoliciesRequestAttributes PostAccessPoliciesRequestAttributes

// NewPostAccessPoliciesRequestAttributes instantiates a new PostAccessPoliciesRequestAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccessPoliciesRequestAttributes() *PostAccessPoliciesRequestAttributes {
	this := PostAccessPoliciesRequestAttributes{}
	return &this
}

// NewPostAccessPoliciesRequestAttributesWithDefaults instantiates a new PostAccessPoliciesRequestAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccessPoliciesRequestAttributesWithDefaults() *PostAccessPoliciesRequestAttributes {
	this := PostAccessPoliciesRequestAttributes{}
	return &this
}

// GetLokiQueryPolicy returns the LokiQueryPolicy field value if set, zero value otherwise.
func (o *PostAccessPoliciesRequestAttributes) GetLokiQueryPolicy() PostAccessPoliciesRequestAttributesLokiQueryPolicy {
	if o == nil || IsNil(o.LokiQueryPolicy) {
		var ret PostAccessPoliciesRequestAttributesLokiQueryPolicy
		return ret
	}
	return *o.LokiQueryPolicy
}

// GetLokiQueryPolicyOk returns a tuple with the LokiQueryPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPoliciesRequestAttributes) GetLokiQueryPolicyOk() (*PostAccessPoliciesRequestAttributesLokiQueryPolicy, bool) {
	if o == nil || IsNil(o.LokiQueryPolicy) {
		return nil, false
	}
	return o.LokiQueryPolicy, true
}

// HasLokiQueryPolicy returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributes) HasLokiQueryPolicy() bool {
	if o != nil && !IsNil(o.LokiQueryPolicy) {
		return true
	}

	return false
}

// SetLokiQueryPolicy gets a reference to the given PostAccessPoliciesRequestAttributesLokiQueryPolicy and assigns it to the LokiQueryPolicy field.
func (o *PostAccessPoliciesRequestAttributes) SetLokiQueryPolicy(v PostAccessPoliciesRequestAttributesLokiQueryPolicy) {
	o.LokiQueryPolicy = &v
}

func (o PostAccessPoliciesRequestAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccessPoliciesRequestAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LokiQueryPolicy) {
		toSerialize["lokiQueryPolicy"] = o.LokiQueryPolicy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostAccessPoliciesRequestAttributes) UnmarshalJSON(data []byte) (err error) {
	varPostAccessPoliciesRequestAttributes := _PostAccessPoliciesRequestAttributes{}

	err = json.Unmarshal(data, &varPostAccessPoliciesRequestAttributes)

	if err != nil {
		return err
	}

	*o = PostAccessPoliciesRequestAttributes(varPostAccessPoliciesRequestAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lokiQueryPolicy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostAccessPoliciesRequestAttributes struct {
	value *PostAccessPoliciesRequestAttributes
	isSet bool
}

func (v NullablePostAccessPoliciesRequestAttributes) Get() *PostAccessPoliciesRequestAttributes {
	return v.value
}

func (v *NullablePostAccessPoliciesRequestAttributes) Set(val *PostAccessPoliciesRequestAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccessPoliciesRequestAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccessPoliciesRequestAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccessPoliciesRequestAttributes(val *PostAccessPoliciesRequestAttributes) *NullablePostAccessPoliciesRequestAttributes {
	return &NullablePostAccessPoliciesRequestAttributes{value: val, isSet: true}
}

func (v NullablePostAccessPoliciesRequestAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccessPoliciesRequestAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
