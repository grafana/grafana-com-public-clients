/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the FormattedApiInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormattedApiInstance{}

// FormattedApiInstance struct for FormattedApiInstance
type FormattedApiInstance struct {
	AlertCnt                          *float32               `json:"alertCnt,omitempty"`
	AlertQuota                        *float32               `json:"alertQuota,omitempty"`
	AmInstanceGeneratorUrl            *string                `json:"amInstanceGeneratorUrl,omitempty"`
	AmInstanceGeneratorUrlDatasource  *string                `json:"amInstanceGeneratorUrlDatasource,omitempty"`
	AmInstanceId                      *float32               `json:"amInstanceId,omitempty"`
	AmInstanceName                    *string                `json:"amInstanceName,omitempty"`
	AmInstanceStatus                  *string                `json:"amInstanceStatus,omitempty"`
	AmInstanceUrl                     *string                `json:"amInstanceUrl,omitempty"`
	BillingActiveUsers                *float32               `json:"billingActiveUsers,omitempty"`
	BillingEndDate                    *string                `json:"billingEndDate,omitempty"`
	BillingGrafanaActiveUsers         *float32               `json:"billingGrafanaActiveUsers,omitempty"`
	BillingOnCallActiveUsers          *float32               `json:"billingOnCallActiveUsers,omitempty"`
	BillingStartDate                  *string                `json:"billingStartDate,omitempty"`
	ClusterId                         *float32               `json:"clusterId,omitempty"`
	ClusterName                       *string                `json:"clusterName,omitempty"`
	ClusterSlug                       *string                `json:"clusterSlug,omitempty"`
	CreatedAt                         *string                `json:"createdAt,omitempty"`
	CreatedBy                         *string                `json:"createdBy,omitempty"`
	CurrentActiveAdminUsers           *float32               `json:"currentActiveAdminUsers,omitempty"`
	CurrentActiveEditorUsers          *float32               `json:"currentActiveEditorUsers,omitempty"`
	CurrentActiveUsers                *float32               `json:"currentActiveUsers,omitempty"`
	CurrentActiveViewerUsers          *float32               `json:"currentActiveViewerUsers,omitempty"`
	CustomAuth                        *bool                  `json:"customAuth,omitempty"`
	CustomDomain                      *bool                  `json:"customDomain,omitempty"`
	DailyAdminCnt                     *float32               `json:"dailyAdminCnt,omitempty"`
	DailyEditorCnt                    *float32               `json:"dailyEditorCnt,omitempty"`
	DailyUserCnt                      *float32               `json:"dailyUserCnt,omitempty"`
	DailyViewerCnt                    *float32               `json:"dailyViewerCnt,omitempty"`
	DashboardCnt                      *float32               `json:"dashboardCnt,omitempty"`
	DashboardQuota                    *float32               `json:"dashboardQuota,omitempty"`
	DatasourceCnts                    map[string]interface{} `json:"datasourceCnts,omitempty"`
	Description                       *string                `json:"description,omitempty"`
	Gateway                           *string                `json:"gateway,omitempty"`
	HlInstanceCurrentUsage            *float32               `json:"hlInstanceCurrentUsage,omitempty"`
	HlInstanceId                      *float32               `json:"hlInstanceId,omitempty"`
	HlInstanceName                    *string                `json:"hlInstanceName,omitempty"`
	HlInstanceStatus                  *string                `json:"hlInstanceStatus,omitempty"`
	HlInstanceUrl                     *string                `json:"hlInstanceUrl,omitempty"`
	HmInstanceGraphiteCurrentUsage    *float32               `json:"hmInstanceGraphiteCurrentUsage,omitempty"`
	HmInstanceGraphiteId              *float32               `json:"hmInstanceGraphiteId,omitempty"`
	HmInstanceGraphiteName            *string                `json:"hmInstanceGraphiteName,omitempty"`
	HmInstanceGraphiteStatus          *string                `json:"hmInstanceGraphiteStatus,omitempty"`
	HmInstanceGraphiteType            *string                `json:"hmInstanceGraphiteType,omitempty"`
	HmInstanceGraphiteUrl             *string                `json:"hmInstanceGraphiteUrl,omitempty"`
	HmInstancePromCurrentActiveSeries interface{}            `json:"hmInstancePromCurrentActiveSeries,omitempty"`
	HmInstancePromCurrentUsage        *float32               `json:"hmInstancePromCurrentUsage,omitempty"`
	HmInstancePromId                  *float32               `json:"hmInstancePromId,omitempty"`
	HmInstancePromName                *string                `json:"hmInstancePromName,omitempty"`
	HmInstancePromStatus              *string                `json:"hmInstancePromStatus,omitempty"`
	HmInstancePromUrl                 *string                `json:"hmInstancePromUrl,omitempty"`
	HtInstanceId                      *float32               `json:"htInstanceId,omitempty"`
	HtInstanceName                    *string                `json:"htInstanceName,omitempty"`
	HtInstanceStatus                  *string                `json:"htInstanceStatus,omitempty"`
	HtInstanceUrl                     *string                `json:"htInstanceUrl,omitempty"`
	HpInstanceId                      *float32               `json:"hpInstanceId,omitempty"`
	HpInstanceName                    *string                `json:"hpInstanceName,omitempty"`
	HpInstanceStatus                  *string                `json:"hpInstanceStatus,omitempty"`
	HpInstanceUrl                     *string                `json:"hpInstanceUrl,omitempty"`
	Id                                *float32               `json:"id,omitempty"`
	Incident                          *float32               `json:"incident,omitempty"`
	Labels                            map[string]interface{} `json:"labels,omitempty"`
	MachineLearning                   *float32               `json:"machineLearning,omitempty"`
	Name                              *string                `json:"name,omitempty"`
	OrgId                             *float32               `json:"orgId,omitempty"`
	OrgName                           *string                `json:"orgName,omitempty"`
	OrgSlug                           *string                `json:"orgSlug,omitempty"`
	Plan                              *string                `json:"plan,omitempty"`
	PlanName                          *string                `json:"planName,omitempty"`
	RegionId                          *float32               `json:"regionId,omitempty"`
	RegionSlug                        *string                `json:"regionSlug,omitempty"`
	RegionPublicName                  *string                `json:"regionPublicName,omitempty"`
	Provider                          *string                `json:"provider,omitempty"`
	ProviderRegion                    *string                `json:"providerRegion,omitempty"`
	RunningVersion                    *string                `json:"runningVersion,omitempty"`
	Slug                              *string                `json:"slug,omitempty"`
	Ssl                               *bool                  `json:"ssl,omitempty"`
	Status                            *string                `json:"status,omitempty"`
	Support                           *bool                  `json:"support,omitempty"`
	Trial                             *float32               `json:"trial,omitempty"`
	TrialExpiresAt                    NullableString         `json:"trialExpiresAt,omitempty"`
	UpdatedAt                         NullableString         `json:"updatedAt,omitempty"`
	UpdatedBy                         NullableString         `json:"updatedBy,omitempty"`
	Url                               *string                `json:"url,omitempty"`
	UserQuota                         *float32               `json:"userQuota,omitempty"`
	Version                           *string                `json:"version,omitempty"`
	AgentManagementInstanceId         *float32               `json:"agentManagementInstanceId,omitempty"`
	Config                            map[string]interface{} `json:"config,omitempty"`
	AdditionalProperties              map[string]interface{}
}

type _FormattedApiInstance FormattedApiInstance

// NewFormattedApiInstance instantiates a new FormattedApiInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormattedApiInstance() *FormattedApiInstance {
	this := FormattedApiInstance{}
	return &this
}

// NewFormattedApiInstanceWithDefaults instantiates a new FormattedApiInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormattedApiInstanceWithDefaults() *FormattedApiInstance {
	this := FormattedApiInstance{}
	return &this
}

// GetAlertCnt returns the AlertCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAlertCnt() float32 {
	if o == nil || IsNil(o.AlertCnt) {
		var ret float32
		return ret
	}
	return *o.AlertCnt
}

// GetAlertCntOk returns a tuple with the AlertCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAlertCntOk() (*float32, bool) {
	if o == nil || IsNil(o.AlertCnt) {
		return nil, false
	}
	return o.AlertCnt, true
}

// HasAlertCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAlertCnt() bool {
	if o != nil && !IsNil(o.AlertCnt) {
		return true
	}

	return false
}

// SetAlertCnt gets a reference to the given float32 and assigns it to the AlertCnt field.
func (o *FormattedApiInstance) SetAlertCnt(v float32) {
	o.AlertCnt = &v
}

// GetAlertQuota returns the AlertQuota field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAlertQuota() float32 {
	if o == nil || IsNil(o.AlertQuota) {
		var ret float32
		return ret
	}
	return *o.AlertQuota
}

// GetAlertQuotaOk returns a tuple with the AlertQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAlertQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.AlertQuota) {
		return nil, false
	}
	return o.AlertQuota, true
}

// HasAlertQuota returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAlertQuota() bool {
	if o != nil && !IsNil(o.AlertQuota) {
		return true
	}

	return false
}

// SetAlertQuota gets a reference to the given float32 and assigns it to the AlertQuota field.
func (o *FormattedApiInstance) SetAlertQuota(v float32) {
	o.AlertQuota = &v
}

// GetAmInstanceGeneratorUrl returns the AmInstanceGeneratorUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceGeneratorUrl() string {
	if o == nil || IsNil(o.AmInstanceGeneratorUrl) {
		var ret string
		return ret
	}
	return *o.AmInstanceGeneratorUrl
}

// GetAmInstanceGeneratorUrlOk returns a tuple with the AmInstanceGeneratorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceGeneratorUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AmInstanceGeneratorUrl) {
		return nil, false
	}
	return o.AmInstanceGeneratorUrl, true
}

// HasAmInstanceGeneratorUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceGeneratorUrl() bool {
	if o != nil && !IsNil(o.AmInstanceGeneratorUrl) {
		return true
	}

	return false
}

// SetAmInstanceGeneratorUrl gets a reference to the given string and assigns it to the AmInstanceGeneratorUrl field.
func (o *FormattedApiInstance) SetAmInstanceGeneratorUrl(v string) {
	o.AmInstanceGeneratorUrl = &v
}

// GetAmInstanceGeneratorUrlDatasource returns the AmInstanceGeneratorUrlDatasource field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceGeneratorUrlDatasource() string {
	if o == nil || IsNil(o.AmInstanceGeneratorUrlDatasource) {
		var ret string
		return ret
	}
	return *o.AmInstanceGeneratorUrlDatasource
}

// GetAmInstanceGeneratorUrlDatasourceOk returns a tuple with the AmInstanceGeneratorUrlDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceGeneratorUrlDatasourceOk() (*string, bool) {
	if o == nil || IsNil(o.AmInstanceGeneratorUrlDatasource) {
		return nil, false
	}
	return o.AmInstanceGeneratorUrlDatasource, true
}

// HasAmInstanceGeneratorUrlDatasource returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceGeneratorUrlDatasource() bool {
	if o != nil && !IsNil(o.AmInstanceGeneratorUrlDatasource) {
		return true
	}

	return false
}

// SetAmInstanceGeneratorUrlDatasource gets a reference to the given string and assigns it to the AmInstanceGeneratorUrlDatasource field.
func (o *FormattedApiInstance) SetAmInstanceGeneratorUrlDatasource(v string) {
	o.AmInstanceGeneratorUrlDatasource = &v
}

// GetAmInstanceId returns the AmInstanceId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceId() float32 {
	if o == nil || IsNil(o.AmInstanceId) {
		var ret float32
		return ret
	}
	return *o.AmInstanceId
}

// GetAmInstanceIdOk returns a tuple with the AmInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.AmInstanceId) {
		return nil, false
	}
	return o.AmInstanceId, true
}

// HasAmInstanceId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceId() bool {
	if o != nil && !IsNil(o.AmInstanceId) {
		return true
	}

	return false
}

// SetAmInstanceId gets a reference to the given float32 and assigns it to the AmInstanceId field.
func (o *FormattedApiInstance) SetAmInstanceId(v float32) {
	o.AmInstanceId = &v
}

// GetAmInstanceName returns the AmInstanceName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceName() string {
	if o == nil || IsNil(o.AmInstanceName) {
		var ret string
		return ret
	}
	return *o.AmInstanceName
}

// GetAmInstanceNameOk returns a tuple with the AmInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.AmInstanceName) {
		return nil, false
	}
	return o.AmInstanceName, true
}

// HasAmInstanceName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceName() bool {
	if o != nil && !IsNil(o.AmInstanceName) {
		return true
	}

	return false
}

// SetAmInstanceName gets a reference to the given string and assigns it to the AmInstanceName field.
func (o *FormattedApiInstance) SetAmInstanceName(v string) {
	o.AmInstanceName = &v
}

// GetAmInstanceStatus returns the AmInstanceStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceStatus() string {
	if o == nil || IsNil(o.AmInstanceStatus) {
		var ret string
		return ret
	}
	return *o.AmInstanceStatus
}

// GetAmInstanceStatusOk returns a tuple with the AmInstanceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AmInstanceStatus) {
		return nil, false
	}
	return o.AmInstanceStatus, true
}

// HasAmInstanceStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceStatus() bool {
	if o != nil && !IsNil(o.AmInstanceStatus) {
		return true
	}

	return false
}

// SetAmInstanceStatus gets a reference to the given string and assigns it to the AmInstanceStatus field.
func (o *FormattedApiInstance) SetAmInstanceStatus(v string) {
	o.AmInstanceStatus = &v
}

// GetAmInstanceUrl returns the AmInstanceUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAmInstanceUrl() string {
	if o == nil || IsNil(o.AmInstanceUrl) {
		var ret string
		return ret
	}
	return *o.AmInstanceUrl
}

// GetAmInstanceUrlOk returns a tuple with the AmInstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAmInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AmInstanceUrl) {
		return nil, false
	}
	return o.AmInstanceUrl, true
}

// HasAmInstanceUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAmInstanceUrl() bool {
	if o != nil && !IsNil(o.AmInstanceUrl) {
		return true
	}

	return false
}

// SetAmInstanceUrl gets a reference to the given string and assigns it to the AmInstanceUrl field.
func (o *FormattedApiInstance) SetAmInstanceUrl(v string) {
	o.AmInstanceUrl = &v
}

// GetBillingActiveUsers returns the BillingActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetBillingActiveUsers() float32 {
	if o == nil || IsNil(o.BillingActiveUsers) {
		var ret float32
		return ret
	}
	return *o.BillingActiveUsers
}

// GetBillingActiveUsersOk returns a tuple with the BillingActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetBillingActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.BillingActiveUsers) {
		return nil, false
	}
	return o.BillingActiveUsers, true
}

// HasBillingActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasBillingActiveUsers() bool {
	if o != nil && !IsNil(o.BillingActiveUsers) {
		return true
	}

	return false
}

// SetBillingActiveUsers gets a reference to the given float32 and assigns it to the BillingActiveUsers field.
func (o *FormattedApiInstance) SetBillingActiveUsers(v float32) {
	o.BillingActiveUsers = &v
}

// GetBillingEndDate returns the BillingEndDate field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetBillingEndDate() string {
	if o == nil || IsNil(o.BillingEndDate) {
		var ret string
		return ret
	}
	return *o.BillingEndDate
}

// GetBillingEndDateOk returns a tuple with the BillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetBillingEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.BillingEndDate) {
		return nil, false
	}
	return o.BillingEndDate, true
}

// HasBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasBillingEndDate() bool {
	if o != nil && !IsNil(o.BillingEndDate) {
		return true
	}

	return false
}

// SetBillingEndDate gets a reference to the given string and assigns it to the BillingEndDate field.
func (o *FormattedApiInstance) SetBillingEndDate(v string) {
	o.BillingEndDate = &v
}

// GetBillingGrafanaActiveUsers returns the BillingGrafanaActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetBillingGrafanaActiveUsers() float32 {
	if o == nil || IsNil(o.BillingGrafanaActiveUsers) {
		var ret float32
		return ret
	}
	return *o.BillingGrafanaActiveUsers
}

// GetBillingGrafanaActiveUsersOk returns a tuple with the BillingGrafanaActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetBillingGrafanaActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.BillingGrafanaActiveUsers) {
		return nil, false
	}
	return o.BillingGrafanaActiveUsers, true
}

// HasBillingGrafanaActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasBillingGrafanaActiveUsers() bool {
	if o != nil && !IsNil(o.BillingGrafanaActiveUsers) {
		return true
	}

	return false
}

// SetBillingGrafanaActiveUsers gets a reference to the given float32 and assigns it to the BillingGrafanaActiveUsers field.
func (o *FormattedApiInstance) SetBillingGrafanaActiveUsers(v float32) {
	o.BillingGrafanaActiveUsers = &v
}

// GetBillingOnCallActiveUsers returns the BillingOnCallActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetBillingOnCallActiveUsers() float32 {
	if o == nil || IsNil(o.BillingOnCallActiveUsers) {
		var ret float32
		return ret
	}
	return *o.BillingOnCallActiveUsers
}

// GetBillingOnCallActiveUsersOk returns a tuple with the BillingOnCallActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetBillingOnCallActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.BillingOnCallActiveUsers) {
		return nil, false
	}
	return o.BillingOnCallActiveUsers, true
}

// HasBillingOnCallActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasBillingOnCallActiveUsers() bool {
	if o != nil && !IsNil(o.BillingOnCallActiveUsers) {
		return true
	}

	return false
}

// SetBillingOnCallActiveUsers gets a reference to the given float32 and assigns it to the BillingOnCallActiveUsers field.
func (o *FormattedApiInstance) SetBillingOnCallActiveUsers(v float32) {
	o.BillingOnCallActiveUsers = &v
}

// GetBillingStartDate returns the BillingStartDate field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetBillingStartDate() string {
	if o == nil || IsNil(o.BillingStartDate) {
		var ret string
		return ret
	}
	return *o.BillingStartDate
}

// GetBillingStartDateOk returns a tuple with the BillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetBillingStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStartDate) {
		return nil, false
	}
	return o.BillingStartDate, true
}

// HasBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasBillingStartDate() bool {
	if o != nil && !IsNil(o.BillingStartDate) {
		return true
	}

	return false
}

// SetBillingStartDate gets a reference to the given string and assigns it to the BillingStartDate field.
func (o *FormattedApiInstance) SetBillingStartDate(v string) {
	o.BillingStartDate = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetClusterId() float32 {
	if o == nil || IsNil(o.ClusterId) {
		var ret float32
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetClusterIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given float32 and assigns it to the ClusterId field.
func (o *FormattedApiInstance) SetClusterId(v float32) {
	o.ClusterId = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *FormattedApiInstance) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetClusterSlug returns the ClusterSlug field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetClusterSlug() string {
	if o == nil || IsNil(o.ClusterSlug) {
		var ret string
		return ret
	}
	return *o.ClusterSlug
}

// GetClusterSlugOk returns a tuple with the ClusterSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetClusterSlugOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterSlug) {
		return nil, false
	}
	return o.ClusterSlug, true
}

// HasClusterSlug returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasClusterSlug() bool {
	if o != nil && !IsNil(o.ClusterSlug) {
		return true
	}

	return false
}

// SetClusterSlug gets a reference to the given string and assigns it to the ClusterSlug field.
func (o *FormattedApiInstance) SetClusterSlug(v string) {
	o.ClusterSlug = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FormattedApiInstance) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *FormattedApiInstance) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCurrentActiveAdminUsers returns the CurrentActiveAdminUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCurrentActiveAdminUsers() float32 {
	if o == nil || IsNil(o.CurrentActiveAdminUsers) {
		var ret float32
		return ret
	}
	return *o.CurrentActiveAdminUsers
}

// GetCurrentActiveAdminUsersOk returns a tuple with the CurrentActiveAdminUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCurrentActiveAdminUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentActiveAdminUsers) {
		return nil, false
	}
	return o.CurrentActiveAdminUsers, true
}

// HasCurrentActiveAdminUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCurrentActiveAdminUsers() bool {
	if o != nil && !IsNil(o.CurrentActiveAdminUsers) {
		return true
	}

	return false
}

// SetCurrentActiveAdminUsers gets a reference to the given float32 and assigns it to the CurrentActiveAdminUsers field.
func (o *FormattedApiInstance) SetCurrentActiveAdminUsers(v float32) {
	o.CurrentActiveAdminUsers = &v
}

// GetCurrentActiveEditorUsers returns the CurrentActiveEditorUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCurrentActiveEditorUsers() float32 {
	if o == nil || IsNil(o.CurrentActiveEditorUsers) {
		var ret float32
		return ret
	}
	return *o.CurrentActiveEditorUsers
}

// GetCurrentActiveEditorUsersOk returns a tuple with the CurrentActiveEditorUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCurrentActiveEditorUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentActiveEditorUsers) {
		return nil, false
	}
	return o.CurrentActiveEditorUsers, true
}

// HasCurrentActiveEditorUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCurrentActiveEditorUsers() bool {
	if o != nil && !IsNil(o.CurrentActiveEditorUsers) {
		return true
	}

	return false
}

// SetCurrentActiveEditorUsers gets a reference to the given float32 and assigns it to the CurrentActiveEditorUsers field.
func (o *FormattedApiInstance) SetCurrentActiveEditorUsers(v float32) {
	o.CurrentActiveEditorUsers = &v
}

// GetCurrentActiveUsers returns the CurrentActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCurrentActiveUsers() float32 {
	if o == nil || IsNil(o.CurrentActiveUsers) {
		var ret float32
		return ret
	}
	return *o.CurrentActiveUsers
}

// GetCurrentActiveUsersOk returns a tuple with the CurrentActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCurrentActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentActiveUsers) {
		return nil, false
	}
	return o.CurrentActiveUsers, true
}

// HasCurrentActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCurrentActiveUsers() bool {
	if o != nil && !IsNil(o.CurrentActiveUsers) {
		return true
	}

	return false
}

// SetCurrentActiveUsers gets a reference to the given float32 and assigns it to the CurrentActiveUsers field.
func (o *FormattedApiInstance) SetCurrentActiveUsers(v float32) {
	o.CurrentActiveUsers = &v
}

// GetCurrentActiveViewerUsers returns the CurrentActiveViewerUsers field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCurrentActiveViewerUsers() float32 {
	if o == nil || IsNil(o.CurrentActiveViewerUsers) {
		var ret float32
		return ret
	}
	return *o.CurrentActiveViewerUsers
}

// GetCurrentActiveViewerUsersOk returns a tuple with the CurrentActiveViewerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCurrentActiveViewerUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentActiveViewerUsers) {
		return nil, false
	}
	return o.CurrentActiveViewerUsers, true
}

// HasCurrentActiveViewerUsers returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCurrentActiveViewerUsers() bool {
	if o != nil && !IsNil(o.CurrentActiveViewerUsers) {
		return true
	}

	return false
}

// SetCurrentActiveViewerUsers gets a reference to the given float32 and assigns it to the CurrentActiveViewerUsers field.
func (o *FormattedApiInstance) SetCurrentActiveViewerUsers(v float32) {
	o.CurrentActiveViewerUsers = &v
}

// GetCustomAuth returns the CustomAuth field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCustomAuth() bool {
	if o == nil || IsNil(o.CustomAuth) {
		var ret bool
		return ret
	}
	return *o.CustomAuth
}

// GetCustomAuthOk returns a tuple with the CustomAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCustomAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomAuth) {
		return nil, false
	}
	return o.CustomAuth, true
}

// HasCustomAuth returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCustomAuth() bool {
	if o != nil && !IsNil(o.CustomAuth) {
		return true
	}

	return false
}

// SetCustomAuth gets a reference to the given bool and assigns it to the CustomAuth field.
func (o *FormattedApiInstance) SetCustomAuth(v bool) {
	o.CustomAuth = &v
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetCustomDomain() bool {
	if o == nil || IsNil(o.CustomDomain) {
		var ret bool
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetCustomDomainOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomDomain) {
		return nil, false
	}
	return o.CustomDomain, true
}

// HasCustomDomain returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasCustomDomain() bool {
	if o != nil && !IsNil(o.CustomDomain) {
		return true
	}

	return false
}

// SetCustomDomain gets a reference to the given bool and assigns it to the CustomDomain field.
func (o *FormattedApiInstance) SetCustomDomain(v bool) {
	o.CustomDomain = &v
}

// GetDailyAdminCnt returns the DailyAdminCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDailyAdminCnt() float32 {
	if o == nil || IsNil(o.DailyAdminCnt) {
		var ret float32
		return ret
	}
	return *o.DailyAdminCnt
}

// GetDailyAdminCntOk returns a tuple with the DailyAdminCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDailyAdminCntOk() (*float32, bool) {
	if o == nil || IsNil(o.DailyAdminCnt) {
		return nil, false
	}
	return o.DailyAdminCnt, true
}

// HasDailyAdminCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDailyAdminCnt() bool {
	if o != nil && !IsNil(o.DailyAdminCnt) {
		return true
	}

	return false
}

// SetDailyAdminCnt gets a reference to the given float32 and assigns it to the DailyAdminCnt field.
func (o *FormattedApiInstance) SetDailyAdminCnt(v float32) {
	o.DailyAdminCnt = &v
}

// GetDailyEditorCnt returns the DailyEditorCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDailyEditorCnt() float32 {
	if o == nil || IsNil(o.DailyEditorCnt) {
		var ret float32
		return ret
	}
	return *o.DailyEditorCnt
}

// GetDailyEditorCntOk returns a tuple with the DailyEditorCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDailyEditorCntOk() (*float32, bool) {
	if o == nil || IsNil(o.DailyEditorCnt) {
		return nil, false
	}
	return o.DailyEditorCnt, true
}

// HasDailyEditorCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDailyEditorCnt() bool {
	if o != nil && !IsNil(o.DailyEditorCnt) {
		return true
	}

	return false
}

// SetDailyEditorCnt gets a reference to the given float32 and assigns it to the DailyEditorCnt field.
func (o *FormattedApiInstance) SetDailyEditorCnt(v float32) {
	o.DailyEditorCnt = &v
}

// GetDailyUserCnt returns the DailyUserCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDailyUserCnt() float32 {
	if o == nil || IsNil(o.DailyUserCnt) {
		var ret float32
		return ret
	}
	return *o.DailyUserCnt
}

// GetDailyUserCntOk returns a tuple with the DailyUserCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDailyUserCntOk() (*float32, bool) {
	if o == nil || IsNil(o.DailyUserCnt) {
		return nil, false
	}
	return o.DailyUserCnt, true
}

// HasDailyUserCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDailyUserCnt() bool {
	if o != nil && !IsNil(o.DailyUserCnt) {
		return true
	}

	return false
}

// SetDailyUserCnt gets a reference to the given float32 and assigns it to the DailyUserCnt field.
func (o *FormattedApiInstance) SetDailyUserCnt(v float32) {
	o.DailyUserCnt = &v
}

// GetDailyViewerCnt returns the DailyViewerCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDailyViewerCnt() float32 {
	if o == nil || IsNil(o.DailyViewerCnt) {
		var ret float32
		return ret
	}
	return *o.DailyViewerCnt
}

// GetDailyViewerCntOk returns a tuple with the DailyViewerCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDailyViewerCntOk() (*float32, bool) {
	if o == nil || IsNil(o.DailyViewerCnt) {
		return nil, false
	}
	return o.DailyViewerCnt, true
}

// HasDailyViewerCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDailyViewerCnt() bool {
	if o != nil && !IsNil(o.DailyViewerCnt) {
		return true
	}

	return false
}

// SetDailyViewerCnt gets a reference to the given float32 and assigns it to the DailyViewerCnt field.
func (o *FormattedApiInstance) SetDailyViewerCnt(v float32) {
	o.DailyViewerCnt = &v
}

// GetDashboardCnt returns the DashboardCnt field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDashboardCnt() float32 {
	if o == nil || IsNil(o.DashboardCnt) {
		var ret float32
		return ret
	}
	return *o.DashboardCnt
}

// GetDashboardCntOk returns a tuple with the DashboardCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDashboardCntOk() (*float32, bool) {
	if o == nil || IsNil(o.DashboardCnt) {
		return nil, false
	}
	return o.DashboardCnt, true
}

// HasDashboardCnt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDashboardCnt() bool {
	if o != nil && !IsNil(o.DashboardCnt) {
		return true
	}

	return false
}

// SetDashboardCnt gets a reference to the given float32 and assigns it to the DashboardCnt field.
func (o *FormattedApiInstance) SetDashboardCnt(v float32) {
	o.DashboardCnt = &v
}

// GetDashboardQuota returns the DashboardQuota field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDashboardQuota() float32 {
	if o == nil || IsNil(o.DashboardQuota) {
		var ret float32
		return ret
	}
	return *o.DashboardQuota
}

// GetDashboardQuotaOk returns a tuple with the DashboardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDashboardQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.DashboardQuota) {
		return nil, false
	}
	return o.DashboardQuota, true
}

// HasDashboardQuota returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDashboardQuota() bool {
	if o != nil && !IsNil(o.DashboardQuota) {
		return true
	}

	return false
}

// SetDashboardQuota gets a reference to the given float32 and assigns it to the DashboardQuota field.
func (o *FormattedApiInstance) SetDashboardQuota(v float32) {
	o.DashboardQuota = &v
}

// GetDatasourceCnts returns the DatasourceCnts field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDatasourceCnts() map[string]interface{} {
	if o == nil || IsNil(o.DatasourceCnts) {
		var ret map[string]interface{}
		return ret
	}
	return o.DatasourceCnts
}

// GetDatasourceCntsOk returns a tuple with the DatasourceCnts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDatasourceCntsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DatasourceCnts) {
		return map[string]interface{}{}, false
	}
	return o.DatasourceCnts, true
}

// HasDatasourceCnts returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDatasourceCnts() bool {
	if o != nil && !IsNil(o.DatasourceCnts) {
		return true
	}

	return false
}

// SetDatasourceCnts gets a reference to the given map[string]interface{} and assigns it to the DatasourceCnts field.
func (o *FormattedApiInstance) SetDatasourceCnts(v map[string]interface{}) {
	o.DatasourceCnts = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FormattedApiInstance) SetDescription(v string) {
	o.Description = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *FormattedApiInstance) SetGateway(v string) {
	o.Gateway = &v
}

// GetHlInstanceCurrentUsage returns the HlInstanceCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHlInstanceCurrentUsage() float32 {
	if o == nil || IsNil(o.HlInstanceCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HlInstanceCurrentUsage
}

// GetHlInstanceCurrentUsageOk returns a tuple with the HlInstanceCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHlInstanceCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlInstanceCurrentUsage) {
		return nil, false
	}
	return o.HlInstanceCurrentUsage, true
}

// HasHlInstanceCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHlInstanceCurrentUsage() bool {
	if o != nil && !IsNil(o.HlInstanceCurrentUsage) {
		return true
	}

	return false
}

// SetHlInstanceCurrentUsage gets a reference to the given float32 and assigns it to the HlInstanceCurrentUsage field.
func (o *FormattedApiInstance) SetHlInstanceCurrentUsage(v float32) {
	o.HlInstanceCurrentUsage = &v
}

// GetHlInstanceId returns the HlInstanceId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHlInstanceId() float32 {
	if o == nil || IsNil(o.HlInstanceId) {
		var ret float32
		return ret
	}
	return *o.HlInstanceId
}

// GetHlInstanceIdOk returns a tuple with the HlInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHlInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.HlInstanceId) {
		return nil, false
	}
	return o.HlInstanceId, true
}

// HasHlInstanceId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHlInstanceId() bool {
	if o != nil && !IsNil(o.HlInstanceId) {
		return true
	}

	return false
}

// SetHlInstanceId gets a reference to the given float32 and assigns it to the HlInstanceId field.
func (o *FormattedApiInstance) SetHlInstanceId(v float32) {
	o.HlInstanceId = &v
}

// GetHlInstanceName returns the HlInstanceName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHlInstanceName() string {
	if o == nil || IsNil(o.HlInstanceName) {
		var ret string
		return ret
	}
	return *o.HlInstanceName
}

// GetHlInstanceNameOk returns a tuple with the HlInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHlInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.HlInstanceName) {
		return nil, false
	}
	return o.HlInstanceName, true
}

// HasHlInstanceName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHlInstanceName() bool {
	if o != nil && !IsNil(o.HlInstanceName) {
		return true
	}

	return false
}

// SetHlInstanceName gets a reference to the given string and assigns it to the HlInstanceName field.
func (o *FormattedApiInstance) SetHlInstanceName(v string) {
	o.HlInstanceName = &v
}

// GetHlInstanceStatus returns the HlInstanceStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHlInstanceStatus() string {
	if o == nil || IsNil(o.HlInstanceStatus) {
		var ret string
		return ret
	}
	return *o.HlInstanceStatus
}

// GetHlInstanceStatusOk returns a tuple with the HlInstanceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHlInstanceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HlInstanceStatus) {
		return nil, false
	}
	return o.HlInstanceStatus, true
}

// HasHlInstanceStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHlInstanceStatus() bool {
	if o != nil && !IsNil(o.HlInstanceStatus) {
		return true
	}

	return false
}

// SetHlInstanceStatus gets a reference to the given string and assigns it to the HlInstanceStatus field.
func (o *FormattedApiInstance) SetHlInstanceStatus(v string) {
	o.HlInstanceStatus = &v
}

// GetHlInstanceUrl returns the HlInstanceUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHlInstanceUrl() string {
	if o == nil || IsNil(o.HlInstanceUrl) {
		var ret string
		return ret
	}
	return *o.HlInstanceUrl
}

// GetHlInstanceUrlOk returns a tuple with the HlInstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHlInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HlInstanceUrl) {
		return nil, false
	}
	return o.HlInstanceUrl, true
}

// HasHlInstanceUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHlInstanceUrl() bool {
	if o != nil && !IsNil(o.HlInstanceUrl) {
		return true
	}

	return false
}

// SetHlInstanceUrl gets a reference to the given string and assigns it to the HlInstanceUrl field.
func (o *FormattedApiInstance) SetHlInstanceUrl(v string) {
	o.HlInstanceUrl = &v
}

// GetHmInstanceGraphiteCurrentUsage returns the HmInstanceGraphiteCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteCurrentUsage() float32 {
	if o == nil || IsNil(o.HmInstanceGraphiteCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HmInstanceGraphiteCurrentUsage
}

// GetHmInstanceGraphiteCurrentUsageOk returns a tuple with the HmInstanceGraphiteCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteCurrentUsage) {
		return nil, false
	}
	return o.HmInstanceGraphiteCurrentUsage, true
}

// HasHmInstanceGraphiteCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteCurrentUsage() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteCurrentUsage) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteCurrentUsage gets a reference to the given float32 and assigns it to the HmInstanceGraphiteCurrentUsage field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteCurrentUsage(v float32) {
	o.HmInstanceGraphiteCurrentUsage = &v
}

// GetHmInstanceGraphiteId returns the HmInstanceGraphiteId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteId() float32 {
	if o == nil || IsNil(o.HmInstanceGraphiteId) {
		var ret float32
		return ret
	}
	return *o.HmInstanceGraphiteId
}

// GetHmInstanceGraphiteIdOk returns a tuple with the HmInstanceGraphiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteIdOk() (*float32, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteId) {
		return nil, false
	}
	return o.HmInstanceGraphiteId, true
}

// HasHmInstanceGraphiteId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteId() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteId) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteId gets a reference to the given float32 and assigns it to the HmInstanceGraphiteId field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteId(v float32) {
	o.HmInstanceGraphiteId = &v
}

// GetHmInstanceGraphiteName returns the HmInstanceGraphiteName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteName() string {
	if o == nil || IsNil(o.HmInstanceGraphiteName) {
		var ret string
		return ret
	}
	return *o.HmInstanceGraphiteName
}

// GetHmInstanceGraphiteNameOk returns a tuple with the HmInstanceGraphiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteNameOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteName) {
		return nil, false
	}
	return o.HmInstanceGraphiteName, true
}

// HasHmInstanceGraphiteName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteName() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteName) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteName gets a reference to the given string and assigns it to the HmInstanceGraphiteName field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteName(v string) {
	o.HmInstanceGraphiteName = &v
}

// GetHmInstanceGraphiteStatus returns the HmInstanceGraphiteStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteStatus() string {
	if o == nil || IsNil(o.HmInstanceGraphiteStatus) {
		var ret string
		return ret
	}
	return *o.HmInstanceGraphiteStatus
}

// GetHmInstanceGraphiteStatusOk returns a tuple with the HmInstanceGraphiteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteStatus) {
		return nil, false
	}
	return o.HmInstanceGraphiteStatus, true
}

// HasHmInstanceGraphiteStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteStatus() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteStatus) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteStatus gets a reference to the given string and assigns it to the HmInstanceGraphiteStatus field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteStatus(v string) {
	o.HmInstanceGraphiteStatus = &v
}

// GetHmInstanceGraphiteType returns the HmInstanceGraphiteType field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteType() string {
	if o == nil || IsNil(o.HmInstanceGraphiteType) {
		var ret string
		return ret
	}
	return *o.HmInstanceGraphiteType
}

// GetHmInstanceGraphiteTypeOk returns a tuple with the HmInstanceGraphiteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteType) {
		return nil, false
	}
	return o.HmInstanceGraphiteType, true
}

// HasHmInstanceGraphiteType returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteType() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteType) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteType gets a reference to the given string and assigns it to the HmInstanceGraphiteType field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteType(v string) {
	o.HmInstanceGraphiteType = &v
}

// GetHmInstanceGraphiteUrl returns the HmInstanceGraphiteUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstanceGraphiteUrl() string {
	if o == nil || IsNil(o.HmInstanceGraphiteUrl) {
		var ret string
		return ret
	}
	return *o.HmInstanceGraphiteUrl
}

// GetHmInstanceGraphiteUrlOk returns a tuple with the HmInstanceGraphiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstanceGraphiteUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstanceGraphiteUrl) {
		return nil, false
	}
	return o.HmInstanceGraphiteUrl, true
}

// HasHmInstanceGraphiteUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstanceGraphiteUrl() bool {
	if o != nil && !IsNil(o.HmInstanceGraphiteUrl) {
		return true
	}

	return false
}

// SetHmInstanceGraphiteUrl gets a reference to the given string and assigns it to the HmInstanceGraphiteUrl field.
func (o *FormattedApiInstance) SetHmInstanceGraphiteUrl(v string) {
	o.HmInstanceGraphiteUrl = &v
}

// GetHmInstancePromCurrentActiveSeries returns the HmInstancePromCurrentActiveSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiInstance) GetHmInstancePromCurrentActiveSeries() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.HmInstancePromCurrentActiveSeries
}

// GetHmInstancePromCurrentActiveSeriesOk returns a tuple with the HmInstancePromCurrentActiveSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiInstance) GetHmInstancePromCurrentActiveSeriesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.HmInstancePromCurrentActiveSeries) {
		return nil, false
	}
	return &o.HmInstancePromCurrentActiveSeries, true
}

// HasHmInstancePromCurrentActiveSeries returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromCurrentActiveSeries() bool {
	if o != nil && IsNil(o.HmInstancePromCurrentActiveSeries) {
		return true
	}

	return false
}

// SetHmInstancePromCurrentActiveSeries gets a reference to the given interface{} and assigns it to the HmInstancePromCurrentActiveSeries field.
func (o *FormattedApiInstance) SetHmInstancePromCurrentActiveSeries(v interface{}) {
	o.HmInstancePromCurrentActiveSeries = v
}

// GetHmInstancePromCurrentUsage returns the HmInstancePromCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstancePromCurrentUsage() float32 {
	if o == nil || IsNil(o.HmInstancePromCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HmInstancePromCurrentUsage
}

// GetHmInstancePromCurrentUsageOk returns a tuple with the HmInstancePromCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstancePromCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmInstancePromCurrentUsage) {
		return nil, false
	}
	return o.HmInstancePromCurrentUsage, true
}

// HasHmInstancePromCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromCurrentUsage() bool {
	if o != nil && !IsNil(o.HmInstancePromCurrentUsage) {
		return true
	}

	return false
}

// SetHmInstancePromCurrentUsage gets a reference to the given float32 and assigns it to the HmInstancePromCurrentUsage field.
func (o *FormattedApiInstance) SetHmInstancePromCurrentUsage(v float32) {
	o.HmInstancePromCurrentUsage = &v
}

// GetHmInstancePromId returns the HmInstancePromId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstancePromId() float32 {
	if o == nil || IsNil(o.HmInstancePromId) {
		var ret float32
		return ret
	}
	return *o.HmInstancePromId
}

// GetHmInstancePromIdOk returns a tuple with the HmInstancePromId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstancePromIdOk() (*float32, bool) {
	if o == nil || IsNil(o.HmInstancePromId) {
		return nil, false
	}
	return o.HmInstancePromId, true
}

// HasHmInstancePromId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromId() bool {
	if o != nil && !IsNil(o.HmInstancePromId) {
		return true
	}

	return false
}

// SetHmInstancePromId gets a reference to the given float32 and assigns it to the HmInstancePromId field.
func (o *FormattedApiInstance) SetHmInstancePromId(v float32) {
	o.HmInstancePromId = &v
}

// GetHmInstancePromName returns the HmInstancePromName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstancePromName() string {
	if o == nil || IsNil(o.HmInstancePromName) {
		var ret string
		return ret
	}
	return *o.HmInstancePromName
}

// GetHmInstancePromNameOk returns a tuple with the HmInstancePromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstancePromNameOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstancePromName) {
		return nil, false
	}
	return o.HmInstancePromName, true
}

// HasHmInstancePromName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromName() bool {
	if o != nil && !IsNil(o.HmInstancePromName) {
		return true
	}

	return false
}

// SetHmInstancePromName gets a reference to the given string and assigns it to the HmInstancePromName field.
func (o *FormattedApiInstance) SetHmInstancePromName(v string) {
	o.HmInstancePromName = &v
}

// GetHmInstancePromStatus returns the HmInstancePromStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstancePromStatus() string {
	if o == nil || IsNil(o.HmInstancePromStatus) {
		var ret string
		return ret
	}
	return *o.HmInstancePromStatus
}

// GetHmInstancePromStatusOk returns a tuple with the HmInstancePromStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstancePromStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstancePromStatus) {
		return nil, false
	}
	return o.HmInstancePromStatus, true
}

// HasHmInstancePromStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromStatus() bool {
	if o != nil && !IsNil(o.HmInstancePromStatus) {
		return true
	}

	return false
}

// SetHmInstancePromStatus gets a reference to the given string and assigns it to the HmInstancePromStatus field.
func (o *FormattedApiInstance) SetHmInstancePromStatus(v string) {
	o.HmInstancePromStatus = &v
}

// GetHmInstancePromUrl returns the HmInstancePromUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHmInstancePromUrl() string {
	if o == nil || IsNil(o.HmInstancePromUrl) {
		var ret string
		return ret
	}
	return *o.HmInstancePromUrl
}

// GetHmInstancePromUrlOk returns a tuple with the HmInstancePromUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHmInstancePromUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HmInstancePromUrl) {
		return nil, false
	}
	return o.HmInstancePromUrl, true
}

// HasHmInstancePromUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHmInstancePromUrl() bool {
	if o != nil && !IsNil(o.HmInstancePromUrl) {
		return true
	}

	return false
}

// SetHmInstancePromUrl gets a reference to the given string and assigns it to the HmInstancePromUrl field.
func (o *FormattedApiInstance) SetHmInstancePromUrl(v string) {
	o.HmInstancePromUrl = &v
}

// GetHtInstanceId returns the HtInstanceId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHtInstanceId() float32 {
	if o == nil || IsNil(o.HtInstanceId) {
		var ret float32
		return ret
	}
	return *o.HtInstanceId
}

// GetHtInstanceIdOk returns a tuple with the HtInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHtInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.HtInstanceId) {
		return nil, false
	}
	return o.HtInstanceId, true
}

// HasHtInstanceId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHtInstanceId() bool {
	if o != nil && !IsNil(o.HtInstanceId) {
		return true
	}

	return false
}

// SetHtInstanceId gets a reference to the given float32 and assigns it to the HtInstanceId field.
func (o *FormattedApiInstance) SetHtInstanceId(v float32) {
	o.HtInstanceId = &v
}

// GetHtInstanceName returns the HtInstanceName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHtInstanceName() string {
	if o == nil || IsNil(o.HtInstanceName) {
		var ret string
		return ret
	}
	return *o.HtInstanceName
}

// GetHtInstanceNameOk returns a tuple with the HtInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHtInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.HtInstanceName) {
		return nil, false
	}
	return o.HtInstanceName, true
}

// HasHtInstanceName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHtInstanceName() bool {
	if o != nil && !IsNil(o.HtInstanceName) {
		return true
	}

	return false
}

// SetHtInstanceName gets a reference to the given string and assigns it to the HtInstanceName field.
func (o *FormattedApiInstance) SetHtInstanceName(v string) {
	o.HtInstanceName = &v
}

// GetHtInstanceStatus returns the HtInstanceStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHtInstanceStatus() string {
	if o == nil || IsNil(o.HtInstanceStatus) {
		var ret string
		return ret
	}
	return *o.HtInstanceStatus
}

// GetHtInstanceStatusOk returns a tuple with the HtInstanceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHtInstanceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HtInstanceStatus) {
		return nil, false
	}
	return o.HtInstanceStatus, true
}

// HasHtInstanceStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHtInstanceStatus() bool {
	if o != nil && !IsNil(o.HtInstanceStatus) {
		return true
	}

	return false
}

// SetHtInstanceStatus gets a reference to the given string and assigns it to the HtInstanceStatus field.
func (o *FormattedApiInstance) SetHtInstanceStatus(v string) {
	o.HtInstanceStatus = &v
}

// GetHtInstanceUrl returns the HtInstanceUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHtInstanceUrl() string {
	if o == nil || IsNil(o.HtInstanceUrl) {
		var ret string
		return ret
	}
	return *o.HtInstanceUrl
}

// GetHtInstanceUrlOk returns a tuple with the HtInstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHtInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HtInstanceUrl) {
		return nil, false
	}
	return o.HtInstanceUrl, true
}

// HasHtInstanceUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHtInstanceUrl() bool {
	if o != nil && !IsNil(o.HtInstanceUrl) {
		return true
	}

	return false
}

// SetHtInstanceUrl gets a reference to the given string and assigns it to the HtInstanceUrl field.
func (o *FormattedApiInstance) SetHtInstanceUrl(v string) {
	o.HtInstanceUrl = &v
}

// GetHpInstanceId returns the HpInstanceId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHpInstanceId() float32 {
	if o == nil || IsNil(o.HpInstanceId) {
		var ret float32
		return ret
	}
	return *o.HpInstanceId
}

// GetHpInstanceIdOk returns a tuple with the HpInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHpInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.HpInstanceId) {
		return nil, false
	}
	return o.HpInstanceId, true
}

// HasHpInstanceId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHpInstanceId() bool {
	if o != nil && !IsNil(o.HpInstanceId) {
		return true
	}

	return false
}

// SetHpInstanceId gets a reference to the given float32 and assigns it to the HpInstanceId field.
func (o *FormattedApiInstance) SetHpInstanceId(v float32) {
	o.HpInstanceId = &v
}

// GetHpInstanceName returns the HpInstanceName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHpInstanceName() string {
	if o == nil || IsNil(o.HpInstanceName) {
		var ret string
		return ret
	}
	return *o.HpInstanceName
}

// GetHpInstanceNameOk returns a tuple with the HpInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHpInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.HpInstanceName) {
		return nil, false
	}
	return o.HpInstanceName, true
}

// HasHpInstanceName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHpInstanceName() bool {
	if o != nil && !IsNil(o.HpInstanceName) {
		return true
	}

	return false
}

// SetHpInstanceName gets a reference to the given string and assigns it to the HpInstanceName field.
func (o *FormattedApiInstance) SetHpInstanceName(v string) {
	o.HpInstanceName = &v
}

// GetHpInstanceStatus returns the HpInstanceStatus field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHpInstanceStatus() string {
	if o == nil || IsNil(o.HpInstanceStatus) {
		var ret string
		return ret
	}
	return *o.HpInstanceStatus
}

// GetHpInstanceStatusOk returns a tuple with the HpInstanceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHpInstanceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HpInstanceStatus) {
		return nil, false
	}
	return o.HpInstanceStatus, true
}

// HasHpInstanceStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHpInstanceStatus() bool {
	if o != nil && !IsNil(o.HpInstanceStatus) {
		return true
	}

	return false
}

// SetHpInstanceStatus gets a reference to the given string and assigns it to the HpInstanceStatus field.
func (o *FormattedApiInstance) SetHpInstanceStatus(v string) {
	o.HpInstanceStatus = &v
}

// GetHpInstanceUrl returns the HpInstanceUrl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetHpInstanceUrl() string {
	if o == nil || IsNil(o.HpInstanceUrl) {
		var ret string
		return ret
	}
	return *o.HpInstanceUrl
}

// GetHpInstanceUrlOk returns a tuple with the HpInstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetHpInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HpInstanceUrl) {
		return nil, false
	}
	return o.HpInstanceUrl, true
}

// HasHpInstanceUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasHpInstanceUrl() bool {
	if o != nil && !IsNil(o.HpInstanceUrl) {
		return true
	}

	return false
}

// SetHpInstanceUrl gets a reference to the given string and assigns it to the HpInstanceUrl field.
func (o *FormattedApiInstance) SetHpInstanceUrl(v string) {
	o.HpInstanceUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *FormattedApiInstance) SetId(v float32) {
	o.Id = &v
}

// GetIncident returns the Incident field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetIncident() float32 {
	if o == nil || IsNil(o.Incident) {
		var ret float32
		return ret
	}
	return *o.Incident
}

// GetIncidentOk returns a tuple with the Incident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetIncidentOk() (*float32, bool) {
	if o == nil || IsNil(o.Incident) {
		return nil, false
	}
	return o.Incident, true
}

// HasIncident returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasIncident() bool {
	if o != nil && !IsNil(o.Incident) {
		return true
	}

	return false
}

// SetIncident gets a reference to the given float32 and assigns it to the Incident field.
func (o *FormattedApiInstance) SetIncident(v float32) {
	o.Incident = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetLabels() map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *FormattedApiInstance) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetMachineLearning returns the MachineLearning field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetMachineLearning() float32 {
	if o == nil || IsNil(o.MachineLearning) {
		var ret float32
		return ret
	}
	return *o.MachineLearning
}

// GetMachineLearningOk returns a tuple with the MachineLearning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetMachineLearningOk() (*float32, bool) {
	if o == nil || IsNil(o.MachineLearning) {
		return nil, false
	}
	return o.MachineLearning, true
}

// HasMachineLearning returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasMachineLearning() bool {
	if o != nil && !IsNil(o.MachineLearning) {
		return true
	}

	return false
}

// SetMachineLearning gets a reference to the given float32 and assigns it to the MachineLearning field.
func (o *FormattedApiInstance) SetMachineLearning(v float32) {
	o.MachineLearning = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FormattedApiInstance) SetName(v string) {
	o.Name = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetOrgId() float32 {
	if o == nil || IsNil(o.OrgId) {
		var ret float32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetOrgIdOk() (*float32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given float32 and assigns it to the OrgId field.
func (o *FormattedApiInstance) SetOrgId(v float32) {
	o.OrgId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *FormattedApiInstance) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *FormattedApiInstance) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *FormattedApiInstance) SetPlan(v string) {
	o.Plan = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *FormattedApiInstance) SetPlanName(v string) {
	o.PlanName = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetRegionId() float32 {
	if o == nil || IsNil(o.RegionId) {
		var ret float32
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetRegionIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given float32 and assigns it to the RegionId field.
func (o *FormattedApiInstance) SetRegionId(v float32) {
	o.RegionId = &v
}

// GetRegionSlug returns the RegionSlug field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetRegionSlug() string {
	if o == nil || IsNil(o.RegionSlug) {
		var ret string
		return ret
	}
	return *o.RegionSlug
}

// GetRegionSlugOk returns a tuple with the RegionSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetRegionSlugOk() (*string, bool) {
	if o == nil || IsNil(o.RegionSlug) {
		return nil, false
	}
	return o.RegionSlug, true
}

// HasRegionSlug returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasRegionSlug() bool {
	if o != nil && !IsNil(o.RegionSlug) {
		return true
	}

	return false
}

// SetRegionSlug gets a reference to the given string and assigns it to the RegionSlug field.
func (o *FormattedApiInstance) SetRegionSlug(v string) {
	o.RegionSlug = &v
}

// GetRegionPublicName returns the RegionPublicName field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetRegionPublicName() string {
	if o == nil || IsNil(o.RegionPublicName) {
		var ret string
		return ret
	}
	return *o.RegionPublicName
}

// GetRegionPublicNameOk returns a tuple with the RegionPublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetRegionPublicNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionPublicName) {
		return nil, false
	}
	return o.RegionPublicName, true
}

// HasRegionPublicName returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasRegionPublicName() bool {
	if o != nil && !IsNil(o.RegionPublicName) {
		return true
	}

	return false
}

// SetRegionPublicName gets a reference to the given string and assigns it to the RegionPublicName field.
func (o *FormattedApiInstance) SetRegionPublicName(v string) {
	o.RegionPublicName = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *FormattedApiInstance) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderRegion returns the ProviderRegion field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetProviderRegion() string {
	if o == nil || IsNil(o.ProviderRegion) {
		var ret string
		return ret
	}
	return *o.ProviderRegion
}

// GetProviderRegionOk returns a tuple with the ProviderRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetProviderRegionOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderRegion) {
		return nil, false
	}
	return o.ProviderRegion, true
}

// HasProviderRegion returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasProviderRegion() bool {
	if o != nil && !IsNil(o.ProviderRegion) {
		return true
	}

	return false
}

// SetProviderRegion gets a reference to the given string and assigns it to the ProviderRegion field.
func (o *FormattedApiInstance) SetProviderRegion(v string) {
	o.ProviderRegion = &v
}

// GetRunningVersion returns the RunningVersion field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetRunningVersion() string {
	if o == nil || IsNil(o.RunningVersion) {
		var ret string
		return ret
	}
	return *o.RunningVersion
}

// GetRunningVersionOk returns a tuple with the RunningVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetRunningVersionOk() (*string, bool) {
	if o == nil || IsNil(o.RunningVersion) {
		return nil, false
	}
	return o.RunningVersion, true
}

// HasRunningVersion returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasRunningVersion() bool {
	if o != nil && !IsNil(o.RunningVersion) {
		return true
	}

	return false
}

// SetRunningVersion gets a reference to the given string and assigns it to the RunningVersion field.
func (o *FormattedApiInstance) SetRunningVersion(v string) {
	o.RunningVersion = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *FormattedApiInstance) SetSlug(v string) {
	o.Slug = &v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetSsl() bool {
	if o == nil || IsNil(o.Ssl) {
		var ret bool
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetSslOk() (*bool, bool) {
	if o == nil || IsNil(o.Ssl) {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasSsl() bool {
	if o != nil && !IsNil(o.Ssl) {
		return true
	}

	return false
}

// SetSsl gets a reference to the given bool and assigns it to the Ssl field.
func (o *FormattedApiInstance) SetSsl(v bool) {
	o.Ssl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FormattedApiInstance) SetStatus(v string) {
	o.Status = &v
}

// GetSupport returns the Support field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetSupport() bool {
	if o == nil || IsNil(o.Support) {
		var ret bool
		return ret
	}
	return *o.Support
}

// GetSupportOk returns a tuple with the Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.Support) {
		return nil, false
	}
	return o.Support, true
}

// HasSupport returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasSupport() bool {
	if o != nil && !IsNil(o.Support) {
		return true
	}

	return false
}

// SetSupport gets a reference to the given bool and assigns it to the Support field.
func (o *FormattedApiInstance) SetSupport(v bool) {
	o.Support = &v
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetTrial() float32 {
	if o == nil || IsNil(o.Trial) {
		var ret float32
		return ret
	}
	return *o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetTrialOk() (*float32, bool) {
	if o == nil || IsNil(o.Trial) {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasTrial() bool {
	if o != nil && !IsNil(o.Trial) {
		return true
	}

	return false
}

// SetTrial gets a reference to the given float32 and assigns it to the Trial field.
func (o *FormattedApiInstance) SetTrial(v float32) {
	o.Trial = &v
}

// GetTrialExpiresAt returns the TrialExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiInstance) GetTrialExpiresAt() string {
	if o == nil || IsNil(o.TrialExpiresAt.Get()) {
		var ret string
		return ret
	}
	return *o.TrialExpiresAt.Get()
}

// GetTrialExpiresAtOk returns a tuple with the TrialExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiInstance) GetTrialExpiresAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialExpiresAt.Get(), o.TrialExpiresAt.IsSet()
}

// HasTrialExpiresAt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasTrialExpiresAt() bool {
	if o != nil && o.TrialExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetTrialExpiresAt gets a reference to the given NullableString and assigns it to the TrialExpiresAt field.
func (o *FormattedApiInstance) SetTrialExpiresAt(v string) {
	o.TrialExpiresAt.Set(&v)
}

// SetTrialExpiresAtNil sets the value for TrialExpiresAt to be an explicit nil
func (o *FormattedApiInstance) SetTrialExpiresAtNil() {
	o.TrialExpiresAt.Set(nil)
}

// UnsetTrialExpiresAt ensures that no value is present for TrialExpiresAt, not even an explicit nil
func (o *FormattedApiInstance) UnsetTrialExpiresAt() {
	o.TrialExpiresAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiInstance) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiInstance) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *FormattedApiInstance) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *FormattedApiInstance) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *FormattedApiInstance) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiInstance) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiInstance) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *FormattedApiInstance) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *FormattedApiInstance) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *FormattedApiInstance) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FormattedApiInstance) SetUrl(v string) {
	o.Url = &v
}

// GetUserQuota returns the UserQuota field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetUserQuota() float32 {
	if o == nil || IsNil(o.UserQuota) {
		var ret float32
		return ret
	}
	return *o.UserQuota
}

// GetUserQuotaOk returns a tuple with the UserQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetUserQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.UserQuota) {
		return nil, false
	}
	return o.UserQuota, true
}

// HasUserQuota returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasUserQuota() bool {
	if o != nil && !IsNil(o.UserQuota) {
		return true
	}

	return false
}

// SetUserQuota gets a reference to the given float32 and assigns it to the UserQuota field.
func (o *FormattedApiInstance) SetUserQuota(v float32) {
	o.UserQuota = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *FormattedApiInstance) SetVersion(v string) {
	o.Version = &v
}

// GetAgentManagementInstanceId returns the AgentManagementInstanceId field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetAgentManagementInstanceId() float32 {
	if o == nil || IsNil(o.AgentManagementInstanceId) {
		var ret float32
		return ret
	}
	return *o.AgentManagementInstanceId
}

// GetAgentManagementInstanceIdOk returns a tuple with the AgentManagementInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetAgentManagementInstanceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.AgentManagementInstanceId) {
		return nil, false
	}
	return o.AgentManagementInstanceId, true
}

// HasAgentManagementInstanceId returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasAgentManagementInstanceId() bool {
	if o != nil && !IsNil(o.AgentManagementInstanceId) {
		return true
	}

	return false
}

// SetAgentManagementInstanceId gets a reference to the given float32 and assigns it to the AgentManagementInstanceId field.
func (o *FormattedApiInstance) SetAgentManagementInstanceId(v float32) {
	o.AgentManagementInstanceId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *FormattedApiInstance) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiInstance) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *FormattedApiInstance) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *FormattedApiInstance) SetConfig(v map[string]interface{}) {
	o.Config = v
}

func (o FormattedApiInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormattedApiInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertCnt) {
		toSerialize["alertCnt"] = o.AlertCnt
	}
	if !IsNil(o.AlertQuota) {
		toSerialize["alertQuota"] = o.AlertQuota
	}
	if !IsNil(o.AmInstanceGeneratorUrl) {
		toSerialize["amInstanceGeneratorUrl"] = o.AmInstanceGeneratorUrl
	}
	if !IsNil(o.AmInstanceGeneratorUrlDatasource) {
		toSerialize["amInstanceGeneratorUrlDatasource"] = o.AmInstanceGeneratorUrlDatasource
	}
	if !IsNil(o.AmInstanceId) {
		toSerialize["amInstanceId"] = o.AmInstanceId
	}
	if !IsNil(o.AmInstanceName) {
		toSerialize["amInstanceName"] = o.AmInstanceName
	}
	if !IsNil(o.AmInstanceStatus) {
		toSerialize["amInstanceStatus"] = o.AmInstanceStatus
	}
	if !IsNil(o.AmInstanceUrl) {
		toSerialize["amInstanceUrl"] = o.AmInstanceUrl
	}
	if !IsNil(o.BillingActiveUsers) {
		toSerialize["billingActiveUsers"] = o.BillingActiveUsers
	}
	if !IsNil(o.BillingEndDate) {
		toSerialize["billingEndDate"] = o.BillingEndDate
	}
	if !IsNil(o.BillingGrafanaActiveUsers) {
		toSerialize["billingGrafanaActiveUsers"] = o.BillingGrafanaActiveUsers
	}
	if !IsNil(o.BillingOnCallActiveUsers) {
		toSerialize["billingOnCallActiveUsers"] = o.BillingOnCallActiveUsers
	}
	if !IsNil(o.BillingStartDate) {
		toSerialize["billingStartDate"] = o.BillingStartDate
	}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !IsNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !IsNil(o.ClusterSlug) {
		toSerialize["clusterSlug"] = o.ClusterSlug
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CurrentActiveAdminUsers) {
		toSerialize["currentActiveAdminUsers"] = o.CurrentActiveAdminUsers
	}
	if !IsNil(o.CurrentActiveEditorUsers) {
		toSerialize["currentActiveEditorUsers"] = o.CurrentActiveEditorUsers
	}
	if !IsNil(o.CurrentActiveUsers) {
		toSerialize["currentActiveUsers"] = o.CurrentActiveUsers
	}
	if !IsNil(o.CurrentActiveViewerUsers) {
		toSerialize["currentActiveViewerUsers"] = o.CurrentActiveViewerUsers
	}
	if !IsNil(o.CustomAuth) {
		toSerialize["customAuth"] = o.CustomAuth
	}
	if !IsNil(o.CustomDomain) {
		toSerialize["customDomain"] = o.CustomDomain
	}
	if !IsNil(o.DailyAdminCnt) {
		toSerialize["dailyAdminCnt"] = o.DailyAdminCnt
	}
	if !IsNil(o.DailyEditorCnt) {
		toSerialize["dailyEditorCnt"] = o.DailyEditorCnt
	}
	if !IsNil(o.DailyUserCnt) {
		toSerialize["dailyUserCnt"] = o.DailyUserCnt
	}
	if !IsNil(o.DailyViewerCnt) {
		toSerialize["dailyViewerCnt"] = o.DailyViewerCnt
	}
	if !IsNil(o.DashboardCnt) {
		toSerialize["dashboardCnt"] = o.DashboardCnt
	}
	if !IsNil(o.DashboardQuota) {
		toSerialize["dashboardQuota"] = o.DashboardQuota
	}
	if !IsNil(o.DatasourceCnts) {
		toSerialize["datasourceCnts"] = o.DatasourceCnts
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.HlInstanceCurrentUsage) {
		toSerialize["hlInstanceCurrentUsage"] = o.HlInstanceCurrentUsage
	}
	if !IsNil(o.HlInstanceId) {
		toSerialize["hlInstanceId"] = o.HlInstanceId
	}
	if !IsNil(o.HlInstanceName) {
		toSerialize["hlInstanceName"] = o.HlInstanceName
	}
	if !IsNil(o.HlInstanceStatus) {
		toSerialize["hlInstanceStatus"] = o.HlInstanceStatus
	}
	if !IsNil(o.HlInstanceUrl) {
		toSerialize["hlInstanceUrl"] = o.HlInstanceUrl
	}
	if !IsNil(o.HmInstanceGraphiteCurrentUsage) {
		toSerialize["hmInstanceGraphiteCurrentUsage"] = o.HmInstanceGraphiteCurrentUsage
	}
	if !IsNil(o.HmInstanceGraphiteId) {
		toSerialize["hmInstanceGraphiteId"] = o.HmInstanceGraphiteId
	}
	if !IsNil(o.HmInstanceGraphiteName) {
		toSerialize["hmInstanceGraphiteName"] = o.HmInstanceGraphiteName
	}
	if !IsNil(o.HmInstanceGraphiteStatus) {
		toSerialize["hmInstanceGraphiteStatus"] = o.HmInstanceGraphiteStatus
	}
	if !IsNil(o.HmInstanceGraphiteType) {
		toSerialize["hmInstanceGraphiteType"] = o.HmInstanceGraphiteType
	}
	if !IsNil(o.HmInstanceGraphiteUrl) {
		toSerialize["hmInstanceGraphiteUrl"] = o.HmInstanceGraphiteUrl
	}
	if o.HmInstancePromCurrentActiveSeries != nil {
		toSerialize["hmInstancePromCurrentActiveSeries"] = o.HmInstancePromCurrentActiveSeries
	}
	if !IsNil(o.HmInstancePromCurrentUsage) {
		toSerialize["hmInstancePromCurrentUsage"] = o.HmInstancePromCurrentUsage
	}
	if !IsNil(o.HmInstancePromId) {
		toSerialize["hmInstancePromId"] = o.HmInstancePromId
	}
	if !IsNil(o.HmInstancePromName) {
		toSerialize["hmInstancePromName"] = o.HmInstancePromName
	}
	if !IsNil(o.HmInstancePromStatus) {
		toSerialize["hmInstancePromStatus"] = o.HmInstancePromStatus
	}
	if !IsNil(o.HmInstancePromUrl) {
		toSerialize["hmInstancePromUrl"] = o.HmInstancePromUrl
	}
	if !IsNil(o.HtInstanceId) {
		toSerialize["htInstanceId"] = o.HtInstanceId
	}
	if !IsNil(o.HtInstanceName) {
		toSerialize["htInstanceName"] = o.HtInstanceName
	}
	if !IsNil(o.HtInstanceStatus) {
		toSerialize["htInstanceStatus"] = o.HtInstanceStatus
	}
	if !IsNil(o.HtInstanceUrl) {
		toSerialize["htInstanceUrl"] = o.HtInstanceUrl
	}
	if !IsNil(o.HpInstanceId) {
		toSerialize["hpInstanceId"] = o.HpInstanceId
	}
	if !IsNil(o.HpInstanceName) {
		toSerialize["hpInstanceName"] = o.HpInstanceName
	}
	if !IsNil(o.HpInstanceStatus) {
		toSerialize["hpInstanceStatus"] = o.HpInstanceStatus
	}
	if !IsNil(o.HpInstanceUrl) {
		toSerialize["hpInstanceUrl"] = o.HpInstanceUrl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Incident) {
		toSerialize["incident"] = o.Incident
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.MachineLearning) {
		toSerialize["machineLearning"] = o.MachineLearning
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	if !IsNil(o.OrgSlug) {
		toSerialize["orgSlug"] = o.OrgSlug
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	if !IsNil(o.RegionSlug) {
		toSerialize["regionSlug"] = o.RegionSlug
	}
	if !IsNil(o.RegionPublicName) {
		toSerialize["regionPublicName"] = o.RegionPublicName
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ProviderRegion) {
		toSerialize["providerRegion"] = o.ProviderRegion
	}
	if !IsNil(o.RunningVersion) {
		toSerialize["runningVersion"] = o.RunningVersion
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Ssl) {
		toSerialize["ssl"] = o.Ssl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Support) {
		toSerialize["support"] = o.Support
	}
	if !IsNil(o.Trial) {
		toSerialize["trial"] = o.Trial
	}
	if o.TrialExpiresAt.IsSet() {
		toSerialize["trialExpiresAt"] = o.TrialExpiresAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UserQuota) {
		toSerialize["userQuota"] = o.UserQuota
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.AgentManagementInstanceId) {
		toSerialize["agentManagementInstanceId"] = o.AgentManagementInstanceId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormattedApiInstance) UnmarshalJSON(data []byte) (err error) {
	varFormattedApiInstance := _FormattedApiInstance{}

	err = json.Unmarshal(data, &varFormattedApiInstance)

	if err != nil {
		return err
	}

	*o = FormattedApiInstance(varFormattedApiInstance)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alertCnt")
		delete(additionalProperties, "alertQuota")
		delete(additionalProperties, "amInstanceGeneratorUrl")
		delete(additionalProperties, "amInstanceGeneratorUrlDatasource")
		delete(additionalProperties, "amInstanceId")
		delete(additionalProperties, "amInstanceName")
		delete(additionalProperties, "amInstanceStatus")
		delete(additionalProperties, "amInstanceUrl")
		delete(additionalProperties, "billingActiveUsers")
		delete(additionalProperties, "billingEndDate")
		delete(additionalProperties, "billingGrafanaActiveUsers")
		delete(additionalProperties, "billingOnCallActiveUsers")
		delete(additionalProperties, "billingStartDate")
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "clusterName")
		delete(additionalProperties, "clusterSlug")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "currentActiveAdminUsers")
		delete(additionalProperties, "currentActiveEditorUsers")
		delete(additionalProperties, "currentActiveUsers")
		delete(additionalProperties, "currentActiveViewerUsers")
		delete(additionalProperties, "customAuth")
		delete(additionalProperties, "customDomain")
		delete(additionalProperties, "dailyAdminCnt")
		delete(additionalProperties, "dailyEditorCnt")
		delete(additionalProperties, "dailyUserCnt")
		delete(additionalProperties, "dailyViewerCnt")
		delete(additionalProperties, "dashboardCnt")
		delete(additionalProperties, "dashboardQuota")
		delete(additionalProperties, "datasourceCnts")
		delete(additionalProperties, "description")
		delete(additionalProperties, "gateway")
		delete(additionalProperties, "hlInstanceCurrentUsage")
		delete(additionalProperties, "hlInstanceId")
		delete(additionalProperties, "hlInstanceName")
		delete(additionalProperties, "hlInstanceStatus")
		delete(additionalProperties, "hlInstanceUrl")
		delete(additionalProperties, "hmInstanceGraphiteCurrentUsage")
		delete(additionalProperties, "hmInstanceGraphiteId")
		delete(additionalProperties, "hmInstanceGraphiteName")
		delete(additionalProperties, "hmInstanceGraphiteStatus")
		delete(additionalProperties, "hmInstanceGraphiteType")
		delete(additionalProperties, "hmInstanceGraphiteUrl")
		delete(additionalProperties, "hmInstancePromCurrentActiveSeries")
		delete(additionalProperties, "hmInstancePromCurrentUsage")
		delete(additionalProperties, "hmInstancePromId")
		delete(additionalProperties, "hmInstancePromName")
		delete(additionalProperties, "hmInstancePromStatus")
		delete(additionalProperties, "hmInstancePromUrl")
		delete(additionalProperties, "htInstanceId")
		delete(additionalProperties, "htInstanceName")
		delete(additionalProperties, "htInstanceStatus")
		delete(additionalProperties, "htInstanceUrl")
		delete(additionalProperties, "hpInstanceId")
		delete(additionalProperties, "hpInstanceName")
		delete(additionalProperties, "hpInstanceStatus")
		delete(additionalProperties, "hpInstanceUrl")
		delete(additionalProperties, "id")
		delete(additionalProperties, "incident")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "machineLearning")
		delete(additionalProperties, "name")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "orgName")
		delete(additionalProperties, "orgSlug")
		delete(additionalProperties, "plan")
		delete(additionalProperties, "planName")
		delete(additionalProperties, "regionId")
		delete(additionalProperties, "regionSlug")
		delete(additionalProperties, "regionPublicName")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "providerRegion")
		delete(additionalProperties, "runningVersion")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "ssl")
		delete(additionalProperties, "status")
		delete(additionalProperties, "support")
		delete(additionalProperties, "trial")
		delete(additionalProperties, "trialExpiresAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "updatedBy")
		delete(additionalProperties, "url")
		delete(additionalProperties, "userQuota")
		delete(additionalProperties, "version")
		delete(additionalProperties, "agentManagementInstanceId")
		delete(additionalProperties, "config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormattedApiInstance struct {
	value *FormattedApiInstance
	isSet bool
}

func (v NullableFormattedApiInstance) Get() *FormattedApiInstance {
	return v.value
}

func (v *NullableFormattedApiInstance) Set(val *FormattedApiInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFormattedApiInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFormattedApiInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormattedApiInstance(val *FormattedApiInstance) *NullableFormattedApiInstance {
	return &NullableFormattedApiInstance{value: val, isSet: true}
}

func (v NullableFormattedApiInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormattedApiInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
