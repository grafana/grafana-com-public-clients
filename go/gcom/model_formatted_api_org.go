/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"time"
)

// checks if the FormattedApiOrg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormattedApiOrg{}

// FormattedApiOrg struct for FormattedApiOrg
type FormattedApiOrg struct {
	Tags                             []string               `json:"tags,omitempty"`
	AccountManagerId                 *float32               `json:"accountManagerId,omitempty"`
	AccountManagerUsername           *string                `json:"accountManagerUsername,omitempty"`
	AccountManagerName               *string                `json:"accountManagerName,omitempty"`
	AwsCustomerId                    *string                `json:"awsCustomerId,omitempty"`
	AccountOwnerId                   *float32               `json:"accountOwnerId,omitempty"`
	AccountOwnerUsername             *string                `json:"accountOwnerUsername,omitempty"`
	AccountOwnerName                 *string                `json:"accountOwnerName,omitempty"`
	HmBillingStartDate               NullableString         `json:"hmBillingStartDate,omitempty"`
	HmBillingEndDate                 NullableString         `json:"hmBillingEndDate,omitempty"`
	HmBilledToDate                   NullableString         `json:"hmBilledToDate,omitempty"`
	HmOverageWarnDate                NullableString         `json:"hmOverageWarnDate,omitempty"`
	HmOverageAmount                  *float32               `json:"hmOverageAmount,omitempty"`
	HmCurrentPrometheusUsage         *float32               `json:"hmCurrentPrometheusUsage,omitempty"`
	HmCurrentGraphiteUsage           *float32               `json:"hmCurrentGraphiteUsage,omitempty"`
	HlBillingStartDate               NullableString         `json:"hlBillingStartDate,omitempty"`
	HlBillingEndDate                 NullableString         `json:"hlBillingEndDate,omitempty"`
	HlBilledToDate                   NullableString         `json:"hlBilledToDate,omitempty"`
	HlOverageWarnDate                NullableString         `json:"hlOverageWarnDate,omitempty"`
	HlOverageAmount                  *float32               `json:"hlOverageAmount,omitempty"`
	HlCurrentUsage                   *float32               `json:"hlCurrentUsage,omitempty"`
	HgBillingStartDate               NullableString         `json:"hgBillingStartDate,omitempty"`
	HgBillingEndDate                 NullableString         `json:"hgBillingEndDate,omitempty"`
	HgBilledToDate                   NullableString         `json:"hgBilledToDate,omitempty"`
	HgOverageWarnDate                NullableString         `json:"hgOverageWarnDate,omitempty"`
	HgOverageAmount                  *float32               `json:"hgOverageAmount,omitempty"`
	HgActiveUsers                    *float32               `json:"hgActiveUsers,omitempty"`
	HgDatasourceCnts                 map[string]interface{} `json:"hgDatasourceCnts,omitempty"`
	HgIntegrationCnts                map[string]interface{} `json:"hgIntegrationCnts,omitempty"`
	HmGraphiteBillingStartDate       NullableString         `json:"hmGraphiteBillingStartDate,omitempty"`
	HmGraphiteBillingEndDate         NullableString         `json:"hmGraphiteBillingEndDate,omitempty"`
	HmGraphiteBilledToDate           NullableString         `json:"hmGraphiteBilledToDate,omitempty"`
	HmGraphiteOverageWarnDate        NullableString         `json:"hmGraphiteOverageWarnDate,omitempty"`
	HmGraphiteCurrentUsage           *float32               `json:"hmGraphiteCurrentUsage,omitempty"`
	HmGraphiteOverageAmount          *float32               `json:"hmGraphiteOverageAmount,omitempty"`
	HlRetentionBillingStartDate      NullableString         `json:"hlRetentionBillingStartDate,omitempty"`
	HlRetentionBillingEndDate        NullableString         `json:"hlRetentionBillingEndDate,omitempty"`
	HlRetentionBilledToDate          NullableString         `json:"hlRetentionBilledToDate,omitempty"`
	HlRetentionOverageWarnDate       NullableString         `json:"hlRetentionOverageWarnDate,omitempty"`
	HlRetentionCurrentUsage          *float32               `json:"hlRetentionCurrentUsage,omitempty"`
	HlRetentionOverageAmount         *float32               `json:"hlRetentionOverageAmount,omitempty"`
	HtBillingStartDate               NullableString         `json:"htBillingStartDate,omitempty"`
	HtBillingEndDate                 NullableString         `json:"htBillingEndDate,omitempty"`
	HtBilledToDate                   NullableString         `json:"htBilledToDate,omitempty"`
	HtOverageWarnDate                NullableString         `json:"htOverageWarnDate,omitempty"`
	HtCurrentUsage                   *float32               `json:"htCurrentUsage,omitempty"`
	HtOverageAmount                  *float32               `json:"htOverageAmount,omitempty"`
	IrmBillingStartDate              NullableString         `json:"irmBillingStartDate,omitempty"`
	IrmBillingEndDate                NullableString         `json:"irmBillingEndDate,omitempty"`
	IrmBilledToDate                  NullableString         `json:"irmBilledToDate,omitempty"`
	IrmOverageWarnDate               NullableString         `json:"irmOverageWarnDate,omitempty"`
	IrmCurrentUsage                  *float32               `json:"irmCurrentUsage,omitempty"`
	IrmOverageAmount                 *float32               `json:"irmOverageAmount,omitempty"`
	HpBillingStartDate               NullableString         `json:"hpBillingStartDate,omitempty"`
	HpBillingEndDate                 NullableString         `json:"hpBillingEndDate,omitempty"`
	HpBilledToDate                   NullableString         `json:"hpBilledToDate,omitempty"`
	HpOverageWarnDate                NullableString         `json:"hpOverageWarnDate,omitempty"`
	HpCurrentUsage                   *float32               `json:"hpCurrentUsage,omitempty"`
	HpOverageAmount                  *float32               `json:"hpOverageAmount,omitempty"`
	K6VuhBillingStartDate            NullableString         `json:"k6VuhBillingStartDate,omitempty"`
	K6VuhBillingEndDate              NullableString         `json:"k6VuhBillingEndDate,omitempty"`
	K6VuhBilledToDate                NullableString         `json:"k6VuhBilledToDate,omitempty"`
	K6VuhOverageWarnDate             NullableString         `json:"k6VuhOverageWarnDate,omitempty"`
	K6VuhCurrentUsage                *float32               `json:"k6VuhCurrentUsage,omitempty"`
	K6VuhOverageAmount               *float32               `json:"k6VuhOverageAmount,omitempty"`
	K6IPBillingStartDate             NullableString         `json:"k6IPBillingStartDate,omitempty"`
	K6IPBillingEndDate               NullableString         `json:"k6IPBillingEndDate,omitempty"`
	K6IPBilledToDate                 NullableString         `json:"k6IPBilledToDate,omitempty"`
	K6IPOverageWarnDate              NullableString         `json:"k6IPOverageWarnDate,omitempty"`
	K6IPCurrentUsage                 *float32               `json:"k6IPCurrentUsage,omitempty"`
	K6IPOverageAmount                *float32               `json:"k6IPOverageAmount,omitempty"`
	FeO11yBillingStartDate           NullableString         `json:"feO11yBillingStartDate,omitempty"`
	FeO11yBillingEndDate             NullableString         `json:"feO11yBillingEndDate,omitempty"`
	FeO11yBilledToDate               NullableString         `json:"feO11yBilledToDate,omitempty"`
	FeO11yOverageWarnDate            NullableString         `json:"feO11yOverageWarnDate,omitempty"`
	FeO11yCurrentUsage               *float32               `json:"feO11yCurrentUsage,omitempty"`
	FeO11yOverageAmount              *float32               `json:"feO11yOverageAmount,omitempty"`
	GeUsersBillingStartDate          NullableString         `json:"geUsersBillingStartDate,omitempty"`
	GeUsersBillingEndDate            NullableString         `json:"geUsersBillingEndDate,omitempty"`
	GeUsersBilledToDate              NullableString         `json:"geUsersBilledToDate,omitempty"`
	GeUsersOverageWarnDate           NullableString         `json:"geUsersOverageWarnDate,omitempty"`
	GeUsersCurrentUsage              *float32               `json:"geUsersCurrentUsage,omitempty"`
	GeUsersOverageAmount             *float32               `json:"geUsersOverageAmount,omitempty"`
	GeInstancesBillingStartDate      NullableString         `json:"geInstancesBillingStartDate,omitempty"`
	GeInstancesBillingEndDate        NullableString         `json:"geInstancesBillingEndDate,omitempty"`
	GeInstancesBilledToDate          NullableString         `json:"geInstancesBilledToDate,omitempty"`
	GeInstancesOverageWarnDate       NullableString         `json:"geInstancesOverageWarnDate,omitempty"`
	GeInstancesCurrentUsage          *float32               `json:"geInstancesCurrentUsage,omitempty"`
	GeInstancesOverageAmount         *float32               `json:"geInstancesOverageAmount,omitempty"`
	SalesforceAccountId              *string                `json:"salesforceAccountId,omitempty"`
	SalesforceLeadId                 *string                `json:"salesforceLeadId,omitempty"`
	SalesforceCustomOrgId            *string                `json:"salesforceCustomOrgId,omitempty"`
	SlackSupport                     *float32               `json:"slackSupport,omitempty"`
	SlackSupportChannel              *string                `json:"slackSupportChannel,omitempty"`
	TotalOverageAmount               *float32               `json:"totalOverageAmount,omitempty"`
	MemberCnt                        *float32               `json:"memberCnt,omitempty"`
	LicenseCnt                       *float32               `json:"licenseCnt,omitempty"`
	LicenseConfiguredCnt             *float32               `json:"licenseConfiguredCnt,omitempty"`
	LicenseUnconfiguredCnt           *float32               `json:"licenseUnconfiguredCnt,omitempty"`
	HgInstanceCnt                    *float32               `json:"hgInstanceCnt,omitempty"`
	HlInstanceCnt                    *float32               `json:"hlInstanceCnt,omitempty"`
	HtInstanceCnt                    *float32               `json:"htInstanceCnt,omitempty"`
	UbersmithClientId                *float32               `json:"ubersmithClientId,omitempty"`
	IntacctCustomerId                *float32               `json:"intacctCustomerId,omitempty"`
	IntacctCustomerUrl               *string                `json:"intacctCustomerUrl,omitempty"`
	CommittedArr                     *float32               `json:"committedArr,omitempty"`
	PrevCommittedArr                 *float32               `json:"prevCommittedArr,omitempty"`
	ZendeskId                        *float32               `json:"zendeskId,omitempty"`
	HappinessRating                  NullableString         `json:"happinessRating,omitempty"`
	HappinessNote                    NullableString         `json:"happinessNote,omitempty"`
	HappinessReasonCode              NullableString         `json:"happinessReasonCode,omitempty"`
	HappinessCreatedAt               NullableString         `json:"happinessCreatedAt,omitempty"`
	HappinessChangedAt               NullableString         `json:"happinessChangedAt,omitempty"`
	HappinessExpiredAt               NullableString         `json:"happinessExpiredAt,omitempty"`
	HappinessUserName                NullableString         `json:"happinessUserName,omitempty"`
	CancellationClientNotes          NullableString         `json:"cancellationClientNotes,omitempty"`
	CancellationNotes                NullableString         `json:"cancellationNotes,omitempty"`
	CancellationReason               *string                `json:"cancellationReason,omitempty"`
	NetPromoterScore                 NullableFloat32        `json:"netPromoterScore,omitempty"`
	HmFirstOverageDate               NullableTime           `json:"hmFirstOverageDate,omitempty"`
	HmFirstApproachingLimitDate      NullableTime           `json:"hmFirstApproachingLimitDate,omitempty"`
	SpendCommitCreditBalance         *float32               `json:"spendCommitCreditBalance,omitempty"`
	SpendCommitCreditTotal           *float32               `json:"spendCommitCreditTotal,omitempty"`
	ProjectedOverageAmount           *float32               `json:"projectedOverageAmount,omitempty"`
	EstimatedArr                     *float32               `json:"estimatedArr,omitempty"`
	ReferredBy                       *string                `json:"referredBy,omitempty"`
	K6OrgId                          *float32               `json:"k6OrgId,omitempty"`
	Id                               *float32               `json:"id,omitempty"`
	Slug                             *string                `json:"slug,omitempty"`
	Name                             *string                `json:"name,omitempty"`
	Url                              *string                `json:"url,omitempty"`
	CreatedAt                        *string                `json:"createdAt,omitempty"`
	CreatedBy                        NullableString         `json:"createdBy,omitempty"`
	UpdatedAt                        NullableString         `json:"updatedAt,omitempty"`
	UpdatedBy                        NullableString         `json:"updatedBy,omitempty"`
	Avatar                           NullableString         `json:"avatar,omitempty"`
	ChecksPerMonth                   *float32               `json:"checksPerMonth,omitempty"`
	WpPlan                           *string                `json:"wpPlan,omitempty"`
	HgInstanceLimit                  *float32               `json:"hgInstanceLimit,omitempty"`
	HmInstanceLimit                  *float32               `json:"hmInstanceLimit,omitempty"`
	HlInstanceLimit                  *float32               `json:"hlInstanceLimit,omitempty"`
	UserQuota                        *float32               `json:"userQuota,omitempty"`
	SupportPlan                      *string                `json:"supportPlan,omitempty"`
	CreditApproved                   *float32               `json:"creditApproved,omitempty"`
	MsaSignedAt                      NullableString         `json:"msaSignedAt,omitempty"`
	MsaSignedBy                      NullableString         `json:"msaSignedBy,omitempty"`
	EnterprisePlugins                *float32               `json:"enterprisePlugins,omitempty"`
	GrafanaCloud                     *float32               `json:"grafanaCloud,omitempty"`
	Privacy                          *string                `json:"privacy,omitempty"`
	Reseller                         *string                `json:"reseller,omitempty"`
	ResellerId                       NullableFloat32        `json:"resellerId,omitempty"`
	ResellerName                     NullableString         `json:"resellerName,omitempty"`
	EmergencySupport                 *bool                  `json:"emergencySupport,omitempty"`
	IsContractedLicenseAutoProvision *bool                  `json:"isContractedLicenseAutoProvision,omitempty"`
	GcloudMonthlyCost                *float32               `json:"gcloudMonthlyCost,omitempty"`
	HgIncludedUsers                  *float32               `json:"hgIncludedUsers,omitempty"`
	HgTier1Rate                      *float32               `json:"hgTier1Rate,omitempty"`
	HgTier2Min                       *float32               `json:"hgTier2Min,omitempty"`
	HgTier2Rate                      *float32               `json:"hgTier2Rate,omitempty"`
	HgTier3Min                       *float32               `json:"hgTier3Min,omitempty"`
	HgTier3Rate                      *float32               `json:"hgTier3Rate,omitempty"`
	HgUsage                          *float32               `json:"hgUsage,omitempty"`
	HgCurrentActiveUsers             *float32               `json:"hgCurrentActiveUsers,omitempty"`
	HgGrafanaUsage                   *float32               `json:"hgGrafanaUsage,omitempty"`
	HgOnCallUsage                    *float32               `json:"hgOnCallUsage,omitempty"`
	HmIncludedSeries                 *float32               `json:"hmIncludedSeries,omitempty"`
	HmAverageDpm                     *float32               `json:"hmAverageDpm,omitempty"`
	HmTier1Rate                      *float32               `json:"hmTier1Rate,omitempty"`
	HmTier2Min                       *float32               `json:"hmTier2Min,omitempty"`
	HmTier2Rate                      *float32               `json:"hmTier2Rate,omitempty"`
	HmTier3Min                       *float32               `json:"hmTier3Min,omitempty"`
	HmTier3Rate                      *float32               `json:"hmTier3Rate,omitempty"`
	HmUsage                          *float32               `json:"hmUsage,omitempty"`
	HmCurrentUsage                   *float32               `json:"hmCurrentUsage,omitempty"`
	HmGraphiteIncludedUsage          *float32               `json:"hmGraphiteIncludedUsage,omitempty"`
	HmGraphiteTier1Rate              *float32               `json:"hmGraphiteTier1Rate,omitempty"`
	HmGraphiteTier2Min               *float32               `json:"hmGraphiteTier2Min,omitempty"`
	HmGraphiteTier2Rate              *float32               `json:"hmGraphiteTier2Rate,omitempty"`
	HmGraphiteTier3Min               *float32               `json:"hmGraphiteTier3Min,omitempty"`
	HmGraphiteTier3Rate              *float32               `json:"hmGraphiteTier3Rate,omitempty"`
	HmGraphiteUsage                  *float32               `json:"hmGraphiteUsage,omitempty"`
	HlIncludedUsage                  *float32               `json:"hlIncludedUsage,omitempty"`
	HlQueryToIngestRatio             *float32               `json:"hlQueryToIngestRatio,omitempty"`
	HlTier1Rate                      *float32               `json:"hlTier1Rate,omitempty"`
	HlTier2Min                       *float32               `json:"hlTier2Min,omitempty"`
	HlTier2Rate                      *float32               `json:"hlTier2Rate,omitempty"`
	HlTier3Min                       *float32               `json:"hlTier3Min,omitempty"`
	HlTier3Rate                      *float32               `json:"hlTier3Rate,omitempty"`
	HlUsage                          *float32               `json:"hlUsage,omitempty"`
	HlRetentionIncludedUsage         *float32               `json:"hlRetentionIncludedUsage,omitempty"`
	HlRetentionTier1Rate             *float32               `json:"hlRetentionTier1Rate,omitempty"`
	HlRetentionTier2Min              *float32               `json:"hlRetentionTier2Min,omitempty"`
	HlRetentionTier2Rate             *float32               `json:"hlRetentionTier2Rate,omitempty"`
	HlRetentionTier3Min              *float32               `json:"hlRetentionTier3Min,omitempty"`
	HlRetentionTier3Rate             *float32               `json:"hlRetentionTier3Rate,omitempty"`
	HlRetentionUsage                 *float32               `json:"hlRetentionUsage,omitempty"`
	HtIncludedUsage                  *float32               `json:"htIncludedUsage,omitempty"`
	HtTier1Rate                      *float32               `json:"htTier1Rate,omitempty"`
	HtTier2Min                       *float32               `json:"htTier2Min,omitempty"`
	HtTier2Rate                      *float32               `json:"htTier2Rate,omitempty"`
	HtTier3Min                       *float32               `json:"htTier3Min,omitempty"`
	HtTier3Rate                      *float32               `json:"htTier3Rate,omitempty"`
	HtUsage                          *float32               `json:"htUsage,omitempty"`
	HpIncludedUsage                  *float32               `json:"hpIncludedUsage,omitempty"`
	HpTier1Rate                      *float32               `json:"hpTier1Rate,omitempty"`
	HpTier2Min                       *float32               `json:"hpTier2Min,omitempty"`
	HpTier2Rate                      *float32               `json:"hpTier2Rate,omitempty"`
	HpTier3Min                       *float32               `json:"hpTier3Min,omitempty"`
	HpTier3Rate                      *float32               `json:"hpTier3Rate,omitempty"`
	HpUsage                          *float32               `json:"hpUsage,omitempty"`
	IrmStatus                        *float32               `json:"irmStatus,omitempty"`
	IrmIncludedUsage                 *float32               `json:"irmIncludedUsage,omitempty"`
	IrmTier1Rate                     *float32               `json:"irmTier1Rate,omitempty"`
	IrmTier2Min                      *float32               `json:"irmTier2Min,omitempty"`
	IrmTier2Rate                     *float32               `json:"irmTier2Rate,omitempty"`
	IrmTier3Min                      *float32               `json:"irmTier3Min,omitempty"`
	IrmTier3Rate                     *float32               `json:"irmTier3Rate,omitempty"`
	IrmUsage                         *float32               `json:"irmUsage,omitempty"`
	K6VuhIncludedUsage               *float32               `json:"k6VuhIncludedUsage,omitempty"`
	K6VuhTier1Rate                   *float32               `json:"k6VuhTier1Rate,omitempty"`
	K6VuhTier2Min                    *float32               `json:"k6VuhTier2Min,omitempty"`
	K6VuhTier2Rate                   *float32               `json:"k6VuhTier2Rate,omitempty"`
	K6VuhTier3Min                    *float32               `json:"k6VuhTier3Min,omitempty"`
	K6VuhTier3Rate                   *float32               `json:"k6VuhTier3Rate,omitempty"`
	K6VuhUnits                       *float32               `json:"k6VuhUnits,omitempty"`
	K6VuhUsage                       *float32               `json:"k6VuhUsage,omitempty"`
	K6IPIncludedUsage                *float32               `json:"k6IPIncludedUsage,omitempty"`
	K6IPTier1Rate                    *float32               `json:"k6IPTier1Rate,omitempty"`
	K6IPTier2Min                     *float32               `json:"k6IPTier2Min,omitempty"`
	K6IPTier2Rate                    *float32               `json:"k6IPTier2Rate,omitempty"`
	K6IPTier3Min                     *float32               `json:"k6IPTier3Min,omitempty"`
	K6IPTier3Rate                    *float32               `json:"k6IPTier3Rate,omitempty"`
	K6IPUsage                        *float32               `json:"k6IPUsage,omitempty"`
	FeO11yIncludedUsage              *float32               `json:"feO11yIncludedUsage,omitempty"`
	FeO11yTier1Rate                  *float32               `json:"feO11yTier1Rate,omitempty"`
	FeO11yTier2Min                   *float32               `json:"feO11yTier2Min,omitempty"`
	FeO11yTier2Rate                  *float32               `json:"feO11yTier2Rate,omitempty"`
	FeO11yTier3Min                   *float32               `json:"feO11yTier3Min,omitempty"`
	FeO11yTier3Rate                  *float32               `json:"feO11yTier3Rate,omitempty"`
	FeO11yUnits                      *float32               `json:"feO11yUnits,omitempty"`
	FeO11yUsage                      *float32               `json:"feO11yUsage,omitempty"`
	GeUsersIncludedUsage             *float32               `json:"geUsersIncludedUsage,omitempty"`
	GeUsersTier1Rate                 *float32               `json:"geUsersTier1Rate,omitempty"`
	GeUsersTier2Min                  *float32               `json:"geUsersTier2Min,omitempty"`
	GeUsersTier2Rate                 *float32               `json:"geUsersTier2Rate,omitempty"`
	GeUsersTier3Min                  *float32               `json:"geUsersTier3Min,omitempty"`
	GeUsersTier3Rate                 *float32               `json:"geUsersTier3Rate,omitempty"`
	GeUsersUsage                     *float32               `json:"geUsersUsage,omitempty"`
	GeInstancesIncludedUsage         *float32               `json:"geInstancesIncludedUsage,omitempty"`
	GeInstancesTier1Rate             *float32               `json:"geInstancesTier1Rate,omitempty"`
	GeInstancesTier2Min              *float32               `json:"geInstancesTier2Min,omitempty"`
	GeInstancesTier2Rate             *float32               `json:"geInstancesTier2Rate,omitempty"`
	GeInstancesTier3Min              *float32               `json:"geInstancesTier3Min,omitempty"`
	GeInstancesTier3Rate             *float32               `json:"geInstancesTier3Rate,omitempty"`
	GeInstancesUsage                 *float32               `json:"geInstancesUsage,omitempty"`
	HgPluginUsersOverageRate         NullableFloat32        `json:"hgPluginUsersOverageRate,omitempty"`
	HgPluginUsersIncludedUsage       NullableFloat32        `json:"hgPluginUsersIncludedUsage,omitempty"`
	HmGraphiteInstanceCnt            *float32               `json:"hmGraphiteInstanceCnt,omitempty"`
	HmPrometheusInstanceCnt          *float32               `json:"hmPrometheusInstanceCnt,omitempty"`
	AwsMarketplaceSupport            *float32               `json:"awsMarketplaceSupport,omitempty"`
	TrialStartDate                   NullableString         `json:"trialStartDate,omitempty"`
	TrialEndDate                     NullableString         `json:"trialEndDate,omitempty"`
	TrialLengthDays                  NullableFloat32        `json:"trialLengthDays,omitempty"`
	TrialNoticeDate                  NullableString         `json:"trialNoticeDate,omitempty"`
	CancellationDate                 NullableString         `json:"cancellationDate,omitempty"`
	RetainedStackId                  *float32               `json:"retainedStackId,omitempty"`
	PluginSignatureType              *string                `json:"pluginSignatureType,omitempty"`
	ContractType                     *string                `json:"contractType,omitempty"`
	ContractTypeId                   *float32               `json:"contractTypeId,omitempty"`
	Links                            []LinksInner1          `json:"links,omitempty"`
	Subscriptions                    *Subscriptions         `json:"subscriptions,omitempty"`
	AdditionalProperties             map[string]interface{}
}

type _FormattedApiOrg FormattedApiOrg

// NewFormattedApiOrg instantiates a new FormattedApiOrg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormattedApiOrg() *FormattedApiOrg {
	this := FormattedApiOrg{}
	return &this
}

// NewFormattedApiOrgWithDefaults instantiates a new FormattedApiOrg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormattedApiOrgWithDefaults() *FormattedApiOrg {
	this := FormattedApiOrg{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FormattedApiOrg) SetTags(v []string) {
	o.Tags = v
}

// GetAccountManagerId returns the AccountManagerId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountManagerId() float32 {
	if o == nil || IsNil(o.AccountManagerId) {
		var ret float32
		return ret
	}
	return *o.AccountManagerId
}

// GetAccountManagerIdOk returns a tuple with the AccountManagerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountManagerIdOk() (*float32, bool) {
	if o == nil || IsNil(o.AccountManagerId) {
		return nil, false
	}
	return o.AccountManagerId, true
}

// HasAccountManagerId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountManagerId() bool {
	if o != nil && !IsNil(o.AccountManagerId) {
		return true
	}

	return false
}

// SetAccountManagerId gets a reference to the given float32 and assigns it to the AccountManagerId field.
func (o *FormattedApiOrg) SetAccountManagerId(v float32) {
	o.AccountManagerId = &v
}

// GetAccountManagerUsername returns the AccountManagerUsername field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountManagerUsername() string {
	if o == nil || IsNil(o.AccountManagerUsername) {
		var ret string
		return ret
	}
	return *o.AccountManagerUsername
}

// GetAccountManagerUsernameOk returns a tuple with the AccountManagerUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountManagerUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountManagerUsername) {
		return nil, false
	}
	return o.AccountManagerUsername, true
}

// HasAccountManagerUsername returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountManagerUsername() bool {
	if o != nil && !IsNil(o.AccountManagerUsername) {
		return true
	}

	return false
}

// SetAccountManagerUsername gets a reference to the given string and assigns it to the AccountManagerUsername field.
func (o *FormattedApiOrg) SetAccountManagerUsername(v string) {
	o.AccountManagerUsername = &v
}

// GetAccountManagerName returns the AccountManagerName field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountManagerName() string {
	if o == nil || IsNil(o.AccountManagerName) {
		var ret string
		return ret
	}
	return *o.AccountManagerName
}

// GetAccountManagerNameOk returns a tuple with the AccountManagerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountManagerNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountManagerName) {
		return nil, false
	}
	return o.AccountManagerName, true
}

// HasAccountManagerName returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountManagerName() bool {
	if o != nil && !IsNil(o.AccountManagerName) {
		return true
	}

	return false
}

// SetAccountManagerName gets a reference to the given string and assigns it to the AccountManagerName field.
func (o *FormattedApiOrg) SetAccountManagerName(v string) {
	o.AccountManagerName = &v
}

// GetAwsCustomerId returns the AwsCustomerId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAwsCustomerId() string {
	if o == nil || IsNil(o.AwsCustomerId) {
		var ret string
		return ret
	}
	return *o.AwsCustomerId
}

// GetAwsCustomerIdOk returns a tuple with the AwsCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAwsCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsCustomerId) {
		return nil, false
	}
	return o.AwsCustomerId, true
}

// HasAwsCustomerId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAwsCustomerId() bool {
	if o != nil && !IsNil(o.AwsCustomerId) {
		return true
	}

	return false
}

// SetAwsCustomerId gets a reference to the given string and assigns it to the AwsCustomerId field.
func (o *FormattedApiOrg) SetAwsCustomerId(v string) {
	o.AwsCustomerId = &v
}

// GetAccountOwnerId returns the AccountOwnerId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountOwnerId() float32 {
	if o == nil || IsNil(o.AccountOwnerId) {
		var ret float32
		return ret
	}
	return *o.AccountOwnerId
}

// GetAccountOwnerIdOk returns a tuple with the AccountOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountOwnerIdOk() (*float32, bool) {
	if o == nil || IsNil(o.AccountOwnerId) {
		return nil, false
	}
	return o.AccountOwnerId, true
}

// HasAccountOwnerId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountOwnerId() bool {
	if o != nil && !IsNil(o.AccountOwnerId) {
		return true
	}

	return false
}

// SetAccountOwnerId gets a reference to the given float32 and assigns it to the AccountOwnerId field.
func (o *FormattedApiOrg) SetAccountOwnerId(v float32) {
	o.AccountOwnerId = &v
}

// GetAccountOwnerUsername returns the AccountOwnerUsername field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountOwnerUsername() string {
	if o == nil || IsNil(o.AccountOwnerUsername) {
		var ret string
		return ret
	}
	return *o.AccountOwnerUsername
}

// GetAccountOwnerUsernameOk returns a tuple with the AccountOwnerUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountOwnerUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountOwnerUsername) {
		return nil, false
	}
	return o.AccountOwnerUsername, true
}

// HasAccountOwnerUsername returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountOwnerUsername() bool {
	if o != nil && !IsNil(o.AccountOwnerUsername) {
		return true
	}

	return false
}

// SetAccountOwnerUsername gets a reference to the given string and assigns it to the AccountOwnerUsername field.
func (o *FormattedApiOrg) SetAccountOwnerUsername(v string) {
	o.AccountOwnerUsername = &v
}

// GetAccountOwnerName returns the AccountOwnerName field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAccountOwnerName() string {
	if o == nil || IsNil(o.AccountOwnerName) {
		var ret string
		return ret
	}
	return *o.AccountOwnerName
}

// GetAccountOwnerNameOk returns a tuple with the AccountOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAccountOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountOwnerName) {
		return nil, false
	}
	return o.AccountOwnerName, true
}

// HasAccountOwnerName returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAccountOwnerName() bool {
	if o != nil && !IsNil(o.AccountOwnerName) {
		return true
	}

	return false
}

// SetAccountOwnerName gets a reference to the given string and assigns it to the AccountOwnerName field.
func (o *FormattedApiOrg) SetAccountOwnerName(v string) {
	o.AccountOwnerName = &v
}

// GetHmBillingStartDate returns the HmBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmBillingStartDate() string {
	if o == nil || IsNil(o.HmBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmBillingStartDate.Get()
}

// GetHmBillingStartDateOk returns a tuple with the HmBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmBillingStartDate.Get(), o.HmBillingStartDate.IsSet()
}

// HasHmBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmBillingStartDate() bool {
	if o != nil && o.HmBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHmBillingStartDate gets a reference to the given NullableString and assigns it to the HmBillingStartDate field.
func (o *FormattedApiOrg) SetHmBillingStartDate(v string) {
	o.HmBillingStartDate.Set(&v)
}

// SetHmBillingStartDateNil sets the value for HmBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHmBillingStartDateNil() {
	o.HmBillingStartDate.Set(nil)
}

// UnsetHmBillingStartDate ensures that no value is present for HmBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmBillingStartDate() {
	o.HmBillingStartDate.Unset()
}

// GetHmBillingEndDate returns the HmBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmBillingEndDate() string {
	if o == nil || IsNil(o.HmBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmBillingEndDate.Get()
}

// GetHmBillingEndDateOk returns a tuple with the HmBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmBillingEndDate.Get(), o.HmBillingEndDate.IsSet()
}

// HasHmBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmBillingEndDate() bool {
	if o != nil && o.HmBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHmBillingEndDate gets a reference to the given NullableString and assigns it to the HmBillingEndDate field.
func (o *FormattedApiOrg) SetHmBillingEndDate(v string) {
	o.HmBillingEndDate.Set(&v)
}

// SetHmBillingEndDateNil sets the value for HmBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHmBillingEndDateNil() {
	o.HmBillingEndDate.Set(nil)
}

// UnsetHmBillingEndDate ensures that no value is present for HmBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmBillingEndDate() {
	o.HmBillingEndDate.Unset()
}

// GetHmBilledToDate returns the HmBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmBilledToDate() string {
	if o == nil || IsNil(o.HmBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmBilledToDate.Get()
}

// GetHmBilledToDateOk returns a tuple with the HmBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmBilledToDate.Get(), o.HmBilledToDate.IsSet()
}

// HasHmBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmBilledToDate() bool {
	if o != nil && o.HmBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHmBilledToDate gets a reference to the given NullableString and assigns it to the HmBilledToDate field.
func (o *FormattedApiOrg) SetHmBilledToDate(v string) {
	o.HmBilledToDate.Set(&v)
}

// SetHmBilledToDateNil sets the value for HmBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHmBilledToDateNil() {
	o.HmBilledToDate.Set(nil)
}

// UnsetHmBilledToDate ensures that no value is present for HmBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmBilledToDate() {
	o.HmBilledToDate.Unset()
}

// GetHmOverageWarnDate returns the HmOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmOverageWarnDate() string {
	if o == nil || IsNil(o.HmOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmOverageWarnDate.Get()
}

// GetHmOverageWarnDateOk returns a tuple with the HmOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmOverageWarnDate.Get(), o.HmOverageWarnDate.IsSet()
}

// HasHmOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmOverageWarnDate() bool {
	if o != nil && o.HmOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHmOverageWarnDate gets a reference to the given NullableString and assigns it to the HmOverageWarnDate field.
func (o *FormattedApiOrg) SetHmOverageWarnDate(v string) {
	o.HmOverageWarnDate.Set(&v)
}

// SetHmOverageWarnDateNil sets the value for HmOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHmOverageWarnDateNil() {
	o.HmOverageWarnDate.Set(nil)
}

// UnsetHmOverageWarnDate ensures that no value is present for HmOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmOverageWarnDate() {
	o.HmOverageWarnDate.Unset()
}

// GetHmOverageAmount returns the HmOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmOverageAmount() float32 {
	if o == nil || IsNil(o.HmOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HmOverageAmount
}

// GetHmOverageAmountOk returns a tuple with the HmOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HmOverageAmount) {
		return nil, false
	}
	return o.HmOverageAmount, true
}

// HasHmOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmOverageAmount() bool {
	if o != nil && !IsNil(o.HmOverageAmount) {
		return true
	}

	return false
}

// SetHmOverageAmount gets a reference to the given float32 and assigns it to the HmOverageAmount field.
func (o *FormattedApiOrg) SetHmOverageAmount(v float32) {
	o.HmOverageAmount = &v
}

// GetHmCurrentPrometheusUsage returns the HmCurrentPrometheusUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmCurrentPrometheusUsage() float32 {
	if o == nil || IsNil(o.HmCurrentPrometheusUsage) {
		var ret float32
		return ret
	}
	return *o.HmCurrentPrometheusUsage
}

// GetHmCurrentPrometheusUsageOk returns a tuple with the HmCurrentPrometheusUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmCurrentPrometheusUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmCurrentPrometheusUsage) {
		return nil, false
	}
	return o.HmCurrentPrometheusUsage, true
}

// HasHmCurrentPrometheusUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmCurrentPrometheusUsage() bool {
	if o != nil && !IsNil(o.HmCurrentPrometheusUsage) {
		return true
	}

	return false
}

// SetHmCurrentPrometheusUsage gets a reference to the given float32 and assigns it to the HmCurrentPrometheusUsage field.
func (o *FormattedApiOrg) SetHmCurrentPrometheusUsage(v float32) {
	o.HmCurrentPrometheusUsage = &v
}

// GetHmCurrentGraphiteUsage returns the HmCurrentGraphiteUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmCurrentGraphiteUsage() float32 {
	if o == nil || IsNil(o.HmCurrentGraphiteUsage) {
		var ret float32
		return ret
	}
	return *o.HmCurrentGraphiteUsage
}

// GetHmCurrentGraphiteUsageOk returns a tuple with the HmCurrentGraphiteUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmCurrentGraphiteUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmCurrentGraphiteUsage) {
		return nil, false
	}
	return o.HmCurrentGraphiteUsage, true
}

// HasHmCurrentGraphiteUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmCurrentGraphiteUsage() bool {
	if o != nil && !IsNil(o.HmCurrentGraphiteUsage) {
		return true
	}

	return false
}

// SetHmCurrentGraphiteUsage gets a reference to the given float32 and assigns it to the HmCurrentGraphiteUsage field.
func (o *FormattedApiOrg) SetHmCurrentGraphiteUsage(v float32) {
	o.HmCurrentGraphiteUsage = &v
}

// GetHlBillingStartDate returns the HlBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlBillingStartDate() string {
	if o == nil || IsNil(o.HlBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlBillingStartDate.Get()
}

// GetHlBillingStartDateOk returns a tuple with the HlBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlBillingStartDate.Get(), o.HlBillingStartDate.IsSet()
}

// HasHlBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlBillingStartDate() bool {
	if o != nil && o.HlBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHlBillingStartDate gets a reference to the given NullableString and assigns it to the HlBillingStartDate field.
func (o *FormattedApiOrg) SetHlBillingStartDate(v string) {
	o.HlBillingStartDate.Set(&v)
}

// SetHlBillingStartDateNil sets the value for HlBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHlBillingStartDateNil() {
	o.HlBillingStartDate.Set(nil)
}

// UnsetHlBillingStartDate ensures that no value is present for HlBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlBillingStartDate() {
	o.HlBillingStartDate.Unset()
}

// GetHlBillingEndDate returns the HlBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlBillingEndDate() string {
	if o == nil || IsNil(o.HlBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlBillingEndDate.Get()
}

// GetHlBillingEndDateOk returns a tuple with the HlBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlBillingEndDate.Get(), o.HlBillingEndDate.IsSet()
}

// HasHlBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlBillingEndDate() bool {
	if o != nil && o.HlBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHlBillingEndDate gets a reference to the given NullableString and assigns it to the HlBillingEndDate field.
func (o *FormattedApiOrg) SetHlBillingEndDate(v string) {
	o.HlBillingEndDate.Set(&v)
}

// SetHlBillingEndDateNil sets the value for HlBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHlBillingEndDateNil() {
	o.HlBillingEndDate.Set(nil)
}

// UnsetHlBillingEndDate ensures that no value is present for HlBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlBillingEndDate() {
	o.HlBillingEndDate.Unset()
}

// GetHlBilledToDate returns the HlBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlBilledToDate() string {
	if o == nil || IsNil(o.HlBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlBilledToDate.Get()
}

// GetHlBilledToDateOk returns a tuple with the HlBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlBilledToDate.Get(), o.HlBilledToDate.IsSet()
}

// HasHlBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlBilledToDate() bool {
	if o != nil && o.HlBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHlBilledToDate gets a reference to the given NullableString and assigns it to the HlBilledToDate field.
func (o *FormattedApiOrg) SetHlBilledToDate(v string) {
	o.HlBilledToDate.Set(&v)
}

// SetHlBilledToDateNil sets the value for HlBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHlBilledToDateNil() {
	o.HlBilledToDate.Set(nil)
}

// UnsetHlBilledToDate ensures that no value is present for HlBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlBilledToDate() {
	o.HlBilledToDate.Unset()
}

// GetHlOverageWarnDate returns the HlOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlOverageWarnDate() string {
	if o == nil || IsNil(o.HlOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlOverageWarnDate.Get()
}

// GetHlOverageWarnDateOk returns a tuple with the HlOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlOverageWarnDate.Get(), o.HlOverageWarnDate.IsSet()
}

// HasHlOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlOverageWarnDate() bool {
	if o != nil && o.HlOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHlOverageWarnDate gets a reference to the given NullableString and assigns it to the HlOverageWarnDate field.
func (o *FormattedApiOrg) SetHlOverageWarnDate(v string) {
	o.HlOverageWarnDate.Set(&v)
}

// SetHlOverageWarnDateNil sets the value for HlOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHlOverageWarnDateNil() {
	o.HlOverageWarnDate.Set(nil)
}

// UnsetHlOverageWarnDate ensures that no value is present for HlOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlOverageWarnDate() {
	o.HlOverageWarnDate.Unset()
}

// GetHlOverageAmount returns the HlOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlOverageAmount() float32 {
	if o == nil || IsNil(o.HlOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HlOverageAmount
}

// GetHlOverageAmountOk returns a tuple with the HlOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HlOverageAmount) {
		return nil, false
	}
	return o.HlOverageAmount, true
}

// HasHlOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlOverageAmount() bool {
	if o != nil && !IsNil(o.HlOverageAmount) {
		return true
	}

	return false
}

// SetHlOverageAmount gets a reference to the given float32 and assigns it to the HlOverageAmount field.
func (o *FormattedApiOrg) SetHlOverageAmount(v float32) {
	o.HlOverageAmount = &v
}

// GetHlCurrentUsage returns the HlCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlCurrentUsage() float32 {
	if o == nil || IsNil(o.HlCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HlCurrentUsage
}

// GetHlCurrentUsageOk returns a tuple with the HlCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlCurrentUsage) {
		return nil, false
	}
	return o.HlCurrentUsage, true
}

// HasHlCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlCurrentUsage() bool {
	if o != nil && !IsNil(o.HlCurrentUsage) {
		return true
	}

	return false
}

// SetHlCurrentUsage gets a reference to the given float32 and assigns it to the HlCurrentUsage field.
func (o *FormattedApiOrg) SetHlCurrentUsage(v float32) {
	o.HlCurrentUsage = &v
}

// GetHgBillingStartDate returns the HgBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgBillingStartDate() string {
	if o == nil || IsNil(o.HgBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HgBillingStartDate.Get()
}

// GetHgBillingStartDateOk returns a tuple with the HgBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgBillingStartDate.Get(), o.HgBillingStartDate.IsSet()
}

// HasHgBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgBillingStartDate() bool {
	if o != nil && o.HgBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHgBillingStartDate gets a reference to the given NullableString and assigns it to the HgBillingStartDate field.
func (o *FormattedApiOrg) SetHgBillingStartDate(v string) {
	o.HgBillingStartDate.Set(&v)
}

// SetHgBillingStartDateNil sets the value for HgBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHgBillingStartDateNil() {
	o.HgBillingStartDate.Set(nil)
}

// UnsetHgBillingStartDate ensures that no value is present for HgBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgBillingStartDate() {
	o.HgBillingStartDate.Unset()
}

// GetHgBillingEndDate returns the HgBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgBillingEndDate() string {
	if o == nil || IsNil(o.HgBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HgBillingEndDate.Get()
}

// GetHgBillingEndDateOk returns a tuple with the HgBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgBillingEndDate.Get(), o.HgBillingEndDate.IsSet()
}

// HasHgBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgBillingEndDate() bool {
	if o != nil && o.HgBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHgBillingEndDate gets a reference to the given NullableString and assigns it to the HgBillingEndDate field.
func (o *FormattedApiOrg) SetHgBillingEndDate(v string) {
	o.HgBillingEndDate.Set(&v)
}

// SetHgBillingEndDateNil sets the value for HgBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHgBillingEndDateNil() {
	o.HgBillingEndDate.Set(nil)
}

// UnsetHgBillingEndDate ensures that no value is present for HgBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgBillingEndDate() {
	o.HgBillingEndDate.Unset()
}

// GetHgBilledToDate returns the HgBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgBilledToDate() string {
	if o == nil || IsNil(o.HgBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HgBilledToDate.Get()
}

// GetHgBilledToDateOk returns a tuple with the HgBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgBilledToDate.Get(), o.HgBilledToDate.IsSet()
}

// HasHgBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgBilledToDate() bool {
	if o != nil && o.HgBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHgBilledToDate gets a reference to the given NullableString and assigns it to the HgBilledToDate field.
func (o *FormattedApiOrg) SetHgBilledToDate(v string) {
	o.HgBilledToDate.Set(&v)
}

// SetHgBilledToDateNil sets the value for HgBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHgBilledToDateNil() {
	o.HgBilledToDate.Set(nil)
}

// UnsetHgBilledToDate ensures that no value is present for HgBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgBilledToDate() {
	o.HgBilledToDate.Unset()
}

// GetHgOverageWarnDate returns the HgOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgOverageWarnDate() string {
	if o == nil || IsNil(o.HgOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HgOverageWarnDate.Get()
}

// GetHgOverageWarnDateOk returns a tuple with the HgOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgOverageWarnDate.Get(), o.HgOverageWarnDate.IsSet()
}

// HasHgOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgOverageWarnDate() bool {
	if o != nil && o.HgOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHgOverageWarnDate gets a reference to the given NullableString and assigns it to the HgOverageWarnDate field.
func (o *FormattedApiOrg) SetHgOverageWarnDate(v string) {
	o.HgOverageWarnDate.Set(&v)
}

// SetHgOverageWarnDateNil sets the value for HgOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHgOverageWarnDateNil() {
	o.HgOverageWarnDate.Set(nil)
}

// UnsetHgOverageWarnDate ensures that no value is present for HgOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgOverageWarnDate() {
	o.HgOverageWarnDate.Unset()
}

// GetHgOverageAmount returns the HgOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgOverageAmount() float32 {
	if o == nil || IsNil(o.HgOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HgOverageAmount
}

// GetHgOverageAmountOk returns a tuple with the HgOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HgOverageAmount) {
		return nil, false
	}
	return o.HgOverageAmount, true
}

// HasHgOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgOverageAmount() bool {
	if o != nil && !IsNil(o.HgOverageAmount) {
		return true
	}

	return false
}

// SetHgOverageAmount gets a reference to the given float32 and assigns it to the HgOverageAmount field.
func (o *FormattedApiOrg) SetHgOverageAmount(v float32) {
	o.HgOverageAmount = &v
}

// GetHgActiveUsers returns the HgActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgActiveUsers() float32 {
	if o == nil || IsNil(o.HgActiveUsers) {
		var ret float32
		return ret
	}
	return *o.HgActiveUsers
}

// GetHgActiveUsersOk returns a tuple with the HgActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.HgActiveUsers) {
		return nil, false
	}
	return o.HgActiveUsers, true
}

// HasHgActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgActiveUsers() bool {
	if o != nil && !IsNil(o.HgActiveUsers) {
		return true
	}

	return false
}

// SetHgActiveUsers gets a reference to the given float32 and assigns it to the HgActiveUsers field.
func (o *FormattedApiOrg) SetHgActiveUsers(v float32) {
	o.HgActiveUsers = &v
}

// GetHgDatasourceCnts returns the HgDatasourceCnts field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgDatasourceCnts() map[string]interface{} {
	if o == nil || IsNil(o.HgDatasourceCnts) {
		var ret map[string]interface{}
		return ret
	}
	return o.HgDatasourceCnts
}

// GetHgDatasourceCntsOk returns a tuple with the HgDatasourceCnts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgDatasourceCntsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HgDatasourceCnts) {
		return map[string]interface{}{}, false
	}
	return o.HgDatasourceCnts, true
}

// HasHgDatasourceCnts returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgDatasourceCnts() bool {
	if o != nil && !IsNil(o.HgDatasourceCnts) {
		return true
	}

	return false
}

// SetHgDatasourceCnts gets a reference to the given map[string]interface{} and assigns it to the HgDatasourceCnts field.
func (o *FormattedApiOrg) SetHgDatasourceCnts(v map[string]interface{}) {
	o.HgDatasourceCnts = v
}

// GetHgIntegrationCnts returns the HgIntegrationCnts field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgIntegrationCnts() map[string]interface{} {
	if o == nil || IsNil(o.HgIntegrationCnts) {
		var ret map[string]interface{}
		return ret
	}
	return o.HgIntegrationCnts
}

// GetHgIntegrationCntsOk returns a tuple with the HgIntegrationCnts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgIntegrationCntsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HgIntegrationCnts) {
		return map[string]interface{}{}, false
	}
	return o.HgIntegrationCnts, true
}

// HasHgIntegrationCnts returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgIntegrationCnts() bool {
	if o != nil && !IsNil(o.HgIntegrationCnts) {
		return true
	}

	return false
}

// SetHgIntegrationCnts gets a reference to the given map[string]interface{} and assigns it to the HgIntegrationCnts field.
func (o *FormattedApiOrg) SetHgIntegrationCnts(v map[string]interface{}) {
	o.HgIntegrationCnts = v
}

// GetHmGraphiteBillingStartDate returns the HmGraphiteBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmGraphiteBillingStartDate() string {
	if o == nil || IsNil(o.HmGraphiteBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmGraphiteBillingStartDate.Get()
}

// GetHmGraphiteBillingStartDateOk returns a tuple with the HmGraphiteBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmGraphiteBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmGraphiteBillingStartDate.Get(), o.HmGraphiteBillingStartDate.IsSet()
}

// HasHmGraphiteBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteBillingStartDate() bool {
	if o != nil && o.HmGraphiteBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHmGraphiteBillingStartDate gets a reference to the given NullableString and assigns it to the HmGraphiteBillingStartDate field.
func (o *FormattedApiOrg) SetHmGraphiteBillingStartDate(v string) {
	o.HmGraphiteBillingStartDate.Set(&v)
}

// SetHmGraphiteBillingStartDateNil sets the value for HmGraphiteBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHmGraphiteBillingStartDateNil() {
	o.HmGraphiteBillingStartDate.Set(nil)
}

// UnsetHmGraphiteBillingStartDate ensures that no value is present for HmGraphiteBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmGraphiteBillingStartDate() {
	o.HmGraphiteBillingStartDate.Unset()
}

// GetHmGraphiteBillingEndDate returns the HmGraphiteBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmGraphiteBillingEndDate() string {
	if o == nil || IsNil(o.HmGraphiteBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmGraphiteBillingEndDate.Get()
}

// GetHmGraphiteBillingEndDateOk returns a tuple with the HmGraphiteBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmGraphiteBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmGraphiteBillingEndDate.Get(), o.HmGraphiteBillingEndDate.IsSet()
}

// HasHmGraphiteBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteBillingEndDate() bool {
	if o != nil && o.HmGraphiteBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHmGraphiteBillingEndDate gets a reference to the given NullableString and assigns it to the HmGraphiteBillingEndDate field.
func (o *FormattedApiOrg) SetHmGraphiteBillingEndDate(v string) {
	o.HmGraphiteBillingEndDate.Set(&v)
}

// SetHmGraphiteBillingEndDateNil sets the value for HmGraphiteBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHmGraphiteBillingEndDateNil() {
	o.HmGraphiteBillingEndDate.Set(nil)
}

// UnsetHmGraphiteBillingEndDate ensures that no value is present for HmGraphiteBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmGraphiteBillingEndDate() {
	o.HmGraphiteBillingEndDate.Unset()
}

// GetHmGraphiteBilledToDate returns the HmGraphiteBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmGraphiteBilledToDate() string {
	if o == nil || IsNil(o.HmGraphiteBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmGraphiteBilledToDate.Get()
}

// GetHmGraphiteBilledToDateOk returns a tuple with the HmGraphiteBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmGraphiteBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmGraphiteBilledToDate.Get(), o.HmGraphiteBilledToDate.IsSet()
}

// HasHmGraphiteBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteBilledToDate() bool {
	if o != nil && o.HmGraphiteBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHmGraphiteBilledToDate gets a reference to the given NullableString and assigns it to the HmGraphiteBilledToDate field.
func (o *FormattedApiOrg) SetHmGraphiteBilledToDate(v string) {
	o.HmGraphiteBilledToDate.Set(&v)
}

// SetHmGraphiteBilledToDateNil sets the value for HmGraphiteBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHmGraphiteBilledToDateNil() {
	o.HmGraphiteBilledToDate.Set(nil)
}

// UnsetHmGraphiteBilledToDate ensures that no value is present for HmGraphiteBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmGraphiteBilledToDate() {
	o.HmGraphiteBilledToDate.Unset()
}

// GetHmGraphiteOverageWarnDate returns the HmGraphiteOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmGraphiteOverageWarnDate() string {
	if o == nil || IsNil(o.HmGraphiteOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HmGraphiteOverageWarnDate.Get()
}

// GetHmGraphiteOverageWarnDateOk returns a tuple with the HmGraphiteOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmGraphiteOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmGraphiteOverageWarnDate.Get(), o.HmGraphiteOverageWarnDate.IsSet()
}

// HasHmGraphiteOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteOverageWarnDate() bool {
	if o != nil && o.HmGraphiteOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHmGraphiteOverageWarnDate gets a reference to the given NullableString and assigns it to the HmGraphiteOverageWarnDate field.
func (o *FormattedApiOrg) SetHmGraphiteOverageWarnDate(v string) {
	o.HmGraphiteOverageWarnDate.Set(&v)
}

// SetHmGraphiteOverageWarnDateNil sets the value for HmGraphiteOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHmGraphiteOverageWarnDateNil() {
	o.HmGraphiteOverageWarnDate.Set(nil)
}

// UnsetHmGraphiteOverageWarnDate ensures that no value is present for HmGraphiteOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmGraphiteOverageWarnDate() {
	o.HmGraphiteOverageWarnDate.Unset()
}

// GetHmGraphiteCurrentUsage returns the HmGraphiteCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteCurrentUsage() float32 {
	if o == nil || IsNil(o.HmGraphiteCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteCurrentUsage
}

// GetHmGraphiteCurrentUsageOk returns a tuple with the HmGraphiteCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteCurrentUsage) {
		return nil, false
	}
	return o.HmGraphiteCurrentUsage, true
}

// HasHmGraphiteCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteCurrentUsage() bool {
	if o != nil && !IsNil(o.HmGraphiteCurrentUsage) {
		return true
	}

	return false
}

// SetHmGraphiteCurrentUsage gets a reference to the given float32 and assigns it to the HmGraphiteCurrentUsage field.
func (o *FormattedApiOrg) SetHmGraphiteCurrentUsage(v float32) {
	o.HmGraphiteCurrentUsage = &v
}

// GetHmGraphiteOverageAmount returns the HmGraphiteOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteOverageAmount() float32 {
	if o == nil || IsNil(o.HmGraphiteOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteOverageAmount
}

// GetHmGraphiteOverageAmountOk returns a tuple with the HmGraphiteOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteOverageAmount) {
		return nil, false
	}
	return o.HmGraphiteOverageAmount, true
}

// HasHmGraphiteOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteOverageAmount() bool {
	if o != nil && !IsNil(o.HmGraphiteOverageAmount) {
		return true
	}

	return false
}

// SetHmGraphiteOverageAmount gets a reference to the given float32 and assigns it to the HmGraphiteOverageAmount field.
func (o *FormattedApiOrg) SetHmGraphiteOverageAmount(v float32) {
	o.HmGraphiteOverageAmount = &v
}

// GetHlRetentionBillingStartDate returns the HlRetentionBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlRetentionBillingStartDate() string {
	if o == nil || IsNil(o.HlRetentionBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlRetentionBillingStartDate.Get()
}

// GetHlRetentionBillingStartDateOk returns a tuple with the HlRetentionBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlRetentionBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlRetentionBillingStartDate.Get(), o.HlRetentionBillingStartDate.IsSet()
}

// HasHlRetentionBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionBillingStartDate() bool {
	if o != nil && o.HlRetentionBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHlRetentionBillingStartDate gets a reference to the given NullableString and assigns it to the HlRetentionBillingStartDate field.
func (o *FormattedApiOrg) SetHlRetentionBillingStartDate(v string) {
	o.HlRetentionBillingStartDate.Set(&v)
}

// SetHlRetentionBillingStartDateNil sets the value for HlRetentionBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHlRetentionBillingStartDateNil() {
	o.HlRetentionBillingStartDate.Set(nil)
}

// UnsetHlRetentionBillingStartDate ensures that no value is present for HlRetentionBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlRetentionBillingStartDate() {
	o.HlRetentionBillingStartDate.Unset()
}

// GetHlRetentionBillingEndDate returns the HlRetentionBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlRetentionBillingEndDate() string {
	if o == nil || IsNil(o.HlRetentionBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlRetentionBillingEndDate.Get()
}

// GetHlRetentionBillingEndDateOk returns a tuple with the HlRetentionBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlRetentionBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlRetentionBillingEndDate.Get(), o.HlRetentionBillingEndDate.IsSet()
}

// HasHlRetentionBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionBillingEndDate() bool {
	if o != nil && o.HlRetentionBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHlRetentionBillingEndDate gets a reference to the given NullableString and assigns it to the HlRetentionBillingEndDate field.
func (o *FormattedApiOrg) SetHlRetentionBillingEndDate(v string) {
	o.HlRetentionBillingEndDate.Set(&v)
}

// SetHlRetentionBillingEndDateNil sets the value for HlRetentionBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHlRetentionBillingEndDateNil() {
	o.HlRetentionBillingEndDate.Set(nil)
}

// UnsetHlRetentionBillingEndDate ensures that no value is present for HlRetentionBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlRetentionBillingEndDate() {
	o.HlRetentionBillingEndDate.Unset()
}

// GetHlRetentionBilledToDate returns the HlRetentionBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlRetentionBilledToDate() string {
	if o == nil || IsNil(o.HlRetentionBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlRetentionBilledToDate.Get()
}

// GetHlRetentionBilledToDateOk returns a tuple with the HlRetentionBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlRetentionBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlRetentionBilledToDate.Get(), o.HlRetentionBilledToDate.IsSet()
}

// HasHlRetentionBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionBilledToDate() bool {
	if o != nil && o.HlRetentionBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHlRetentionBilledToDate gets a reference to the given NullableString and assigns it to the HlRetentionBilledToDate field.
func (o *FormattedApiOrg) SetHlRetentionBilledToDate(v string) {
	o.HlRetentionBilledToDate.Set(&v)
}

// SetHlRetentionBilledToDateNil sets the value for HlRetentionBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHlRetentionBilledToDateNil() {
	o.HlRetentionBilledToDate.Set(nil)
}

// UnsetHlRetentionBilledToDate ensures that no value is present for HlRetentionBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlRetentionBilledToDate() {
	o.HlRetentionBilledToDate.Unset()
}

// GetHlRetentionOverageWarnDate returns the HlRetentionOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHlRetentionOverageWarnDate() string {
	if o == nil || IsNil(o.HlRetentionOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HlRetentionOverageWarnDate.Get()
}

// GetHlRetentionOverageWarnDateOk returns a tuple with the HlRetentionOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHlRetentionOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HlRetentionOverageWarnDate.Get(), o.HlRetentionOverageWarnDate.IsSet()
}

// HasHlRetentionOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionOverageWarnDate() bool {
	if o != nil && o.HlRetentionOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHlRetentionOverageWarnDate gets a reference to the given NullableString and assigns it to the HlRetentionOverageWarnDate field.
func (o *FormattedApiOrg) SetHlRetentionOverageWarnDate(v string) {
	o.HlRetentionOverageWarnDate.Set(&v)
}

// SetHlRetentionOverageWarnDateNil sets the value for HlRetentionOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHlRetentionOverageWarnDateNil() {
	o.HlRetentionOverageWarnDate.Set(nil)
}

// UnsetHlRetentionOverageWarnDate ensures that no value is present for HlRetentionOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHlRetentionOverageWarnDate() {
	o.HlRetentionOverageWarnDate.Unset()
}

// GetHlRetentionCurrentUsage returns the HlRetentionCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionCurrentUsage() float32 {
	if o == nil || IsNil(o.HlRetentionCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HlRetentionCurrentUsage
}

// GetHlRetentionCurrentUsageOk returns a tuple with the HlRetentionCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionCurrentUsage) {
		return nil, false
	}
	return o.HlRetentionCurrentUsage, true
}

// HasHlRetentionCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionCurrentUsage() bool {
	if o != nil && !IsNil(o.HlRetentionCurrentUsage) {
		return true
	}

	return false
}

// SetHlRetentionCurrentUsage gets a reference to the given float32 and assigns it to the HlRetentionCurrentUsage field.
func (o *FormattedApiOrg) SetHlRetentionCurrentUsage(v float32) {
	o.HlRetentionCurrentUsage = &v
}

// GetHlRetentionOverageAmount returns the HlRetentionOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionOverageAmount() float32 {
	if o == nil || IsNil(o.HlRetentionOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HlRetentionOverageAmount
}

// GetHlRetentionOverageAmountOk returns a tuple with the HlRetentionOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionOverageAmount) {
		return nil, false
	}
	return o.HlRetentionOverageAmount, true
}

// HasHlRetentionOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionOverageAmount() bool {
	if o != nil && !IsNil(o.HlRetentionOverageAmount) {
		return true
	}

	return false
}

// SetHlRetentionOverageAmount gets a reference to the given float32 and assigns it to the HlRetentionOverageAmount field.
func (o *FormattedApiOrg) SetHlRetentionOverageAmount(v float32) {
	o.HlRetentionOverageAmount = &v
}

// GetHtBillingStartDate returns the HtBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHtBillingStartDate() string {
	if o == nil || IsNil(o.HtBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HtBillingStartDate.Get()
}

// GetHtBillingStartDateOk returns a tuple with the HtBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHtBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtBillingStartDate.Get(), o.HtBillingStartDate.IsSet()
}

// HasHtBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtBillingStartDate() bool {
	if o != nil && o.HtBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHtBillingStartDate gets a reference to the given NullableString and assigns it to the HtBillingStartDate field.
func (o *FormattedApiOrg) SetHtBillingStartDate(v string) {
	o.HtBillingStartDate.Set(&v)
}

// SetHtBillingStartDateNil sets the value for HtBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHtBillingStartDateNil() {
	o.HtBillingStartDate.Set(nil)
}

// UnsetHtBillingStartDate ensures that no value is present for HtBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHtBillingStartDate() {
	o.HtBillingStartDate.Unset()
}

// GetHtBillingEndDate returns the HtBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHtBillingEndDate() string {
	if o == nil || IsNil(o.HtBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HtBillingEndDate.Get()
}

// GetHtBillingEndDateOk returns a tuple with the HtBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHtBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtBillingEndDate.Get(), o.HtBillingEndDate.IsSet()
}

// HasHtBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtBillingEndDate() bool {
	if o != nil && o.HtBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHtBillingEndDate gets a reference to the given NullableString and assigns it to the HtBillingEndDate field.
func (o *FormattedApiOrg) SetHtBillingEndDate(v string) {
	o.HtBillingEndDate.Set(&v)
}

// SetHtBillingEndDateNil sets the value for HtBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHtBillingEndDateNil() {
	o.HtBillingEndDate.Set(nil)
}

// UnsetHtBillingEndDate ensures that no value is present for HtBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHtBillingEndDate() {
	o.HtBillingEndDate.Unset()
}

// GetHtBilledToDate returns the HtBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHtBilledToDate() string {
	if o == nil || IsNil(o.HtBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HtBilledToDate.Get()
}

// GetHtBilledToDateOk returns a tuple with the HtBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHtBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtBilledToDate.Get(), o.HtBilledToDate.IsSet()
}

// HasHtBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtBilledToDate() bool {
	if o != nil && o.HtBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHtBilledToDate gets a reference to the given NullableString and assigns it to the HtBilledToDate field.
func (o *FormattedApiOrg) SetHtBilledToDate(v string) {
	o.HtBilledToDate.Set(&v)
}

// SetHtBilledToDateNil sets the value for HtBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHtBilledToDateNil() {
	o.HtBilledToDate.Set(nil)
}

// UnsetHtBilledToDate ensures that no value is present for HtBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHtBilledToDate() {
	o.HtBilledToDate.Unset()
}

// GetHtOverageWarnDate returns the HtOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHtOverageWarnDate() string {
	if o == nil || IsNil(o.HtOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HtOverageWarnDate.Get()
}

// GetHtOverageWarnDateOk returns a tuple with the HtOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHtOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtOverageWarnDate.Get(), o.HtOverageWarnDate.IsSet()
}

// HasHtOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtOverageWarnDate() bool {
	if o != nil && o.HtOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHtOverageWarnDate gets a reference to the given NullableString and assigns it to the HtOverageWarnDate field.
func (o *FormattedApiOrg) SetHtOverageWarnDate(v string) {
	o.HtOverageWarnDate.Set(&v)
}

// SetHtOverageWarnDateNil sets the value for HtOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHtOverageWarnDateNil() {
	o.HtOverageWarnDate.Set(nil)
}

// UnsetHtOverageWarnDate ensures that no value is present for HtOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHtOverageWarnDate() {
	o.HtOverageWarnDate.Unset()
}

// GetHtCurrentUsage returns the HtCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtCurrentUsage() float32 {
	if o == nil || IsNil(o.HtCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HtCurrentUsage
}

// GetHtCurrentUsageOk returns a tuple with the HtCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HtCurrentUsage) {
		return nil, false
	}
	return o.HtCurrentUsage, true
}

// HasHtCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtCurrentUsage() bool {
	if o != nil && !IsNil(o.HtCurrentUsage) {
		return true
	}

	return false
}

// SetHtCurrentUsage gets a reference to the given float32 and assigns it to the HtCurrentUsage field.
func (o *FormattedApiOrg) SetHtCurrentUsage(v float32) {
	o.HtCurrentUsage = &v
}

// GetHtOverageAmount returns the HtOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtOverageAmount() float32 {
	if o == nil || IsNil(o.HtOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HtOverageAmount
}

// GetHtOverageAmountOk returns a tuple with the HtOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HtOverageAmount) {
		return nil, false
	}
	return o.HtOverageAmount, true
}

// HasHtOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtOverageAmount() bool {
	if o != nil && !IsNil(o.HtOverageAmount) {
		return true
	}

	return false
}

// SetHtOverageAmount gets a reference to the given float32 and assigns it to the HtOverageAmount field.
func (o *FormattedApiOrg) SetHtOverageAmount(v float32) {
	o.HtOverageAmount = &v
}

// GetIrmBillingStartDate returns the IrmBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetIrmBillingStartDate() string {
	if o == nil || IsNil(o.IrmBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.IrmBillingStartDate.Get()
}

// GetIrmBillingStartDateOk returns a tuple with the IrmBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetIrmBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IrmBillingStartDate.Get(), o.IrmBillingStartDate.IsSet()
}

// HasIrmBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmBillingStartDate() bool {
	if o != nil && o.IrmBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetIrmBillingStartDate gets a reference to the given NullableString and assigns it to the IrmBillingStartDate field.
func (o *FormattedApiOrg) SetIrmBillingStartDate(v string) {
	o.IrmBillingStartDate.Set(&v)
}

// SetIrmBillingStartDateNil sets the value for IrmBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetIrmBillingStartDateNil() {
	o.IrmBillingStartDate.Set(nil)
}

// UnsetIrmBillingStartDate ensures that no value is present for IrmBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetIrmBillingStartDate() {
	o.IrmBillingStartDate.Unset()
}

// GetIrmBillingEndDate returns the IrmBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetIrmBillingEndDate() string {
	if o == nil || IsNil(o.IrmBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.IrmBillingEndDate.Get()
}

// GetIrmBillingEndDateOk returns a tuple with the IrmBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetIrmBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IrmBillingEndDate.Get(), o.IrmBillingEndDate.IsSet()
}

// HasIrmBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmBillingEndDate() bool {
	if o != nil && o.IrmBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetIrmBillingEndDate gets a reference to the given NullableString and assigns it to the IrmBillingEndDate field.
func (o *FormattedApiOrg) SetIrmBillingEndDate(v string) {
	o.IrmBillingEndDate.Set(&v)
}

// SetIrmBillingEndDateNil sets the value for IrmBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetIrmBillingEndDateNil() {
	o.IrmBillingEndDate.Set(nil)
}

// UnsetIrmBillingEndDate ensures that no value is present for IrmBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetIrmBillingEndDate() {
	o.IrmBillingEndDate.Unset()
}

// GetIrmBilledToDate returns the IrmBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetIrmBilledToDate() string {
	if o == nil || IsNil(o.IrmBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.IrmBilledToDate.Get()
}

// GetIrmBilledToDateOk returns a tuple with the IrmBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetIrmBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IrmBilledToDate.Get(), o.IrmBilledToDate.IsSet()
}

// HasIrmBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmBilledToDate() bool {
	if o != nil && o.IrmBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetIrmBilledToDate gets a reference to the given NullableString and assigns it to the IrmBilledToDate field.
func (o *FormattedApiOrg) SetIrmBilledToDate(v string) {
	o.IrmBilledToDate.Set(&v)
}

// SetIrmBilledToDateNil sets the value for IrmBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetIrmBilledToDateNil() {
	o.IrmBilledToDate.Set(nil)
}

// UnsetIrmBilledToDate ensures that no value is present for IrmBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetIrmBilledToDate() {
	o.IrmBilledToDate.Unset()
}

// GetIrmOverageWarnDate returns the IrmOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetIrmOverageWarnDate() string {
	if o == nil || IsNil(o.IrmOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.IrmOverageWarnDate.Get()
}

// GetIrmOverageWarnDateOk returns a tuple with the IrmOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetIrmOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IrmOverageWarnDate.Get(), o.IrmOverageWarnDate.IsSet()
}

// HasIrmOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmOverageWarnDate() bool {
	if o != nil && o.IrmOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetIrmOverageWarnDate gets a reference to the given NullableString and assigns it to the IrmOverageWarnDate field.
func (o *FormattedApiOrg) SetIrmOverageWarnDate(v string) {
	o.IrmOverageWarnDate.Set(&v)
}

// SetIrmOverageWarnDateNil sets the value for IrmOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetIrmOverageWarnDateNil() {
	o.IrmOverageWarnDate.Set(nil)
}

// UnsetIrmOverageWarnDate ensures that no value is present for IrmOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetIrmOverageWarnDate() {
	o.IrmOverageWarnDate.Unset()
}

// GetIrmCurrentUsage returns the IrmCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmCurrentUsage() float32 {
	if o == nil || IsNil(o.IrmCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.IrmCurrentUsage
}

// GetIrmCurrentUsageOk returns a tuple with the IrmCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmCurrentUsage) {
		return nil, false
	}
	return o.IrmCurrentUsage, true
}

// HasIrmCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmCurrentUsage() bool {
	if o != nil && !IsNil(o.IrmCurrentUsage) {
		return true
	}

	return false
}

// SetIrmCurrentUsage gets a reference to the given float32 and assigns it to the IrmCurrentUsage field.
func (o *FormattedApiOrg) SetIrmCurrentUsage(v float32) {
	o.IrmCurrentUsage = &v
}

// GetIrmOverageAmount returns the IrmOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmOverageAmount() float32 {
	if o == nil || IsNil(o.IrmOverageAmount) {
		var ret float32
		return ret
	}
	return *o.IrmOverageAmount
}

// GetIrmOverageAmountOk returns a tuple with the IrmOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmOverageAmount) {
		return nil, false
	}
	return o.IrmOverageAmount, true
}

// HasIrmOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmOverageAmount() bool {
	if o != nil && !IsNil(o.IrmOverageAmount) {
		return true
	}

	return false
}

// SetIrmOverageAmount gets a reference to the given float32 and assigns it to the IrmOverageAmount field.
func (o *FormattedApiOrg) SetIrmOverageAmount(v float32) {
	o.IrmOverageAmount = &v
}

// GetHpBillingStartDate returns the HpBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHpBillingStartDate() string {
	if o == nil || IsNil(o.HpBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.HpBillingStartDate.Get()
}

// GetHpBillingStartDateOk returns a tuple with the HpBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHpBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HpBillingStartDate.Get(), o.HpBillingStartDate.IsSet()
}

// HasHpBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpBillingStartDate() bool {
	if o != nil && o.HpBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetHpBillingStartDate gets a reference to the given NullableString and assigns it to the HpBillingStartDate field.
func (o *FormattedApiOrg) SetHpBillingStartDate(v string) {
	o.HpBillingStartDate.Set(&v)
}

// SetHpBillingStartDateNil sets the value for HpBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetHpBillingStartDateNil() {
	o.HpBillingStartDate.Set(nil)
}

// UnsetHpBillingStartDate ensures that no value is present for HpBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHpBillingStartDate() {
	o.HpBillingStartDate.Unset()
}

// GetHpBillingEndDate returns the HpBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHpBillingEndDate() string {
	if o == nil || IsNil(o.HpBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.HpBillingEndDate.Get()
}

// GetHpBillingEndDateOk returns a tuple with the HpBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHpBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HpBillingEndDate.Get(), o.HpBillingEndDate.IsSet()
}

// HasHpBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpBillingEndDate() bool {
	if o != nil && o.HpBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetHpBillingEndDate gets a reference to the given NullableString and assigns it to the HpBillingEndDate field.
func (o *FormattedApiOrg) SetHpBillingEndDate(v string) {
	o.HpBillingEndDate.Set(&v)
}

// SetHpBillingEndDateNil sets the value for HpBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetHpBillingEndDateNil() {
	o.HpBillingEndDate.Set(nil)
}

// UnsetHpBillingEndDate ensures that no value is present for HpBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHpBillingEndDate() {
	o.HpBillingEndDate.Unset()
}

// GetHpBilledToDate returns the HpBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHpBilledToDate() string {
	if o == nil || IsNil(o.HpBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.HpBilledToDate.Get()
}

// GetHpBilledToDateOk returns a tuple with the HpBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHpBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HpBilledToDate.Get(), o.HpBilledToDate.IsSet()
}

// HasHpBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpBilledToDate() bool {
	if o != nil && o.HpBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetHpBilledToDate gets a reference to the given NullableString and assigns it to the HpBilledToDate field.
func (o *FormattedApiOrg) SetHpBilledToDate(v string) {
	o.HpBilledToDate.Set(&v)
}

// SetHpBilledToDateNil sets the value for HpBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetHpBilledToDateNil() {
	o.HpBilledToDate.Set(nil)
}

// UnsetHpBilledToDate ensures that no value is present for HpBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHpBilledToDate() {
	o.HpBilledToDate.Unset()
}

// GetHpOverageWarnDate returns the HpOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHpOverageWarnDate() string {
	if o == nil || IsNil(o.HpOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.HpOverageWarnDate.Get()
}

// GetHpOverageWarnDateOk returns a tuple with the HpOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHpOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HpOverageWarnDate.Get(), o.HpOverageWarnDate.IsSet()
}

// HasHpOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpOverageWarnDate() bool {
	if o != nil && o.HpOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetHpOverageWarnDate gets a reference to the given NullableString and assigns it to the HpOverageWarnDate field.
func (o *FormattedApiOrg) SetHpOverageWarnDate(v string) {
	o.HpOverageWarnDate.Set(&v)
}

// SetHpOverageWarnDateNil sets the value for HpOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetHpOverageWarnDateNil() {
	o.HpOverageWarnDate.Set(nil)
}

// UnsetHpOverageWarnDate ensures that no value is present for HpOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHpOverageWarnDate() {
	o.HpOverageWarnDate.Unset()
}

// GetHpCurrentUsage returns the HpCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpCurrentUsage() float32 {
	if o == nil || IsNil(o.HpCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HpCurrentUsage
}

// GetHpCurrentUsageOk returns a tuple with the HpCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HpCurrentUsage) {
		return nil, false
	}
	return o.HpCurrentUsage, true
}

// HasHpCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpCurrentUsage() bool {
	if o != nil && !IsNil(o.HpCurrentUsage) {
		return true
	}

	return false
}

// SetHpCurrentUsage gets a reference to the given float32 and assigns it to the HpCurrentUsage field.
func (o *FormattedApiOrg) SetHpCurrentUsage(v float32) {
	o.HpCurrentUsage = &v
}

// GetHpOverageAmount returns the HpOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpOverageAmount() float32 {
	if o == nil || IsNil(o.HpOverageAmount) {
		var ret float32
		return ret
	}
	return *o.HpOverageAmount
}

// GetHpOverageAmountOk returns a tuple with the HpOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.HpOverageAmount) {
		return nil, false
	}
	return o.HpOverageAmount, true
}

// HasHpOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpOverageAmount() bool {
	if o != nil && !IsNil(o.HpOverageAmount) {
		return true
	}

	return false
}

// SetHpOverageAmount gets a reference to the given float32 and assigns it to the HpOverageAmount field.
func (o *FormattedApiOrg) SetHpOverageAmount(v float32) {
	o.HpOverageAmount = &v
}

// GetK6VuhBillingStartDate returns the K6VuhBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6VuhBillingStartDate() string {
	if o == nil || IsNil(o.K6VuhBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6VuhBillingStartDate.Get()
}

// GetK6VuhBillingStartDateOk returns a tuple with the K6VuhBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6VuhBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6VuhBillingStartDate.Get(), o.K6VuhBillingStartDate.IsSet()
}

// HasK6VuhBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhBillingStartDate() bool {
	if o != nil && o.K6VuhBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetK6VuhBillingStartDate gets a reference to the given NullableString and assigns it to the K6VuhBillingStartDate field.
func (o *FormattedApiOrg) SetK6VuhBillingStartDate(v string) {
	o.K6VuhBillingStartDate.Set(&v)
}

// SetK6VuhBillingStartDateNil sets the value for K6VuhBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetK6VuhBillingStartDateNil() {
	o.K6VuhBillingStartDate.Set(nil)
}

// UnsetK6VuhBillingStartDate ensures that no value is present for K6VuhBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6VuhBillingStartDate() {
	o.K6VuhBillingStartDate.Unset()
}

// GetK6VuhBillingEndDate returns the K6VuhBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6VuhBillingEndDate() string {
	if o == nil || IsNil(o.K6VuhBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6VuhBillingEndDate.Get()
}

// GetK6VuhBillingEndDateOk returns a tuple with the K6VuhBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6VuhBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6VuhBillingEndDate.Get(), o.K6VuhBillingEndDate.IsSet()
}

// HasK6VuhBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhBillingEndDate() bool {
	if o != nil && o.K6VuhBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetK6VuhBillingEndDate gets a reference to the given NullableString and assigns it to the K6VuhBillingEndDate field.
func (o *FormattedApiOrg) SetK6VuhBillingEndDate(v string) {
	o.K6VuhBillingEndDate.Set(&v)
}

// SetK6VuhBillingEndDateNil sets the value for K6VuhBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetK6VuhBillingEndDateNil() {
	o.K6VuhBillingEndDate.Set(nil)
}

// UnsetK6VuhBillingEndDate ensures that no value is present for K6VuhBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6VuhBillingEndDate() {
	o.K6VuhBillingEndDate.Unset()
}

// GetK6VuhBilledToDate returns the K6VuhBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6VuhBilledToDate() string {
	if o == nil || IsNil(o.K6VuhBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6VuhBilledToDate.Get()
}

// GetK6VuhBilledToDateOk returns a tuple with the K6VuhBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6VuhBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6VuhBilledToDate.Get(), o.K6VuhBilledToDate.IsSet()
}

// HasK6VuhBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhBilledToDate() bool {
	if o != nil && o.K6VuhBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetK6VuhBilledToDate gets a reference to the given NullableString and assigns it to the K6VuhBilledToDate field.
func (o *FormattedApiOrg) SetK6VuhBilledToDate(v string) {
	o.K6VuhBilledToDate.Set(&v)
}

// SetK6VuhBilledToDateNil sets the value for K6VuhBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetK6VuhBilledToDateNil() {
	o.K6VuhBilledToDate.Set(nil)
}

// UnsetK6VuhBilledToDate ensures that no value is present for K6VuhBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6VuhBilledToDate() {
	o.K6VuhBilledToDate.Unset()
}

// GetK6VuhOverageWarnDate returns the K6VuhOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6VuhOverageWarnDate() string {
	if o == nil || IsNil(o.K6VuhOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6VuhOverageWarnDate.Get()
}

// GetK6VuhOverageWarnDateOk returns a tuple with the K6VuhOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6VuhOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6VuhOverageWarnDate.Get(), o.K6VuhOverageWarnDate.IsSet()
}

// HasK6VuhOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhOverageWarnDate() bool {
	if o != nil && o.K6VuhOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetK6VuhOverageWarnDate gets a reference to the given NullableString and assigns it to the K6VuhOverageWarnDate field.
func (o *FormattedApiOrg) SetK6VuhOverageWarnDate(v string) {
	o.K6VuhOverageWarnDate.Set(&v)
}

// SetK6VuhOverageWarnDateNil sets the value for K6VuhOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetK6VuhOverageWarnDateNil() {
	o.K6VuhOverageWarnDate.Set(nil)
}

// UnsetK6VuhOverageWarnDate ensures that no value is present for K6VuhOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6VuhOverageWarnDate() {
	o.K6VuhOverageWarnDate.Unset()
}

// GetK6VuhCurrentUsage returns the K6VuhCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhCurrentUsage() float32 {
	if o == nil || IsNil(o.K6VuhCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.K6VuhCurrentUsage
}

// GetK6VuhCurrentUsageOk returns a tuple with the K6VuhCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhCurrentUsage) {
		return nil, false
	}
	return o.K6VuhCurrentUsage, true
}

// HasK6VuhCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhCurrentUsage() bool {
	if o != nil && !IsNil(o.K6VuhCurrentUsage) {
		return true
	}

	return false
}

// SetK6VuhCurrentUsage gets a reference to the given float32 and assigns it to the K6VuhCurrentUsage field.
func (o *FormattedApiOrg) SetK6VuhCurrentUsage(v float32) {
	o.K6VuhCurrentUsage = &v
}

// GetK6VuhOverageAmount returns the K6VuhOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhOverageAmount() float32 {
	if o == nil || IsNil(o.K6VuhOverageAmount) {
		var ret float32
		return ret
	}
	return *o.K6VuhOverageAmount
}

// GetK6VuhOverageAmountOk returns a tuple with the K6VuhOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhOverageAmount) {
		return nil, false
	}
	return o.K6VuhOverageAmount, true
}

// HasK6VuhOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhOverageAmount() bool {
	if o != nil && !IsNil(o.K6VuhOverageAmount) {
		return true
	}

	return false
}

// SetK6VuhOverageAmount gets a reference to the given float32 and assigns it to the K6VuhOverageAmount field.
func (o *FormattedApiOrg) SetK6VuhOverageAmount(v float32) {
	o.K6VuhOverageAmount = &v
}

// GetK6IPBillingStartDate returns the K6IPBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6IPBillingStartDate() string {
	if o == nil || IsNil(o.K6IPBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6IPBillingStartDate.Get()
}

// GetK6IPBillingStartDateOk returns a tuple with the K6IPBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6IPBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6IPBillingStartDate.Get(), o.K6IPBillingStartDate.IsSet()
}

// HasK6IPBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPBillingStartDate() bool {
	if o != nil && o.K6IPBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetK6IPBillingStartDate gets a reference to the given NullableString and assigns it to the K6IPBillingStartDate field.
func (o *FormattedApiOrg) SetK6IPBillingStartDate(v string) {
	o.K6IPBillingStartDate.Set(&v)
}

// SetK6IPBillingStartDateNil sets the value for K6IPBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetK6IPBillingStartDateNil() {
	o.K6IPBillingStartDate.Set(nil)
}

// UnsetK6IPBillingStartDate ensures that no value is present for K6IPBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6IPBillingStartDate() {
	o.K6IPBillingStartDate.Unset()
}

// GetK6IPBillingEndDate returns the K6IPBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6IPBillingEndDate() string {
	if o == nil || IsNil(o.K6IPBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6IPBillingEndDate.Get()
}

// GetK6IPBillingEndDateOk returns a tuple with the K6IPBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6IPBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6IPBillingEndDate.Get(), o.K6IPBillingEndDate.IsSet()
}

// HasK6IPBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPBillingEndDate() bool {
	if o != nil && o.K6IPBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetK6IPBillingEndDate gets a reference to the given NullableString and assigns it to the K6IPBillingEndDate field.
func (o *FormattedApiOrg) SetK6IPBillingEndDate(v string) {
	o.K6IPBillingEndDate.Set(&v)
}

// SetK6IPBillingEndDateNil sets the value for K6IPBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetK6IPBillingEndDateNil() {
	o.K6IPBillingEndDate.Set(nil)
}

// UnsetK6IPBillingEndDate ensures that no value is present for K6IPBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6IPBillingEndDate() {
	o.K6IPBillingEndDate.Unset()
}

// GetK6IPBilledToDate returns the K6IPBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6IPBilledToDate() string {
	if o == nil || IsNil(o.K6IPBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6IPBilledToDate.Get()
}

// GetK6IPBilledToDateOk returns a tuple with the K6IPBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6IPBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6IPBilledToDate.Get(), o.K6IPBilledToDate.IsSet()
}

// HasK6IPBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPBilledToDate() bool {
	if o != nil && o.K6IPBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetK6IPBilledToDate gets a reference to the given NullableString and assigns it to the K6IPBilledToDate field.
func (o *FormattedApiOrg) SetK6IPBilledToDate(v string) {
	o.K6IPBilledToDate.Set(&v)
}

// SetK6IPBilledToDateNil sets the value for K6IPBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetK6IPBilledToDateNil() {
	o.K6IPBilledToDate.Set(nil)
}

// UnsetK6IPBilledToDate ensures that no value is present for K6IPBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6IPBilledToDate() {
	o.K6IPBilledToDate.Unset()
}

// GetK6IPOverageWarnDate returns the K6IPOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetK6IPOverageWarnDate() string {
	if o == nil || IsNil(o.K6IPOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.K6IPOverageWarnDate.Get()
}

// GetK6IPOverageWarnDateOk returns a tuple with the K6IPOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetK6IPOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.K6IPOverageWarnDate.Get(), o.K6IPOverageWarnDate.IsSet()
}

// HasK6IPOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPOverageWarnDate() bool {
	if o != nil && o.K6IPOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetK6IPOverageWarnDate gets a reference to the given NullableString and assigns it to the K6IPOverageWarnDate field.
func (o *FormattedApiOrg) SetK6IPOverageWarnDate(v string) {
	o.K6IPOverageWarnDate.Set(&v)
}

// SetK6IPOverageWarnDateNil sets the value for K6IPOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetK6IPOverageWarnDateNil() {
	o.K6IPOverageWarnDate.Set(nil)
}

// UnsetK6IPOverageWarnDate ensures that no value is present for K6IPOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetK6IPOverageWarnDate() {
	o.K6IPOverageWarnDate.Unset()
}

// GetK6IPCurrentUsage returns the K6IPCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPCurrentUsage() float32 {
	if o == nil || IsNil(o.K6IPCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.K6IPCurrentUsage
}

// GetK6IPCurrentUsageOk returns a tuple with the K6IPCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPCurrentUsage) {
		return nil, false
	}
	return o.K6IPCurrentUsage, true
}

// HasK6IPCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPCurrentUsage() bool {
	if o != nil && !IsNil(o.K6IPCurrentUsage) {
		return true
	}

	return false
}

// SetK6IPCurrentUsage gets a reference to the given float32 and assigns it to the K6IPCurrentUsage field.
func (o *FormattedApiOrg) SetK6IPCurrentUsage(v float32) {
	o.K6IPCurrentUsage = &v
}

// GetK6IPOverageAmount returns the K6IPOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPOverageAmount() float32 {
	if o == nil || IsNil(o.K6IPOverageAmount) {
		var ret float32
		return ret
	}
	return *o.K6IPOverageAmount
}

// GetK6IPOverageAmountOk returns a tuple with the K6IPOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPOverageAmount) {
		return nil, false
	}
	return o.K6IPOverageAmount, true
}

// HasK6IPOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPOverageAmount() bool {
	if o != nil && !IsNil(o.K6IPOverageAmount) {
		return true
	}

	return false
}

// SetK6IPOverageAmount gets a reference to the given float32 and assigns it to the K6IPOverageAmount field.
func (o *FormattedApiOrg) SetK6IPOverageAmount(v float32) {
	o.K6IPOverageAmount = &v
}

// GetFeO11yBillingStartDate returns the FeO11yBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetFeO11yBillingStartDate() string {
	if o == nil || IsNil(o.FeO11yBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.FeO11yBillingStartDate.Get()
}

// GetFeO11yBillingStartDateOk returns a tuple with the FeO11yBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetFeO11yBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeO11yBillingStartDate.Get(), o.FeO11yBillingStartDate.IsSet()
}

// HasFeO11yBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yBillingStartDate() bool {
	if o != nil && o.FeO11yBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetFeO11yBillingStartDate gets a reference to the given NullableString and assigns it to the FeO11yBillingStartDate field.
func (o *FormattedApiOrg) SetFeO11yBillingStartDate(v string) {
	o.FeO11yBillingStartDate.Set(&v)
}

// SetFeO11yBillingStartDateNil sets the value for FeO11yBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetFeO11yBillingStartDateNil() {
	o.FeO11yBillingStartDate.Set(nil)
}

// UnsetFeO11yBillingStartDate ensures that no value is present for FeO11yBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetFeO11yBillingStartDate() {
	o.FeO11yBillingStartDate.Unset()
}

// GetFeO11yBillingEndDate returns the FeO11yBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetFeO11yBillingEndDate() string {
	if o == nil || IsNil(o.FeO11yBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.FeO11yBillingEndDate.Get()
}

// GetFeO11yBillingEndDateOk returns a tuple with the FeO11yBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetFeO11yBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeO11yBillingEndDate.Get(), o.FeO11yBillingEndDate.IsSet()
}

// HasFeO11yBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yBillingEndDate() bool {
	if o != nil && o.FeO11yBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetFeO11yBillingEndDate gets a reference to the given NullableString and assigns it to the FeO11yBillingEndDate field.
func (o *FormattedApiOrg) SetFeO11yBillingEndDate(v string) {
	o.FeO11yBillingEndDate.Set(&v)
}

// SetFeO11yBillingEndDateNil sets the value for FeO11yBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetFeO11yBillingEndDateNil() {
	o.FeO11yBillingEndDate.Set(nil)
}

// UnsetFeO11yBillingEndDate ensures that no value is present for FeO11yBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetFeO11yBillingEndDate() {
	o.FeO11yBillingEndDate.Unset()
}

// GetFeO11yBilledToDate returns the FeO11yBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetFeO11yBilledToDate() string {
	if o == nil || IsNil(o.FeO11yBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.FeO11yBilledToDate.Get()
}

// GetFeO11yBilledToDateOk returns a tuple with the FeO11yBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetFeO11yBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeO11yBilledToDate.Get(), o.FeO11yBilledToDate.IsSet()
}

// HasFeO11yBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yBilledToDate() bool {
	if o != nil && o.FeO11yBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetFeO11yBilledToDate gets a reference to the given NullableString and assigns it to the FeO11yBilledToDate field.
func (o *FormattedApiOrg) SetFeO11yBilledToDate(v string) {
	o.FeO11yBilledToDate.Set(&v)
}

// SetFeO11yBilledToDateNil sets the value for FeO11yBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetFeO11yBilledToDateNil() {
	o.FeO11yBilledToDate.Set(nil)
}

// UnsetFeO11yBilledToDate ensures that no value is present for FeO11yBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetFeO11yBilledToDate() {
	o.FeO11yBilledToDate.Unset()
}

// GetFeO11yOverageWarnDate returns the FeO11yOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetFeO11yOverageWarnDate() string {
	if o == nil || IsNil(o.FeO11yOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.FeO11yOverageWarnDate.Get()
}

// GetFeO11yOverageWarnDateOk returns a tuple with the FeO11yOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetFeO11yOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeO11yOverageWarnDate.Get(), o.FeO11yOverageWarnDate.IsSet()
}

// HasFeO11yOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yOverageWarnDate() bool {
	if o != nil && o.FeO11yOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetFeO11yOverageWarnDate gets a reference to the given NullableString and assigns it to the FeO11yOverageWarnDate field.
func (o *FormattedApiOrg) SetFeO11yOverageWarnDate(v string) {
	o.FeO11yOverageWarnDate.Set(&v)
}

// SetFeO11yOverageWarnDateNil sets the value for FeO11yOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetFeO11yOverageWarnDateNil() {
	o.FeO11yOverageWarnDate.Set(nil)
}

// UnsetFeO11yOverageWarnDate ensures that no value is present for FeO11yOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetFeO11yOverageWarnDate() {
	o.FeO11yOverageWarnDate.Unset()
}

// GetFeO11yCurrentUsage returns the FeO11yCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yCurrentUsage() float32 {
	if o == nil || IsNil(o.FeO11yCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.FeO11yCurrentUsage
}

// GetFeO11yCurrentUsageOk returns a tuple with the FeO11yCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yCurrentUsage) {
		return nil, false
	}
	return o.FeO11yCurrentUsage, true
}

// HasFeO11yCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yCurrentUsage() bool {
	if o != nil && !IsNil(o.FeO11yCurrentUsage) {
		return true
	}

	return false
}

// SetFeO11yCurrentUsage gets a reference to the given float32 and assigns it to the FeO11yCurrentUsage field.
func (o *FormattedApiOrg) SetFeO11yCurrentUsage(v float32) {
	o.FeO11yCurrentUsage = &v
}

// GetFeO11yOverageAmount returns the FeO11yOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yOverageAmount() float32 {
	if o == nil || IsNil(o.FeO11yOverageAmount) {
		var ret float32
		return ret
	}
	return *o.FeO11yOverageAmount
}

// GetFeO11yOverageAmountOk returns a tuple with the FeO11yOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yOverageAmount) {
		return nil, false
	}
	return o.FeO11yOverageAmount, true
}

// HasFeO11yOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yOverageAmount() bool {
	if o != nil && !IsNil(o.FeO11yOverageAmount) {
		return true
	}

	return false
}

// SetFeO11yOverageAmount gets a reference to the given float32 and assigns it to the FeO11yOverageAmount field.
func (o *FormattedApiOrg) SetFeO11yOverageAmount(v float32) {
	o.FeO11yOverageAmount = &v
}

// GetGeUsersBillingStartDate returns the GeUsersBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeUsersBillingStartDate() string {
	if o == nil || IsNil(o.GeUsersBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeUsersBillingStartDate.Get()
}

// GetGeUsersBillingStartDateOk returns a tuple with the GeUsersBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeUsersBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeUsersBillingStartDate.Get(), o.GeUsersBillingStartDate.IsSet()
}

// HasGeUsersBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersBillingStartDate() bool {
	if o != nil && o.GeUsersBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetGeUsersBillingStartDate gets a reference to the given NullableString and assigns it to the GeUsersBillingStartDate field.
func (o *FormattedApiOrg) SetGeUsersBillingStartDate(v string) {
	o.GeUsersBillingStartDate.Set(&v)
}

// SetGeUsersBillingStartDateNil sets the value for GeUsersBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetGeUsersBillingStartDateNil() {
	o.GeUsersBillingStartDate.Set(nil)
}

// UnsetGeUsersBillingStartDate ensures that no value is present for GeUsersBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeUsersBillingStartDate() {
	o.GeUsersBillingStartDate.Unset()
}

// GetGeUsersBillingEndDate returns the GeUsersBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeUsersBillingEndDate() string {
	if o == nil || IsNil(o.GeUsersBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeUsersBillingEndDate.Get()
}

// GetGeUsersBillingEndDateOk returns a tuple with the GeUsersBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeUsersBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeUsersBillingEndDate.Get(), o.GeUsersBillingEndDate.IsSet()
}

// HasGeUsersBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersBillingEndDate() bool {
	if o != nil && o.GeUsersBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetGeUsersBillingEndDate gets a reference to the given NullableString and assigns it to the GeUsersBillingEndDate field.
func (o *FormattedApiOrg) SetGeUsersBillingEndDate(v string) {
	o.GeUsersBillingEndDate.Set(&v)
}

// SetGeUsersBillingEndDateNil sets the value for GeUsersBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetGeUsersBillingEndDateNil() {
	o.GeUsersBillingEndDate.Set(nil)
}

// UnsetGeUsersBillingEndDate ensures that no value is present for GeUsersBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeUsersBillingEndDate() {
	o.GeUsersBillingEndDate.Unset()
}

// GetGeUsersBilledToDate returns the GeUsersBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeUsersBilledToDate() string {
	if o == nil || IsNil(o.GeUsersBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeUsersBilledToDate.Get()
}

// GetGeUsersBilledToDateOk returns a tuple with the GeUsersBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeUsersBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeUsersBilledToDate.Get(), o.GeUsersBilledToDate.IsSet()
}

// HasGeUsersBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersBilledToDate() bool {
	if o != nil && o.GeUsersBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetGeUsersBilledToDate gets a reference to the given NullableString and assigns it to the GeUsersBilledToDate field.
func (o *FormattedApiOrg) SetGeUsersBilledToDate(v string) {
	o.GeUsersBilledToDate.Set(&v)
}

// SetGeUsersBilledToDateNil sets the value for GeUsersBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetGeUsersBilledToDateNil() {
	o.GeUsersBilledToDate.Set(nil)
}

// UnsetGeUsersBilledToDate ensures that no value is present for GeUsersBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeUsersBilledToDate() {
	o.GeUsersBilledToDate.Unset()
}

// GetGeUsersOverageWarnDate returns the GeUsersOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeUsersOverageWarnDate() string {
	if o == nil || IsNil(o.GeUsersOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeUsersOverageWarnDate.Get()
}

// GetGeUsersOverageWarnDateOk returns a tuple with the GeUsersOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeUsersOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeUsersOverageWarnDate.Get(), o.GeUsersOverageWarnDate.IsSet()
}

// HasGeUsersOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersOverageWarnDate() bool {
	if o != nil && o.GeUsersOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetGeUsersOverageWarnDate gets a reference to the given NullableString and assigns it to the GeUsersOverageWarnDate field.
func (o *FormattedApiOrg) SetGeUsersOverageWarnDate(v string) {
	o.GeUsersOverageWarnDate.Set(&v)
}

// SetGeUsersOverageWarnDateNil sets the value for GeUsersOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetGeUsersOverageWarnDateNil() {
	o.GeUsersOverageWarnDate.Set(nil)
}

// UnsetGeUsersOverageWarnDate ensures that no value is present for GeUsersOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeUsersOverageWarnDate() {
	o.GeUsersOverageWarnDate.Unset()
}

// GetGeUsersCurrentUsage returns the GeUsersCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersCurrentUsage() float32 {
	if o == nil || IsNil(o.GeUsersCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.GeUsersCurrentUsage
}

// GetGeUsersCurrentUsageOk returns a tuple with the GeUsersCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersCurrentUsage) {
		return nil, false
	}
	return o.GeUsersCurrentUsage, true
}

// HasGeUsersCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersCurrentUsage() bool {
	if o != nil && !IsNil(o.GeUsersCurrentUsage) {
		return true
	}

	return false
}

// SetGeUsersCurrentUsage gets a reference to the given float32 and assigns it to the GeUsersCurrentUsage field.
func (o *FormattedApiOrg) SetGeUsersCurrentUsage(v float32) {
	o.GeUsersCurrentUsage = &v
}

// GetGeUsersOverageAmount returns the GeUsersOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersOverageAmount() float32 {
	if o == nil || IsNil(o.GeUsersOverageAmount) {
		var ret float32
		return ret
	}
	return *o.GeUsersOverageAmount
}

// GetGeUsersOverageAmountOk returns a tuple with the GeUsersOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersOverageAmount) {
		return nil, false
	}
	return o.GeUsersOverageAmount, true
}

// HasGeUsersOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersOverageAmount() bool {
	if o != nil && !IsNil(o.GeUsersOverageAmount) {
		return true
	}

	return false
}

// SetGeUsersOverageAmount gets a reference to the given float32 and assigns it to the GeUsersOverageAmount field.
func (o *FormattedApiOrg) SetGeUsersOverageAmount(v float32) {
	o.GeUsersOverageAmount = &v
}

// GetGeInstancesBillingStartDate returns the GeInstancesBillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeInstancesBillingStartDate() string {
	if o == nil || IsNil(o.GeInstancesBillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeInstancesBillingStartDate.Get()
}

// GetGeInstancesBillingStartDateOk returns a tuple with the GeInstancesBillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeInstancesBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeInstancesBillingStartDate.Get(), o.GeInstancesBillingStartDate.IsSet()
}

// HasGeInstancesBillingStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesBillingStartDate() bool {
	if o != nil && o.GeInstancesBillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetGeInstancesBillingStartDate gets a reference to the given NullableString and assigns it to the GeInstancesBillingStartDate field.
func (o *FormattedApiOrg) SetGeInstancesBillingStartDate(v string) {
	o.GeInstancesBillingStartDate.Set(&v)
}

// SetGeInstancesBillingStartDateNil sets the value for GeInstancesBillingStartDate to be an explicit nil
func (o *FormattedApiOrg) SetGeInstancesBillingStartDateNil() {
	o.GeInstancesBillingStartDate.Set(nil)
}

// UnsetGeInstancesBillingStartDate ensures that no value is present for GeInstancesBillingStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeInstancesBillingStartDate() {
	o.GeInstancesBillingStartDate.Unset()
}

// GetGeInstancesBillingEndDate returns the GeInstancesBillingEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeInstancesBillingEndDate() string {
	if o == nil || IsNil(o.GeInstancesBillingEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeInstancesBillingEndDate.Get()
}

// GetGeInstancesBillingEndDateOk returns a tuple with the GeInstancesBillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeInstancesBillingEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeInstancesBillingEndDate.Get(), o.GeInstancesBillingEndDate.IsSet()
}

// HasGeInstancesBillingEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesBillingEndDate() bool {
	if o != nil && o.GeInstancesBillingEndDate.IsSet() {
		return true
	}

	return false
}

// SetGeInstancesBillingEndDate gets a reference to the given NullableString and assigns it to the GeInstancesBillingEndDate field.
func (o *FormattedApiOrg) SetGeInstancesBillingEndDate(v string) {
	o.GeInstancesBillingEndDate.Set(&v)
}

// SetGeInstancesBillingEndDateNil sets the value for GeInstancesBillingEndDate to be an explicit nil
func (o *FormattedApiOrg) SetGeInstancesBillingEndDateNil() {
	o.GeInstancesBillingEndDate.Set(nil)
}

// UnsetGeInstancesBillingEndDate ensures that no value is present for GeInstancesBillingEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeInstancesBillingEndDate() {
	o.GeInstancesBillingEndDate.Unset()
}

// GetGeInstancesBilledToDate returns the GeInstancesBilledToDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeInstancesBilledToDate() string {
	if o == nil || IsNil(o.GeInstancesBilledToDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeInstancesBilledToDate.Get()
}

// GetGeInstancesBilledToDateOk returns a tuple with the GeInstancesBilledToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeInstancesBilledToDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeInstancesBilledToDate.Get(), o.GeInstancesBilledToDate.IsSet()
}

// HasGeInstancesBilledToDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesBilledToDate() bool {
	if o != nil && o.GeInstancesBilledToDate.IsSet() {
		return true
	}

	return false
}

// SetGeInstancesBilledToDate gets a reference to the given NullableString and assigns it to the GeInstancesBilledToDate field.
func (o *FormattedApiOrg) SetGeInstancesBilledToDate(v string) {
	o.GeInstancesBilledToDate.Set(&v)
}

// SetGeInstancesBilledToDateNil sets the value for GeInstancesBilledToDate to be an explicit nil
func (o *FormattedApiOrg) SetGeInstancesBilledToDateNil() {
	o.GeInstancesBilledToDate.Set(nil)
}

// UnsetGeInstancesBilledToDate ensures that no value is present for GeInstancesBilledToDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeInstancesBilledToDate() {
	o.GeInstancesBilledToDate.Unset()
}

// GetGeInstancesOverageWarnDate returns the GeInstancesOverageWarnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetGeInstancesOverageWarnDate() string {
	if o == nil || IsNil(o.GeInstancesOverageWarnDate.Get()) {
		var ret string
		return ret
	}
	return *o.GeInstancesOverageWarnDate.Get()
}

// GetGeInstancesOverageWarnDateOk returns a tuple with the GeInstancesOverageWarnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetGeInstancesOverageWarnDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeInstancesOverageWarnDate.Get(), o.GeInstancesOverageWarnDate.IsSet()
}

// HasGeInstancesOverageWarnDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesOverageWarnDate() bool {
	if o != nil && o.GeInstancesOverageWarnDate.IsSet() {
		return true
	}

	return false
}

// SetGeInstancesOverageWarnDate gets a reference to the given NullableString and assigns it to the GeInstancesOverageWarnDate field.
func (o *FormattedApiOrg) SetGeInstancesOverageWarnDate(v string) {
	o.GeInstancesOverageWarnDate.Set(&v)
}

// SetGeInstancesOverageWarnDateNil sets the value for GeInstancesOverageWarnDate to be an explicit nil
func (o *FormattedApiOrg) SetGeInstancesOverageWarnDateNil() {
	o.GeInstancesOverageWarnDate.Set(nil)
}

// UnsetGeInstancesOverageWarnDate ensures that no value is present for GeInstancesOverageWarnDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetGeInstancesOverageWarnDate() {
	o.GeInstancesOverageWarnDate.Unset()
}

// GetGeInstancesCurrentUsage returns the GeInstancesCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesCurrentUsage() float32 {
	if o == nil || IsNil(o.GeInstancesCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.GeInstancesCurrentUsage
}

// GetGeInstancesCurrentUsageOk returns a tuple with the GeInstancesCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesCurrentUsage) {
		return nil, false
	}
	return o.GeInstancesCurrentUsage, true
}

// HasGeInstancesCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesCurrentUsage() bool {
	if o != nil && !IsNil(o.GeInstancesCurrentUsage) {
		return true
	}

	return false
}

// SetGeInstancesCurrentUsage gets a reference to the given float32 and assigns it to the GeInstancesCurrentUsage field.
func (o *FormattedApiOrg) SetGeInstancesCurrentUsage(v float32) {
	o.GeInstancesCurrentUsage = &v
}

// GetGeInstancesOverageAmount returns the GeInstancesOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesOverageAmount() float32 {
	if o == nil || IsNil(o.GeInstancesOverageAmount) {
		var ret float32
		return ret
	}
	return *o.GeInstancesOverageAmount
}

// GetGeInstancesOverageAmountOk returns a tuple with the GeInstancesOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesOverageAmount) {
		return nil, false
	}
	return o.GeInstancesOverageAmount, true
}

// HasGeInstancesOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesOverageAmount() bool {
	if o != nil && !IsNil(o.GeInstancesOverageAmount) {
		return true
	}

	return false
}

// SetGeInstancesOverageAmount gets a reference to the given float32 and assigns it to the GeInstancesOverageAmount field.
func (o *FormattedApiOrg) SetGeInstancesOverageAmount(v float32) {
	o.GeInstancesOverageAmount = &v
}

// GetSalesforceAccountId returns the SalesforceAccountId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSalesforceAccountId() string {
	if o == nil || IsNil(o.SalesforceAccountId) {
		var ret string
		return ret
	}
	return *o.SalesforceAccountId
}

// GetSalesforceAccountIdOk returns a tuple with the SalesforceAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSalesforceAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesforceAccountId) {
		return nil, false
	}
	return o.SalesforceAccountId, true
}

// HasSalesforceAccountId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSalesforceAccountId() bool {
	if o != nil && !IsNil(o.SalesforceAccountId) {
		return true
	}

	return false
}

// SetSalesforceAccountId gets a reference to the given string and assigns it to the SalesforceAccountId field.
func (o *FormattedApiOrg) SetSalesforceAccountId(v string) {
	o.SalesforceAccountId = &v
}

// GetSalesforceLeadId returns the SalesforceLeadId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSalesforceLeadId() string {
	if o == nil || IsNil(o.SalesforceLeadId) {
		var ret string
		return ret
	}
	return *o.SalesforceLeadId
}

// GetSalesforceLeadIdOk returns a tuple with the SalesforceLeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSalesforceLeadIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesforceLeadId) {
		return nil, false
	}
	return o.SalesforceLeadId, true
}

// HasSalesforceLeadId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSalesforceLeadId() bool {
	if o != nil && !IsNil(o.SalesforceLeadId) {
		return true
	}

	return false
}

// SetSalesforceLeadId gets a reference to the given string and assigns it to the SalesforceLeadId field.
func (o *FormattedApiOrg) SetSalesforceLeadId(v string) {
	o.SalesforceLeadId = &v
}

// GetSalesforceCustomOrgId returns the SalesforceCustomOrgId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSalesforceCustomOrgId() string {
	if o == nil || IsNil(o.SalesforceCustomOrgId) {
		var ret string
		return ret
	}
	return *o.SalesforceCustomOrgId
}

// GetSalesforceCustomOrgIdOk returns a tuple with the SalesforceCustomOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSalesforceCustomOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesforceCustomOrgId) {
		return nil, false
	}
	return o.SalesforceCustomOrgId, true
}

// HasSalesforceCustomOrgId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSalesforceCustomOrgId() bool {
	if o != nil && !IsNil(o.SalesforceCustomOrgId) {
		return true
	}

	return false
}

// SetSalesforceCustomOrgId gets a reference to the given string and assigns it to the SalesforceCustomOrgId field.
func (o *FormattedApiOrg) SetSalesforceCustomOrgId(v string) {
	o.SalesforceCustomOrgId = &v
}

// GetSlackSupport returns the SlackSupport field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSlackSupport() float32 {
	if o == nil || IsNil(o.SlackSupport) {
		var ret float32
		return ret
	}
	return *o.SlackSupport
}

// GetSlackSupportOk returns a tuple with the SlackSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSlackSupportOk() (*float32, bool) {
	if o == nil || IsNil(o.SlackSupport) {
		return nil, false
	}
	return o.SlackSupport, true
}

// HasSlackSupport returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSlackSupport() bool {
	if o != nil && !IsNil(o.SlackSupport) {
		return true
	}

	return false
}

// SetSlackSupport gets a reference to the given float32 and assigns it to the SlackSupport field.
func (o *FormattedApiOrg) SetSlackSupport(v float32) {
	o.SlackSupport = &v
}

// GetSlackSupportChannel returns the SlackSupportChannel field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSlackSupportChannel() string {
	if o == nil || IsNil(o.SlackSupportChannel) {
		var ret string
		return ret
	}
	return *o.SlackSupportChannel
}

// GetSlackSupportChannelOk returns a tuple with the SlackSupportChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSlackSupportChannelOk() (*string, bool) {
	if o == nil || IsNil(o.SlackSupportChannel) {
		return nil, false
	}
	return o.SlackSupportChannel, true
}

// HasSlackSupportChannel returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSlackSupportChannel() bool {
	if o != nil && !IsNil(o.SlackSupportChannel) {
		return true
	}

	return false
}

// SetSlackSupportChannel gets a reference to the given string and assigns it to the SlackSupportChannel field.
func (o *FormattedApiOrg) SetSlackSupportChannel(v string) {
	o.SlackSupportChannel = &v
}

// GetTotalOverageAmount returns the TotalOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetTotalOverageAmount() float32 {
	if o == nil || IsNil(o.TotalOverageAmount) {
		var ret float32
		return ret
	}
	return *o.TotalOverageAmount
}

// GetTotalOverageAmountOk returns a tuple with the TotalOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetTotalOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalOverageAmount) {
		return nil, false
	}
	return o.TotalOverageAmount, true
}

// HasTotalOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTotalOverageAmount() bool {
	if o != nil && !IsNil(o.TotalOverageAmount) {
		return true
	}

	return false
}

// SetTotalOverageAmount gets a reference to the given float32 and assigns it to the TotalOverageAmount field.
func (o *FormattedApiOrg) SetTotalOverageAmount(v float32) {
	o.TotalOverageAmount = &v
}

// GetMemberCnt returns the MemberCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetMemberCnt() float32 {
	if o == nil || IsNil(o.MemberCnt) {
		var ret float32
		return ret
	}
	return *o.MemberCnt
}

// GetMemberCntOk returns a tuple with the MemberCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetMemberCntOk() (*float32, bool) {
	if o == nil || IsNil(o.MemberCnt) {
		return nil, false
	}
	return o.MemberCnt, true
}

// HasMemberCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasMemberCnt() bool {
	if o != nil && !IsNil(o.MemberCnt) {
		return true
	}

	return false
}

// SetMemberCnt gets a reference to the given float32 and assigns it to the MemberCnt field.
func (o *FormattedApiOrg) SetMemberCnt(v float32) {
	o.MemberCnt = &v
}

// GetLicenseCnt returns the LicenseCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetLicenseCnt() float32 {
	if o == nil || IsNil(o.LicenseCnt) {
		var ret float32
		return ret
	}
	return *o.LicenseCnt
}

// GetLicenseCntOk returns a tuple with the LicenseCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetLicenseCntOk() (*float32, bool) {
	if o == nil || IsNil(o.LicenseCnt) {
		return nil, false
	}
	return o.LicenseCnt, true
}

// HasLicenseCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasLicenseCnt() bool {
	if o != nil && !IsNil(o.LicenseCnt) {
		return true
	}

	return false
}

// SetLicenseCnt gets a reference to the given float32 and assigns it to the LicenseCnt field.
func (o *FormattedApiOrg) SetLicenseCnt(v float32) {
	o.LicenseCnt = &v
}

// GetLicenseConfiguredCnt returns the LicenseConfiguredCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetLicenseConfiguredCnt() float32 {
	if o == nil || IsNil(o.LicenseConfiguredCnt) {
		var ret float32
		return ret
	}
	return *o.LicenseConfiguredCnt
}

// GetLicenseConfiguredCntOk returns a tuple with the LicenseConfiguredCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetLicenseConfiguredCntOk() (*float32, bool) {
	if o == nil || IsNil(o.LicenseConfiguredCnt) {
		return nil, false
	}
	return o.LicenseConfiguredCnt, true
}

// HasLicenseConfiguredCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasLicenseConfiguredCnt() bool {
	if o != nil && !IsNil(o.LicenseConfiguredCnt) {
		return true
	}

	return false
}

// SetLicenseConfiguredCnt gets a reference to the given float32 and assigns it to the LicenseConfiguredCnt field.
func (o *FormattedApiOrg) SetLicenseConfiguredCnt(v float32) {
	o.LicenseConfiguredCnt = &v
}

// GetLicenseUnconfiguredCnt returns the LicenseUnconfiguredCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetLicenseUnconfiguredCnt() float32 {
	if o == nil || IsNil(o.LicenseUnconfiguredCnt) {
		var ret float32
		return ret
	}
	return *o.LicenseUnconfiguredCnt
}

// GetLicenseUnconfiguredCntOk returns a tuple with the LicenseUnconfiguredCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetLicenseUnconfiguredCntOk() (*float32, bool) {
	if o == nil || IsNil(o.LicenseUnconfiguredCnt) {
		return nil, false
	}
	return o.LicenseUnconfiguredCnt, true
}

// HasLicenseUnconfiguredCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasLicenseUnconfiguredCnt() bool {
	if o != nil && !IsNil(o.LicenseUnconfiguredCnt) {
		return true
	}

	return false
}

// SetLicenseUnconfiguredCnt gets a reference to the given float32 and assigns it to the LicenseUnconfiguredCnt field.
func (o *FormattedApiOrg) SetLicenseUnconfiguredCnt(v float32) {
	o.LicenseUnconfiguredCnt = &v
}

// GetHgInstanceCnt returns the HgInstanceCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgInstanceCnt() float32 {
	if o == nil || IsNil(o.HgInstanceCnt) {
		var ret float32
		return ret
	}
	return *o.HgInstanceCnt
}

// GetHgInstanceCntOk returns a tuple with the HgInstanceCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgInstanceCntOk() (*float32, bool) {
	if o == nil || IsNil(o.HgInstanceCnt) {
		return nil, false
	}
	return o.HgInstanceCnt, true
}

// HasHgInstanceCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgInstanceCnt() bool {
	if o != nil && !IsNil(o.HgInstanceCnt) {
		return true
	}

	return false
}

// SetHgInstanceCnt gets a reference to the given float32 and assigns it to the HgInstanceCnt field.
func (o *FormattedApiOrg) SetHgInstanceCnt(v float32) {
	o.HgInstanceCnt = &v
}

// GetHlInstanceCnt returns the HlInstanceCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlInstanceCnt() float32 {
	if o == nil || IsNil(o.HlInstanceCnt) {
		var ret float32
		return ret
	}
	return *o.HlInstanceCnt
}

// GetHlInstanceCntOk returns a tuple with the HlInstanceCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlInstanceCntOk() (*float32, bool) {
	if o == nil || IsNil(o.HlInstanceCnt) {
		return nil, false
	}
	return o.HlInstanceCnt, true
}

// HasHlInstanceCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlInstanceCnt() bool {
	if o != nil && !IsNil(o.HlInstanceCnt) {
		return true
	}

	return false
}

// SetHlInstanceCnt gets a reference to the given float32 and assigns it to the HlInstanceCnt field.
func (o *FormattedApiOrg) SetHlInstanceCnt(v float32) {
	o.HlInstanceCnt = &v
}

// GetHtInstanceCnt returns the HtInstanceCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtInstanceCnt() float32 {
	if o == nil || IsNil(o.HtInstanceCnt) {
		var ret float32
		return ret
	}
	return *o.HtInstanceCnt
}

// GetHtInstanceCntOk returns a tuple with the HtInstanceCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtInstanceCntOk() (*float32, bool) {
	if o == nil || IsNil(o.HtInstanceCnt) {
		return nil, false
	}
	return o.HtInstanceCnt, true
}

// HasHtInstanceCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtInstanceCnt() bool {
	if o != nil && !IsNil(o.HtInstanceCnt) {
		return true
	}

	return false
}

// SetHtInstanceCnt gets a reference to the given float32 and assigns it to the HtInstanceCnt field.
func (o *FormattedApiOrg) SetHtInstanceCnt(v float32) {
	o.HtInstanceCnt = &v
}

// GetUbersmithClientId returns the UbersmithClientId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetUbersmithClientId() float32 {
	if o == nil || IsNil(o.UbersmithClientId) {
		var ret float32
		return ret
	}
	return *o.UbersmithClientId
}

// GetUbersmithClientIdOk returns a tuple with the UbersmithClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetUbersmithClientIdOk() (*float32, bool) {
	if o == nil || IsNil(o.UbersmithClientId) {
		return nil, false
	}
	return o.UbersmithClientId, true
}

// HasUbersmithClientId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasUbersmithClientId() bool {
	if o != nil && !IsNil(o.UbersmithClientId) {
		return true
	}

	return false
}

// SetUbersmithClientId gets a reference to the given float32 and assigns it to the UbersmithClientId field.
func (o *FormattedApiOrg) SetUbersmithClientId(v float32) {
	o.UbersmithClientId = &v
}

// GetIntacctCustomerId returns the IntacctCustomerId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIntacctCustomerId() float32 {
	if o == nil || IsNil(o.IntacctCustomerId) {
		var ret float32
		return ret
	}
	return *o.IntacctCustomerId
}

// GetIntacctCustomerIdOk returns a tuple with the IntacctCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIntacctCustomerIdOk() (*float32, bool) {
	if o == nil || IsNil(o.IntacctCustomerId) {
		return nil, false
	}
	return o.IntacctCustomerId, true
}

// HasIntacctCustomerId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIntacctCustomerId() bool {
	if o != nil && !IsNil(o.IntacctCustomerId) {
		return true
	}

	return false
}

// SetIntacctCustomerId gets a reference to the given float32 and assigns it to the IntacctCustomerId field.
func (o *FormattedApiOrg) SetIntacctCustomerId(v float32) {
	o.IntacctCustomerId = &v
}

// GetIntacctCustomerUrl returns the IntacctCustomerUrl field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIntacctCustomerUrl() string {
	if o == nil || IsNil(o.IntacctCustomerUrl) {
		var ret string
		return ret
	}
	return *o.IntacctCustomerUrl
}

// GetIntacctCustomerUrlOk returns a tuple with the IntacctCustomerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIntacctCustomerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IntacctCustomerUrl) {
		return nil, false
	}
	return o.IntacctCustomerUrl, true
}

// HasIntacctCustomerUrl returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIntacctCustomerUrl() bool {
	if o != nil && !IsNil(o.IntacctCustomerUrl) {
		return true
	}

	return false
}

// SetIntacctCustomerUrl gets a reference to the given string and assigns it to the IntacctCustomerUrl field.
func (o *FormattedApiOrg) SetIntacctCustomerUrl(v string) {
	o.IntacctCustomerUrl = &v
}

// GetCommittedArr returns the CommittedArr field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetCommittedArr() float32 {
	if o == nil || IsNil(o.CommittedArr) {
		var ret float32
		return ret
	}
	return *o.CommittedArr
}

// GetCommittedArrOk returns a tuple with the CommittedArr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetCommittedArrOk() (*float32, bool) {
	if o == nil || IsNil(o.CommittedArr) {
		return nil, false
	}
	return o.CommittedArr, true
}

// HasCommittedArr returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCommittedArr() bool {
	if o != nil && !IsNil(o.CommittedArr) {
		return true
	}

	return false
}

// SetCommittedArr gets a reference to the given float32 and assigns it to the CommittedArr field.
func (o *FormattedApiOrg) SetCommittedArr(v float32) {
	o.CommittedArr = &v
}

// GetPrevCommittedArr returns the PrevCommittedArr field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetPrevCommittedArr() float32 {
	if o == nil || IsNil(o.PrevCommittedArr) {
		var ret float32
		return ret
	}
	return *o.PrevCommittedArr
}

// GetPrevCommittedArrOk returns a tuple with the PrevCommittedArr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetPrevCommittedArrOk() (*float32, bool) {
	if o == nil || IsNil(o.PrevCommittedArr) {
		return nil, false
	}
	return o.PrevCommittedArr, true
}

// HasPrevCommittedArr returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasPrevCommittedArr() bool {
	if o != nil && !IsNil(o.PrevCommittedArr) {
		return true
	}

	return false
}

// SetPrevCommittedArr gets a reference to the given float32 and assigns it to the PrevCommittedArr field.
func (o *FormattedApiOrg) SetPrevCommittedArr(v float32) {
	o.PrevCommittedArr = &v
}

// GetZendeskId returns the ZendeskId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetZendeskId() float32 {
	if o == nil || IsNil(o.ZendeskId) {
		var ret float32
		return ret
	}
	return *o.ZendeskId
}

// GetZendeskIdOk returns a tuple with the ZendeskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetZendeskIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ZendeskId) {
		return nil, false
	}
	return o.ZendeskId, true
}

// HasZendeskId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasZendeskId() bool {
	if o != nil && !IsNil(o.ZendeskId) {
		return true
	}

	return false
}

// SetZendeskId gets a reference to the given float32 and assigns it to the ZendeskId field.
func (o *FormattedApiOrg) SetZendeskId(v float32) {
	o.ZendeskId = &v
}

// GetHappinessRating returns the HappinessRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessRating() string {
	if o == nil || IsNil(o.HappinessRating.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessRating.Get()
}

// GetHappinessRatingOk returns a tuple with the HappinessRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessRating.Get(), o.HappinessRating.IsSet()
}

// HasHappinessRating returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessRating() bool {
	if o != nil && o.HappinessRating.IsSet() {
		return true
	}

	return false
}

// SetHappinessRating gets a reference to the given NullableString and assigns it to the HappinessRating field.
func (o *FormattedApiOrg) SetHappinessRating(v string) {
	o.HappinessRating.Set(&v)
}

// SetHappinessRatingNil sets the value for HappinessRating to be an explicit nil
func (o *FormattedApiOrg) SetHappinessRatingNil() {
	o.HappinessRating.Set(nil)
}

// UnsetHappinessRating ensures that no value is present for HappinessRating, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessRating() {
	o.HappinessRating.Unset()
}

// GetHappinessNote returns the HappinessNote field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessNote() string {
	if o == nil || IsNil(o.HappinessNote.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessNote.Get()
}

// GetHappinessNoteOk returns a tuple with the HappinessNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessNote.Get(), o.HappinessNote.IsSet()
}

// HasHappinessNote returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessNote() bool {
	if o != nil && o.HappinessNote.IsSet() {
		return true
	}

	return false
}

// SetHappinessNote gets a reference to the given NullableString and assigns it to the HappinessNote field.
func (o *FormattedApiOrg) SetHappinessNote(v string) {
	o.HappinessNote.Set(&v)
}

// SetHappinessNoteNil sets the value for HappinessNote to be an explicit nil
func (o *FormattedApiOrg) SetHappinessNoteNil() {
	o.HappinessNote.Set(nil)
}

// UnsetHappinessNote ensures that no value is present for HappinessNote, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessNote() {
	o.HappinessNote.Unset()
}

// GetHappinessReasonCode returns the HappinessReasonCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessReasonCode() string {
	if o == nil || IsNil(o.HappinessReasonCode.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessReasonCode.Get()
}

// GetHappinessReasonCodeOk returns a tuple with the HappinessReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessReasonCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessReasonCode.Get(), o.HappinessReasonCode.IsSet()
}

// HasHappinessReasonCode returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessReasonCode() bool {
	if o != nil && o.HappinessReasonCode.IsSet() {
		return true
	}

	return false
}

// SetHappinessReasonCode gets a reference to the given NullableString and assigns it to the HappinessReasonCode field.
func (o *FormattedApiOrg) SetHappinessReasonCode(v string) {
	o.HappinessReasonCode.Set(&v)
}

// SetHappinessReasonCodeNil sets the value for HappinessReasonCode to be an explicit nil
func (o *FormattedApiOrg) SetHappinessReasonCodeNil() {
	o.HappinessReasonCode.Set(nil)
}

// UnsetHappinessReasonCode ensures that no value is present for HappinessReasonCode, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessReasonCode() {
	o.HappinessReasonCode.Unset()
}

// GetHappinessCreatedAt returns the HappinessCreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessCreatedAt() string {
	if o == nil || IsNil(o.HappinessCreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessCreatedAt.Get()
}

// GetHappinessCreatedAtOk returns a tuple with the HappinessCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessCreatedAt.Get(), o.HappinessCreatedAt.IsSet()
}

// HasHappinessCreatedAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessCreatedAt() bool {
	if o != nil && o.HappinessCreatedAt.IsSet() {
		return true
	}

	return false
}

// SetHappinessCreatedAt gets a reference to the given NullableString and assigns it to the HappinessCreatedAt field.
func (o *FormattedApiOrg) SetHappinessCreatedAt(v string) {
	o.HappinessCreatedAt.Set(&v)
}

// SetHappinessCreatedAtNil sets the value for HappinessCreatedAt to be an explicit nil
func (o *FormattedApiOrg) SetHappinessCreatedAtNil() {
	o.HappinessCreatedAt.Set(nil)
}

// UnsetHappinessCreatedAt ensures that no value is present for HappinessCreatedAt, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessCreatedAt() {
	o.HappinessCreatedAt.Unset()
}

// GetHappinessChangedAt returns the HappinessChangedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessChangedAt() string {
	if o == nil || IsNil(o.HappinessChangedAt.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessChangedAt.Get()
}

// GetHappinessChangedAtOk returns a tuple with the HappinessChangedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessChangedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessChangedAt.Get(), o.HappinessChangedAt.IsSet()
}

// HasHappinessChangedAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessChangedAt() bool {
	if o != nil && o.HappinessChangedAt.IsSet() {
		return true
	}

	return false
}

// SetHappinessChangedAt gets a reference to the given NullableString and assigns it to the HappinessChangedAt field.
func (o *FormattedApiOrg) SetHappinessChangedAt(v string) {
	o.HappinessChangedAt.Set(&v)
}

// SetHappinessChangedAtNil sets the value for HappinessChangedAt to be an explicit nil
func (o *FormattedApiOrg) SetHappinessChangedAtNil() {
	o.HappinessChangedAt.Set(nil)
}

// UnsetHappinessChangedAt ensures that no value is present for HappinessChangedAt, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessChangedAt() {
	o.HappinessChangedAt.Unset()
}

// GetHappinessExpiredAt returns the HappinessExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessExpiredAt() string {
	if o == nil || IsNil(o.HappinessExpiredAt.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessExpiredAt.Get()
}

// GetHappinessExpiredAtOk returns a tuple with the HappinessExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessExpiredAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessExpiredAt.Get(), o.HappinessExpiredAt.IsSet()
}

// HasHappinessExpiredAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessExpiredAt() bool {
	if o != nil && o.HappinessExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetHappinessExpiredAt gets a reference to the given NullableString and assigns it to the HappinessExpiredAt field.
func (o *FormattedApiOrg) SetHappinessExpiredAt(v string) {
	o.HappinessExpiredAt.Set(&v)
}

// SetHappinessExpiredAtNil sets the value for HappinessExpiredAt to be an explicit nil
func (o *FormattedApiOrg) SetHappinessExpiredAtNil() {
	o.HappinessExpiredAt.Set(nil)
}

// UnsetHappinessExpiredAt ensures that no value is present for HappinessExpiredAt, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessExpiredAt() {
	o.HappinessExpiredAt.Unset()
}

// GetHappinessUserName returns the HappinessUserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHappinessUserName() string {
	if o == nil || IsNil(o.HappinessUserName.Get()) {
		var ret string
		return ret
	}
	return *o.HappinessUserName.Get()
}

// GetHappinessUserNameOk returns a tuple with the HappinessUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHappinessUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HappinessUserName.Get(), o.HappinessUserName.IsSet()
}

// HasHappinessUserName returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHappinessUserName() bool {
	if o != nil && o.HappinessUserName.IsSet() {
		return true
	}

	return false
}

// SetHappinessUserName gets a reference to the given NullableString and assigns it to the HappinessUserName field.
func (o *FormattedApiOrg) SetHappinessUserName(v string) {
	o.HappinessUserName.Set(&v)
}

// SetHappinessUserNameNil sets the value for HappinessUserName to be an explicit nil
func (o *FormattedApiOrg) SetHappinessUserNameNil() {
	o.HappinessUserName.Set(nil)
}

// UnsetHappinessUserName ensures that no value is present for HappinessUserName, not even an explicit nil
func (o *FormattedApiOrg) UnsetHappinessUserName() {
	o.HappinessUserName.Unset()
}

// GetCancellationClientNotes returns the CancellationClientNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetCancellationClientNotes() string {
	if o == nil || IsNil(o.CancellationClientNotes.Get()) {
		var ret string
		return ret
	}
	return *o.CancellationClientNotes.Get()
}

// GetCancellationClientNotesOk returns a tuple with the CancellationClientNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetCancellationClientNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancellationClientNotes.Get(), o.CancellationClientNotes.IsSet()
}

// HasCancellationClientNotes returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCancellationClientNotes() bool {
	if o != nil && o.CancellationClientNotes.IsSet() {
		return true
	}

	return false
}

// SetCancellationClientNotes gets a reference to the given NullableString and assigns it to the CancellationClientNotes field.
func (o *FormattedApiOrg) SetCancellationClientNotes(v string) {
	o.CancellationClientNotes.Set(&v)
}

// SetCancellationClientNotesNil sets the value for CancellationClientNotes to be an explicit nil
func (o *FormattedApiOrg) SetCancellationClientNotesNil() {
	o.CancellationClientNotes.Set(nil)
}

// UnsetCancellationClientNotes ensures that no value is present for CancellationClientNotes, not even an explicit nil
func (o *FormattedApiOrg) UnsetCancellationClientNotes() {
	o.CancellationClientNotes.Unset()
}

// GetCancellationNotes returns the CancellationNotes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetCancellationNotes() string {
	if o == nil || IsNil(o.CancellationNotes.Get()) {
		var ret string
		return ret
	}
	return *o.CancellationNotes.Get()
}

// GetCancellationNotesOk returns a tuple with the CancellationNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetCancellationNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancellationNotes.Get(), o.CancellationNotes.IsSet()
}

// HasCancellationNotes returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCancellationNotes() bool {
	if o != nil && o.CancellationNotes.IsSet() {
		return true
	}

	return false
}

// SetCancellationNotes gets a reference to the given NullableString and assigns it to the CancellationNotes field.
func (o *FormattedApiOrg) SetCancellationNotes(v string) {
	o.CancellationNotes.Set(&v)
}

// SetCancellationNotesNil sets the value for CancellationNotes to be an explicit nil
func (o *FormattedApiOrg) SetCancellationNotesNil() {
	o.CancellationNotes.Set(nil)
}

// UnsetCancellationNotes ensures that no value is present for CancellationNotes, not even an explicit nil
func (o *FormattedApiOrg) UnsetCancellationNotes() {
	o.CancellationNotes.Unset()
}

// GetCancellationReason returns the CancellationReason field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetCancellationReason() string {
	if o == nil || IsNil(o.CancellationReason) {
		var ret string
		return ret
	}
	return *o.CancellationReason
}

// GetCancellationReasonOk returns a tuple with the CancellationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetCancellationReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationReason) {
		return nil, false
	}
	return o.CancellationReason, true
}

// HasCancellationReason returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCancellationReason() bool {
	if o != nil && !IsNil(o.CancellationReason) {
		return true
	}

	return false
}

// SetCancellationReason gets a reference to the given string and assigns it to the CancellationReason field.
func (o *FormattedApiOrg) SetCancellationReason(v string) {
	o.CancellationReason = &v
}

// GetNetPromoterScore returns the NetPromoterScore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetNetPromoterScore() float32 {
	if o == nil || IsNil(o.NetPromoterScore.Get()) {
		var ret float32
		return ret
	}
	return *o.NetPromoterScore.Get()
}

// GetNetPromoterScoreOk returns a tuple with the NetPromoterScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetNetPromoterScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetPromoterScore.Get(), o.NetPromoterScore.IsSet()
}

// HasNetPromoterScore returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasNetPromoterScore() bool {
	if o != nil && o.NetPromoterScore.IsSet() {
		return true
	}

	return false
}

// SetNetPromoterScore gets a reference to the given NullableFloat32 and assigns it to the NetPromoterScore field.
func (o *FormattedApiOrg) SetNetPromoterScore(v float32) {
	o.NetPromoterScore.Set(&v)
}

// SetNetPromoterScoreNil sets the value for NetPromoterScore to be an explicit nil
func (o *FormattedApiOrg) SetNetPromoterScoreNil() {
	o.NetPromoterScore.Set(nil)
}

// UnsetNetPromoterScore ensures that no value is present for NetPromoterScore, not even an explicit nil
func (o *FormattedApiOrg) UnsetNetPromoterScore() {
	o.NetPromoterScore.Unset()
}

// GetHmFirstOverageDate returns the HmFirstOverageDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmFirstOverageDate() time.Time {
	if o == nil || IsNil(o.HmFirstOverageDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.HmFirstOverageDate.Get()
}

// GetHmFirstOverageDateOk returns a tuple with the HmFirstOverageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmFirstOverageDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmFirstOverageDate.Get(), o.HmFirstOverageDate.IsSet()
}

// HasHmFirstOverageDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmFirstOverageDate() bool {
	if o != nil && o.HmFirstOverageDate.IsSet() {
		return true
	}

	return false
}

// SetHmFirstOverageDate gets a reference to the given NullableTime and assigns it to the HmFirstOverageDate field.
func (o *FormattedApiOrg) SetHmFirstOverageDate(v time.Time) {
	o.HmFirstOverageDate.Set(&v)
}

// SetHmFirstOverageDateNil sets the value for HmFirstOverageDate to be an explicit nil
func (o *FormattedApiOrg) SetHmFirstOverageDateNil() {
	o.HmFirstOverageDate.Set(nil)
}

// UnsetHmFirstOverageDate ensures that no value is present for HmFirstOverageDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmFirstOverageDate() {
	o.HmFirstOverageDate.Unset()
}

// GetHmFirstApproachingLimitDate returns the HmFirstApproachingLimitDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHmFirstApproachingLimitDate() time.Time {
	if o == nil || IsNil(o.HmFirstApproachingLimitDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.HmFirstApproachingLimitDate.Get()
}

// GetHmFirstApproachingLimitDateOk returns a tuple with the HmFirstApproachingLimitDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHmFirstApproachingLimitDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.HmFirstApproachingLimitDate.Get(), o.HmFirstApproachingLimitDate.IsSet()
}

// HasHmFirstApproachingLimitDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmFirstApproachingLimitDate() bool {
	if o != nil && o.HmFirstApproachingLimitDate.IsSet() {
		return true
	}

	return false
}

// SetHmFirstApproachingLimitDate gets a reference to the given NullableTime and assigns it to the HmFirstApproachingLimitDate field.
func (o *FormattedApiOrg) SetHmFirstApproachingLimitDate(v time.Time) {
	o.HmFirstApproachingLimitDate.Set(&v)
}

// SetHmFirstApproachingLimitDateNil sets the value for HmFirstApproachingLimitDate to be an explicit nil
func (o *FormattedApiOrg) SetHmFirstApproachingLimitDateNil() {
	o.HmFirstApproachingLimitDate.Set(nil)
}

// UnsetHmFirstApproachingLimitDate ensures that no value is present for HmFirstApproachingLimitDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHmFirstApproachingLimitDate() {
	o.HmFirstApproachingLimitDate.Unset()
}

// GetSpendCommitCreditBalance returns the SpendCommitCreditBalance field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSpendCommitCreditBalance() float32 {
	if o == nil || IsNil(o.SpendCommitCreditBalance) {
		var ret float32
		return ret
	}
	return *o.SpendCommitCreditBalance
}

// GetSpendCommitCreditBalanceOk returns a tuple with the SpendCommitCreditBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSpendCommitCreditBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.SpendCommitCreditBalance) {
		return nil, false
	}
	return o.SpendCommitCreditBalance, true
}

// HasSpendCommitCreditBalance returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSpendCommitCreditBalance() bool {
	if o != nil && !IsNil(o.SpendCommitCreditBalance) {
		return true
	}

	return false
}

// SetSpendCommitCreditBalance gets a reference to the given float32 and assigns it to the SpendCommitCreditBalance field.
func (o *FormattedApiOrg) SetSpendCommitCreditBalance(v float32) {
	o.SpendCommitCreditBalance = &v
}

// GetSpendCommitCreditTotal returns the SpendCommitCreditTotal field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSpendCommitCreditTotal() float32 {
	if o == nil || IsNil(o.SpendCommitCreditTotal) {
		var ret float32
		return ret
	}
	return *o.SpendCommitCreditTotal
}

// GetSpendCommitCreditTotalOk returns a tuple with the SpendCommitCreditTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSpendCommitCreditTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.SpendCommitCreditTotal) {
		return nil, false
	}
	return o.SpendCommitCreditTotal, true
}

// HasSpendCommitCreditTotal returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSpendCommitCreditTotal() bool {
	if o != nil && !IsNil(o.SpendCommitCreditTotal) {
		return true
	}

	return false
}

// SetSpendCommitCreditTotal gets a reference to the given float32 and assigns it to the SpendCommitCreditTotal field.
func (o *FormattedApiOrg) SetSpendCommitCreditTotal(v float32) {
	o.SpendCommitCreditTotal = &v
}

// GetProjectedOverageAmount returns the ProjectedOverageAmount field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetProjectedOverageAmount() float32 {
	if o == nil || IsNil(o.ProjectedOverageAmount) {
		var ret float32
		return ret
	}
	return *o.ProjectedOverageAmount
}

// GetProjectedOverageAmountOk returns a tuple with the ProjectedOverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetProjectedOverageAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ProjectedOverageAmount) {
		return nil, false
	}
	return o.ProjectedOverageAmount, true
}

// HasProjectedOverageAmount returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasProjectedOverageAmount() bool {
	if o != nil && !IsNil(o.ProjectedOverageAmount) {
		return true
	}

	return false
}

// SetProjectedOverageAmount gets a reference to the given float32 and assigns it to the ProjectedOverageAmount field.
func (o *FormattedApiOrg) SetProjectedOverageAmount(v float32) {
	o.ProjectedOverageAmount = &v
}

// GetEstimatedArr returns the EstimatedArr field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetEstimatedArr() float32 {
	if o == nil || IsNil(o.EstimatedArr) {
		var ret float32
		return ret
	}
	return *o.EstimatedArr
}

// GetEstimatedArrOk returns a tuple with the EstimatedArr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetEstimatedArrOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedArr) {
		return nil, false
	}
	return o.EstimatedArr, true
}

// HasEstimatedArr returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasEstimatedArr() bool {
	if o != nil && !IsNil(o.EstimatedArr) {
		return true
	}

	return false
}

// SetEstimatedArr gets a reference to the given float32 and assigns it to the EstimatedArr field.
func (o *FormattedApiOrg) SetEstimatedArr(v float32) {
	o.EstimatedArr = &v
}

// GetReferredBy returns the ReferredBy field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetReferredBy() string {
	if o == nil || IsNil(o.ReferredBy) {
		var ret string
		return ret
	}
	return *o.ReferredBy
}

// GetReferredByOk returns a tuple with the ReferredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetReferredByOk() (*string, bool) {
	if o == nil || IsNil(o.ReferredBy) {
		return nil, false
	}
	return o.ReferredBy, true
}

// HasReferredBy returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasReferredBy() bool {
	if o != nil && !IsNil(o.ReferredBy) {
		return true
	}

	return false
}

// SetReferredBy gets a reference to the given string and assigns it to the ReferredBy field.
func (o *FormattedApiOrg) SetReferredBy(v string) {
	o.ReferredBy = &v
}

// GetK6OrgId returns the K6OrgId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6OrgId() float32 {
	if o == nil || IsNil(o.K6OrgId) {
		var ret float32
		return ret
	}
	return *o.K6OrgId
}

// GetK6OrgIdOk returns a tuple with the K6OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6OrgIdOk() (*float32, bool) {
	if o == nil || IsNil(o.K6OrgId) {
		return nil, false
	}
	return o.K6OrgId, true
}

// HasK6OrgId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6OrgId() bool {
	if o != nil && !IsNil(o.K6OrgId) {
		return true
	}

	return false
}

// SetK6OrgId gets a reference to the given float32 and assigns it to the K6OrgId field.
func (o *FormattedApiOrg) SetK6OrgId(v float32) {
	o.K6OrgId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *FormattedApiOrg) SetId(v float32) {
	o.Id = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *FormattedApiOrg) SetSlug(v string) {
	o.Slug = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FormattedApiOrg) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FormattedApiOrg) SetUrl(v string) {
	o.Url = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FormattedApiOrg) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *FormattedApiOrg) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *FormattedApiOrg) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *FormattedApiOrg) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *FormattedApiOrg) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *FormattedApiOrg) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *FormattedApiOrg) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *FormattedApiOrg) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *FormattedApiOrg) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *FormattedApiOrg) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *FormattedApiOrg) SetAvatar(v string) {
	o.Avatar.Set(&v)
}

// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *FormattedApiOrg) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *FormattedApiOrg) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetChecksPerMonth returns the ChecksPerMonth field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetChecksPerMonth() float32 {
	if o == nil || IsNil(o.ChecksPerMonth) {
		var ret float32
		return ret
	}
	return *o.ChecksPerMonth
}

// GetChecksPerMonthOk returns a tuple with the ChecksPerMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetChecksPerMonthOk() (*float32, bool) {
	if o == nil || IsNil(o.ChecksPerMonth) {
		return nil, false
	}
	return o.ChecksPerMonth, true
}

// HasChecksPerMonth returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasChecksPerMonth() bool {
	if o != nil && !IsNil(o.ChecksPerMonth) {
		return true
	}

	return false
}

// SetChecksPerMonth gets a reference to the given float32 and assigns it to the ChecksPerMonth field.
func (o *FormattedApiOrg) SetChecksPerMonth(v float32) {
	o.ChecksPerMonth = &v
}

// GetWpPlan returns the WpPlan field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetWpPlan() string {
	if o == nil || IsNil(o.WpPlan) {
		var ret string
		return ret
	}
	return *o.WpPlan
}

// GetWpPlanOk returns a tuple with the WpPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetWpPlanOk() (*string, bool) {
	if o == nil || IsNil(o.WpPlan) {
		return nil, false
	}
	return o.WpPlan, true
}

// HasWpPlan returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasWpPlan() bool {
	if o != nil && !IsNil(o.WpPlan) {
		return true
	}

	return false
}

// SetWpPlan gets a reference to the given string and assigns it to the WpPlan field.
func (o *FormattedApiOrg) SetWpPlan(v string) {
	o.WpPlan = &v
}

// GetHgInstanceLimit returns the HgInstanceLimit field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgInstanceLimit() float32 {
	if o == nil || IsNil(o.HgInstanceLimit) {
		var ret float32
		return ret
	}
	return *o.HgInstanceLimit
}

// GetHgInstanceLimitOk returns a tuple with the HgInstanceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgInstanceLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.HgInstanceLimit) {
		return nil, false
	}
	return o.HgInstanceLimit, true
}

// HasHgInstanceLimit returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgInstanceLimit() bool {
	if o != nil && !IsNil(o.HgInstanceLimit) {
		return true
	}

	return false
}

// SetHgInstanceLimit gets a reference to the given float32 and assigns it to the HgInstanceLimit field.
func (o *FormattedApiOrg) SetHgInstanceLimit(v float32) {
	o.HgInstanceLimit = &v
}

// GetHmInstanceLimit returns the HmInstanceLimit field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmInstanceLimit() float32 {
	if o == nil || IsNil(o.HmInstanceLimit) {
		var ret float32
		return ret
	}
	return *o.HmInstanceLimit
}

// GetHmInstanceLimitOk returns a tuple with the HmInstanceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmInstanceLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.HmInstanceLimit) {
		return nil, false
	}
	return o.HmInstanceLimit, true
}

// HasHmInstanceLimit returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmInstanceLimit() bool {
	if o != nil && !IsNil(o.HmInstanceLimit) {
		return true
	}

	return false
}

// SetHmInstanceLimit gets a reference to the given float32 and assigns it to the HmInstanceLimit field.
func (o *FormattedApiOrg) SetHmInstanceLimit(v float32) {
	o.HmInstanceLimit = &v
}

// GetHlInstanceLimit returns the HlInstanceLimit field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlInstanceLimit() float32 {
	if o == nil || IsNil(o.HlInstanceLimit) {
		var ret float32
		return ret
	}
	return *o.HlInstanceLimit
}

// GetHlInstanceLimitOk returns a tuple with the HlInstanceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlInstanceLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.HlInstanceLimit) {
		return nil, false
	}
	return o.HlInstanceLimit, true
}

// HasHlInstanceLimit returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlInstanceLimit() bool {
	if o != nil && !IsNil(o.HlInstanceLimit) {
		return true
	}

	return false
}

// SetHlInstanceLimit gets a reference to the given float32 and assigns it to the HlInstanceLimit field.
func (o *FormattedApiOrg) SetHlInstanceLimit(v float32) {
	o.HlInstanceLimit = &v
}

// GetUserQuota returns the UserQuota field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetUserQuota() float32 {
	if o == nil || IsNil(o.UserQuota) {
		var ret float32
		return ret
	}
	return *o.UserQuota
}

// GetUserQuotaOk returns a tuple with the UserQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetUserQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.UserQuota) {
		return nil, false
	}
	return o.UserQuota, true
}

// HasUserQuota returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasUserQuota() bool {
	if o != nil && !IsNil(o.UserQuota) {
		return true
	}

	return false
}

// SetUserQuota gets a reference to the given float32 and assigns it to the UserQuota field.
func (o *FormattedApiOrg) SetUserQuota(v float32) {
	o.UserQuota = &v
}

// GetSupportPlan returns the SupportPlan field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSupportPlan() string {
	if o == nil || IsNil(o.SupportPlan) {
		var ret string
		return ret
	}
	return *o.SupportPlan
}

// GetSupportPlanOk returns a tuple with the SupportPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSupportPlanOk() (*string, bool) {
	if o == nil || IsNil(o.SupportPlan) {
		return nil, false
	}
	return o.SupportPlan, true
}

// HasSupportPlan returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSupportPlan() bool {
	if o != nil && !IsNil(o.SupportPlan) {
		return true
	}

	return false
}

// SetSupportPlan gets a reference to the given string and assigns it to the SupportPlan field.
func (o *FormattedApiOrg) SetSupportPlan(v string) {
	o.SupportPlan = &v
}

// GetCreditApproved returns the CreditApproved field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetCreditApproved() float32 {
	if o == nil || IsNil(o.CreditApproved) {
		var ret float32
		return ret
	}
	return *o.CreditApproved
}

// GetCreditApprovedOk returns a tuple with the CreditApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetCreditApprovedOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditApproved) {
		return nil, false
	}
	return o.CreditApproved, true
}

// HasCreditApproved returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCreditApproved() bool {
	if o != nil && !IsNil(o.CreditApproved) {
		return true
	}

	return false
}

// SetCreditApproved gets a reference to the given float32 and assigns it to the CreditApproved field.
func (o *FormattedApiOrg) SetCreditApproved(v float32) {
	o.CreditApproved = &v
}

// GetMsaSignedAt returns the MsaSignedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetMsaSignedAt() string {
	if o == nil || IsNil(o.MsaSignedAt.Get()) {
		var ret string
		return ret
	}
	return *o.MsaSignedAt.Get()
}

// GetMsaSignedAtOk returns a tuple with the MsaSignedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetMsaSignedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MsaSignedAt.Get(), o.MsaSignedAt.IsSet()
}

// HasMsaSignedAt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasMsaSignedAt() bool {
	if o != nil && o.MsaSignedAt.IsSet() {
		return true
	}

	return false
}

// SetMsaSignedAt gets a reference to the given NullableString and assigns it to the MsaSignedAt field.
func (o *FormattedApiOrg) SetMsaSignedAt(v string) {
	o.MsaSignedAt.Set(&v)
}

// SetMsaSignedAtNil sets the value for MsaSignedAt to be an explicit nil
func (o *FormattedApiOrg) SetMsaSignedAtNil() {
	o.MsaSignedAt.Set(nil)
}

// UnsetMsaSignedAt ensures that no value is present for MsaSignedAt, not even an explicit nil
func (o *FormattedApiOrg) UnsetMsaSignedAt() {
	o.MsaSignedAt.Unset()
}

// GetMsaSignedBy returns the MsaSignedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetMsaSignedBy() string {
	if o == nil || IsNil(o.MsaSignedBy.Get()) {
		var ret string
		return ret
	}
	return *o.MsaSignedBy.Get()
}

// GetMsaSignedByOk returns a tuple with the MsaSignedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetMsaSignedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MsaSignedBy.Get(), o.MsaSignedBy.IsSet()
}

// HasMsaSignedBy returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasMsaSignedBy() bool {
	if o != nil && o.MsaSignedBy.IsSet() {
		return true
	}

	return false
}

// SetMsaSignedBy gets a reference to the given NullableString and assigns it to the MsaSignedBy field.
func (o *FormattedApiOrg) SetMsaSignedBy(v string) {
	o.MsaSignedBy.Set(&v)
}

// SetMsaSignedByNil sets the value for MsaSignedBy to be an explicit nil
func (o *FormattedApiOrg) SetMsaSignedByNil() {
	o.MsaSignedBy.Set(nil)
}

// UnsetMsaSignedBy ensures that no value is present for MsaSignedBy, not even an explicit nil
func (o *FormattedApiOrg) UnsetMsaSignedBy() {
	o.MsaSignedBy.Unset()
}

// GetEnterprisePlugins returns the EnterprisePlugins field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetEnterprisePlugins() float32 {
	if o == nil || IsNil(o.EnterprisePlugins) {
		var ret float32
		return ret
	}
	return *o.EnterprisePlugins
}

// GetEnterprisePluginsOk returns a tuple with the EnterprisePlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetEnterprisePluginsOk() (*float32, bool) {
	if o == nil || IsNil(o.EnterprisePlugins) {
		return nil, false
	}
	return o.EnterprisePlugins, true
}

// HasEnterprisePlugins returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasEnterprisePlugins() bool {
	if o != nil && !IsNil(o.EnterprisePlugins) {
		return true
	}

	return false
}

// SetEnterprisePlugins gets a reference to the given float32 and assigns it to the EnterprisePlugins field.
func (o *FormattedApiOrg) SetEnterprisePlugins(v float32) {
	o.EnterprisePlugins = &v
}

// GetGrafanaCloud returns the GrafanaCloud field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGrafanaCloud() float32 {
	if o == nil || IsNil(o.GrafanaCloud) {
		var ret float32
		return ret
	}
	return *o.GrafanaCloud
}

// GetGrafanaCloudOk returns a tuple with the GrafanaCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGrafanaCloudOk() (*float32, bool) {
	if o == nil || IsNil(o.GrafanaCloud) {
		return nil, false
	}
	return o.GrafanaCloud, true
}

// HasGrafanaCloud returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGrafanaCloud() bool {
	if o != nil && !IsNil(o.GrafanaCloud) {
		return true
	}

	return false
}

// SetGrafanaCloud gets a reference to the given float32 and assigns it to the GrafanaCloud field.
func (o *FormattedApiOrg) SetGrafanaCloud(v float32) {
	o.GrafanaCloud = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetPrivacy() string {
	if o == nil || IsNil(o.Privacy) {
		var ret string
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetPrivacyOk() (*string, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given string and assigns it to the Privacy field.
func (o *FormattedApiOrg) SetPrivacy(v string) {
	o.Privacy = &v
}

// GetReseller returns the Reseller field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetReseller() string {
	if o == nil || IsNil(o.Reseller) {
		var ret string
		return ret
	}
	return *o.Reseller
}

// GetResellerOk returns a tuple with the Reseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetResellerOk() (*string, bool) {
	if o == nil || IsNil(o.Reseller) {
		return nil, false
	}
	return o.Reseller, true
}

// HasReseller returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasReseller() bool {
	if o != nil && !IsNil(o.Reseller) {
		return true
	}

	return false
}

// SetReseller gets a reference to the given string and assigns it to the Reseller field.
func (o *FormattedApiOrg) SetReseller(v string) {
	o.Reseller = &v
}

// GetResellerId returns the ResellerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetResellerId() float32 {
	if o == nil || IsNil(o.ResellerId.Get()) {
		var ret float32
		return ret
	}
	return *o.ResellerId.Get()
}

// GetResellerIdOk returns a tuple with the ResellerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetResellerIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResellerId.Get(), o.ResellerId.IsSet()
}

// HasResellerId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasResellerId() bool {
	if o != nil && o.ResellerId.IsSet() {
		return true
	}

	return false
}

// SetResellerId gets a reference to the given NullableFloat32 and assigns it to the ResellerId field.
func (o *FormattedApiOrg) SetResellerId(v float32) {
	o.ResellerId.Set(&v)
}

// SetResellerIdNil sets the value for ResellerId to be an explicit nil
func (o *FormattedApiOrg) SetResellerIdNil() {
	o.ResellerId.Set(nil)
}

// UnsetResellerId ensures that no value is present for ResellerId, not even an explicit nil
func (o *FormattedApiOrg) UnsetResellerId() {
	o.ResellerId.Unset()
}

// GetResellerName returns the ResellerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetResellerName() string {
	if o == nil || IsNil(o.ResellerName.Get()) {
		var ret string
		return ret
	}
	return *o.ResellerName.Get()
}

// GetResellerNameOk returns a tuple with the ResellerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetResellerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResellerName.Get(), o.ResellerName.IsSet()
}

// HasResellerName returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasResellerName() bool {
	if o != nil && o.ResellerName.IsSet() {
		return true
	}

	return false
}

// SetResellerName gets a reference to the given NullableString and assigns it to the ResellerName field.
func (o *FormattedApiOrg) SetResellerName(v string) {
	o.ResellerName.Set(&v)
}

// SetResellerNameNil sets the value for ResellerName to be an explicit nil
func (o *FormattedApiOrg) SetResellerNameNil() {
	o.ResellerName.Set(nil)
}

// UnsetResellerName ensures that no value is present for ResellerName, not even an explicit nil
func (o *FormattedApiOrg) UnsetResellerName() {
	o.ResellerName.Unset()
}

// GetEmergencySupport returns the EmergencySupport field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetEmergencySupport() bool {
	if o == nil || IsNil(o.EmergencySupport) {
		var ret bool
		return ret
	}
	return *o.EmergencySupport
}

// GetEmergencySupportOk returns a tuple with the EmergencySupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetEmergencySupportOk() (*bool, bool) {
	if o == nil || IsNil(o.EmergencySupport) {
		return nil, false
	}
	return o.EmergencySupport, true
}

// HasEmergencySupport returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasEmergencySupport() bool {
	if o != nil && !IsNil(o.EmergencySupport) {
		return true
	}

	return false
}

// SetEmergencySupport gets a reference to the given bool and assigns it to the EmergencySupport field.
func (o *FormattedApiOrg) SetEmergencySupport(v bool) {
	o.EmergencySupport = &v
}

// GetIsContractedLicenseAutoProvision returns the IsContractedLicenseAutoProvision field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIsContractedLicenseAutoProvision() bool {
	if o == nil || IsNil(o.IsContractedLicenseAutoProvision) {
		var ret bool
		return ret
	}
	return *o.IsContractedLicenseAutoProvision
}

// GetIsContractedLicenseAutoProvisionOk returns a tuple with the IsContractedLicenseAutoProvision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIsContractedLicenseAutoProvisionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsContractedLicenseAutoProvision) {
		return nil, false
	}
	return o.IsContractedLicenseAutoProvision, true
}

// HasIsContractedLicenseAutoProvision returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIsContractedLicenseAutoProvision() bool {
	if o != nil && !IsNil(o.IsContractedLicenseAutoProvision) {
		return true
	}

	return false
}

// SetIsContractedLicenseAutoProvision gets a reference to the given bool and assigns it to the IsContractedLicenseAutoProvision field.
func (o *FormattedApiOrg) SetIsContractedLicenseAutoProvision(v bool) {
	o.IsContractedLicenseAutoProvision = &v
}

// GetGcloudMonthlyCost returns the GcloudMonthlyCost field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGcloudMonthlyCost() float32 {
	if o == nil || IsNil(o.GcloudMonthlyCost) {
		var ret float32
		return ret
	}
	return *o.GcloudMonthlyCost
}

// GetGcloudMonthlyCostOk returns a tuple with the GcloudMonthlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGcloudMonthlyCostOk() (*float32, bool) {
	if o == nil || IsNil(o.GcloudMonthlyCost) {
		return nil, false
	}
	return o.GcloudMonthlyCost, true
}

// HasGcloudMonthlyCost returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGcloudMonthlyCost() bool {
	if o != nil && !IsNil(o.GcloudMonthlyCost) {
		return true
	}

	return false
}

// SetGcloudMonthlyCost gets a reference to the given float32 and assigns it to the GcloudMonthlyCost field.
func (o *FormattedApiOrg) SetGcloudMonthlyCost(v float32) {
	o.GcloudMonthlyCost = &v
}

// GetHgIncludedUsers returns the HgIncludedUsers field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgIncludedUsers() float32 {
	if o == nil || IsNil(o.HgIncludedUsers) {
		var ret float32
		return ret
	}
	return *o.HgIncludedUsers
}

// GetHgIncludedUsersOk returns a tuple with the HgIncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgIncludedUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.HgIncludedUsers) {
		return nil, false
	}
	return o.HgIncludedUsers, true
}

// HasHgIncludedUsers returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgIncludedUsers() bool {
	if o != nil && !IsNil(o.HgIncludedUsers) {
		return true
	}

	return false
}

// SetHgIncludedUsers gets a reference to the given float32 and assigns it to the HgIncludedUsers field.
func (o *FormattedApiOrg) SetHgIncludedUsers(v float32) {
	o.HgIncludedUsers = &v
}

// GetHgTier1Rate returns the HgTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgTier1Rate() float32 {
	if o == nil || IsNil(o.HgTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HgTier1Rate
}

// GetHgTier1RateOk returns a tuple with the HgTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HgTier1Rate) {
		return nil, false
	}
	return o.HgTier1Rate, true
}

// HasHgTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgTier1Rate() bool {
	if o != nil && !IsNil(o.HgTier1Rate) {
		return true
	}

	return false
}

// SetHgTier1Rate gets a reference to the given float32 and assigns it to the HgTier1Rate field.
func (o *FormattedApiOrg) SetHgTier1Rate(v float32) {
	o.HgTier1Rate = &v
}

// GetHgTier2Min returns the HgTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgTier2Min() float32 {
	if o == nil || IsNil(o.HgTier2Min) {
		var ret float32
		return ret
	}
	return *o.HgTier2Min
}

// GetHgTier2MinOk returns a tuple with the HgTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HgTier2Min) {
		return nil, false
	}
	return o.HgTier2Min, true
}

// HasHgTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgTier2Min() bool {
	if o != nil && !IsNil(o.HgTier2Min) {
		return true
	}

	return false
}

// SetHgTier2Min gets a reference to the given float32 and assigns it to the HgTier2Min field.
func (o *FormattedApiOrg) SetHgTier2Min(v float32) {
	o.HgTier2Min = &v
}

// GetHgTier2Rate returns the HgTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgTier2Rate() float32 {
	if o == nil || IsNil(o.HgTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HgTier2Rate
}

// GetHgTier2RateOk returns a tuple with the HgTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HgTier2Rate) {
		return nil, false
	}
	return o.HgTier2Rate, true
}

// HasHgTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgTier2Rate() bool {
	if o != nil && !IsNil(o.HgTier2Rate) {
		return true
	}

	return false
}

// SetHgTier2Rate gets a reference to the given float32 and assigns it to the HgTier2Rate field.
func (o *FormattedApiOrg) SetHgTier2Rate(v float32) {
	o.HgTier2Rate = &v
}

// GetHgTier3Min returns the HgTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgTier3Min() float32 {
	if o == nil || IsNil(o.HgTier3Min) {
		var ret float32
		return ret
	}
	return *o.HgTier3Min
}

// GetHgTier3MinOk returns a tuple with the HgTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HgTier3Min) {
		return nil, false
	}
	return o.HgTier3Min, true
}

// HasHgTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgTier3Min() bool {
	if o != nil && !IsNil(o.HgTier3Min) {
		return true
	}

	return false
}

// SetHgTier3Min gets a reference to the given float32 and assigns it to the HgTier3Min field.
func (o *FormattedApiOrg) SetHgTier3Min(v float32) {
	o.HgTier3Min = &v
}

// GetHgTier3Rate returns the HgTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgTier3Rate() float32 {
	if o == nil || IsNil(o.HgTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HgTier3Rate
}

// GetHgTier3RateOk returns a tuple with the HgTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HgTier3Rate) {
		return nil, false
	}
	return o.HgTier3Rate, true
}

// HasHgTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgTier3Rate() bool {
	if o != nil && !IsNil(o.HgTier3Rate) {
		return true
	}

	return false
}

// SetHgTier3Rate gets a reference to the given float32 and assigns it to the HgTier3Rate field.
func (o *FormattedApiOrg) SetHgTier3Rate(v float32) {
	o.HgTier3Rate = &v
}

// GetHgUsage returns the HgUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgUsage() float32 {
	if o == nil || IsNil(o.HgUsage) {
		var ret float32
		return ret
	}
	return *o.HgUsage
}

// GetHgUsageOk returns a tuple with the HgUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HgUsage) {
		return nil, false
	}
	return o.HgUsage, true
}

// HasHgUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgUsage() bool {
	if o != nil && !IsNil(o.HgUsage) {
		return true
	}

	return false
}

// SetHgUsage gets a reference to the given float32 and assigns it to the HgUsage field.
func (o *FormattedApiOrg) SetHgUsage(v float32) {
	o.HgUsage = &v
}

// GetHgCurrentActiveUsers returns the HgCurrentActiveUsers field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgCurrentActiveUsers() float32 {
	if o == nil || IsNil(o.HgCurrentActiveUsers) {
		var ret float32
		return ret
	}
	return *o.HgCurrentActiveUsers
}

// GetHgCurrentActiveUsersOk returns a tuple with the HgCurrentActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgCurrentActiveUsersOk() (*float32, bool) {
	if o == nil || IsNil(o.HgCurrentActiveUsers) {
		return nil, false
	}
	return o.HgCurrentActiveUsers, true
}

// HasHgCurrentActiveUsers returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgCurrentActiveUsers() bool {
	if o != nil && !IsNil(o.HgCurrentActiveUsers) {
		return true
	}

	return false
}

// SetHgCurrentActiveUsers gets a reference to the given float32 and assigns it to the HgCurrentActiveUsers field.
func (o *FormattedApiOrg) SetHgCurrentActiveUsers(v float32) {
	o.HgCurrentActiveUsers = &v
}

// GetHgGrafanaUsage returns the HgGrafanaUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgGrafanaUsage() float32 {
	if o == nil || IsNil(o.HgGrafanaUsage) {
		var ret float32
		return ret
	}
	return *o.HgGrafanaUsage
}

// GetHgGrafanaUsageOk returns a tuple with the HgGrafanaUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgGrafanaUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HgGrafanaUsage) {
		return nil, false
	}
	return o.HgGrafanaUsage, true
}

// HasHgGrafanaUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgGrafanaUsage() bool {
	if o != nil && !IsNil(o.HgGrafanaUsage) {
		return true
	}

	return false
}

// SetHgGrafanaUsage gets a reference to the given float32 and assigns it to the HgGrafanaUsage field.
func (o *FormattedApiOrg) SetHgGrafanaUsage(v float32) {
	o.HgGrafanaUsage = &v
}

// GetHgOnCallUsage returns the HgOnCallUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHgOnCallUsage() float32 {
	if o == nil || IsNil(o.HgOnCallUsage) {
		var ret float32
		return ret
	}
	return *o.HgOnCallUsage
}

// GetHgOnCallUsageOk returns a tuple with the HgOnCallUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHgOnCallUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HgOnCallUsage) {
		return nil, false
	}
	return o.HgOnCallUsage, true
}

// HasHgOnCallUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgOnCallUsage() bool {
	if o != nil && !IsNil(o.HgOnCallUsage) {
		return true
	}

	return false
}

// SetHgOnCallUsage gets a reference to the given float32 and assigns it to the HgOnCallUsage field.
func (o *FormattedApiOrg) SetHgOnCallUsage(v float32) {
	o.HgOnCallUsage = &v
}

// GetHmIncludedSeries returns the HmIncludedSeries field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmIncludedSeries() float32 {
	if o == nil || IsNil(o.HmIncludedSeries) {
		var ret float32
		return ret
	}
	return *o.HmIncludedSeries
}

// GetHmIncludedSeriesOk returns a tuple with the HmIncludedSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmIncludedSeriesOk() (*float32, bool) {
	if o == nil || IsNil(o.HmIncludedSeries) {
		return nil, false
	}
	return o.HmIncludedSeries, true
}

// HasHmIncludedSeries returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmIncludedSeries() bool {
	if o != nil && !IsNil(o.HmIncludedSeries) {
		return true
	}

	return false
}

// SetHmIncludedSeries gets a reference to the given float32 and assigns it to the HmIncludedSeries field.
func (o *FormattedApiOrg) SetHmIncludedSeries(v float32) {
	o.HmIncludedSeries = &v
}

// GetHmAverageDpm returns the HmAverageDpm field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmAverageDpm() float32 {
	if o == nil || IsNil(o.HmAverageDpm) {
		var ret float32
		return ret
	}
	return *o.HmAverageDpm
}

// GetHmAverageDpmOk returns a tuple with the HmAverageDpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmAverageDpmOk() (*float32, bool) {
	if o == nil || IsNil(o.HmAverageDpm) {
		return nil, false
	}
	return o.HmAverageDpm, true
}

// HasHmAverageDpm returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmAverageDpm() bool {
	if o != nil && !IsNil(o.HmAverageDpm) {
		return true
	}

	return false
}

// SetHmAverageDpm gets a reference to the given float32 and assigns it to the HmAverageDpm field.
func (o *FormattedApiOrg) SetHmAverageDpm(v float32) {
	o.HmAverageDpm = &v
}

// GetHmTier1Rate returns the HmTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmTier1Rate() float32 {
	if o == nil || IsNil(o.HmTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HmTier1Rate
}

// GetHmTier1RateOk returns a tuple with the HmTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmTier1Rate) {
		return nil, false
	}
	return o.HmTier1Rate, true
}

// HasHmTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmTier1Rate() bool {
	if o != nil && !IsNil(o.HmTier1Rate) {
		return true
	}

	return false
}

// SetHmTier1Rate gets a reference to the given float32 and assigns it to the HmTier1Rate field.
func (o *FormattedApiOrg) SetHmTier1Rate(v float32) {
	o.HmTier1Rate = &v
}

// GetHmTier2Min returns the HmTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmTier2Min() float32 {
	if o == nil || IsNil(o.HmTier2Min) {
		var ret float32
		return ret
	}
	return *o.HmTier2Min
}

// GetHmTier2MinOk returns a tuple with the HmTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HmTier2Min) {
		return nil, false
	}
	return o.HmTier2Min, true
}

// HasHmTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmTier2Min() bool {
	if o != nil && !IsNil(o.HmTier2Min) {
		return true
	}

	return false
}

// SetHmTier2Min gets a reference to the given float32 and assigns it to the HmTier2Min field.
func (o *FormattedApiOrg) SetHmTier2Min(v float32) {
	o.HmTier2Min = &v
}

// GetHmTier2Rate returns the HmTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmTier2Rate() float32 {
	if o == nil || IsNil(o.HmTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HmTier2Rate
}

// GetHmTier2RateOk returns a tuple with the HmTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmTier2Rate) {
		return nil, false
	}
	return o.HmTier2Rate, true
}

// HasHmTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmTier2Rate() bool {
	if o != nil && !IsNil(o.HmTier2Rate) {
		return true
	}

	return false
}

// SetHmTier2Rate gets a reference to the given float32 and assigns it to the HmTier2Rate field.
func (o *FormattedApiOrg) SetHmTier2Rate(v float32) {
	o.HmTier2Rate = &v
}

// GetHmTier3Min returns the HmTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmTier3Min() float32 {
	if o == nil || IsNil(o.HmTier3Min) {
		var ret float32
		return ret
	}
	return *o.HmTier3Min
}

// GetHmTier3MinOk returns a tuple with the HmTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HmTier3Min) {
		return nil, false
	}
	return o.HmTier3Min, true
}

// HasHmTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmTier3Min() bool {
	if o != nil && !IsNil(o.HmTier3Min) {
		return true
	}

	return false
}

// SetHmTier3Min gets a reference to the given float32 and assigns it to the HmTier3Min field.
func (o *FormattedApiOrg) SetHmTier3Min(v float32) {
	o.HmTier3Min = &v
}

// GetHmTier3Rate returns the HmTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmTier3Rate() float32 {
	if o == nil || IsNil(o.HmTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HmTier3Rate
}

// GetHmTier3RateOk returns a tuple with the HmTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmTier3Rate) {
		return nil, false
	}
	return o.HmTier3Rate, true
}

// HasHmTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmTier3Rate() bool {
	if o != nil && !IsNil(o.HmTier3Rate) {
		return true
	}

	return false
}

// SetHmTier3Rate gets a reference to the given float32 and assigns it to the HmTier3Rate field.
func (o *FormattedApiOrg) SetHmTier3Rate(v float32) {
	o.HmTier3Rate = &v
}

// GetHmUsage returns the HmUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmUsage() float32 {
	if o == nil || IsNil(o.HmUsage) {
		var ret float32
		return ret
	}
	return *o.HmUsage
}

// GetHmUsageOk returns a tuple with the HmUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmUsage) {
		return nil, false
	}
	return o.HmUsage, true
}

// HasHmUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmUsage() bool {
	if o != nil && !IsNil(o.HmUsage) {
		return true
	}

	return false
}

// SetHmUsage gets a reference to the given float32 and assigns it to the HmUsage field.
func (o *FormattedApiOrg) SetHmUsage(v float32) {
	o.HmUsage = &v
}

// GetHmCurrentUsage returns the HmCurrentUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmCurrentUsage() float32 {
	if o == nil || IsNil(o.HmCurrentUsage) {
		var ret float32
		return ret
	}
	return *o.HmCurrentUsage
}

// GetHmCurrentUsageOk returns a tuple with the HmCurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmCurrentUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmCurrentUsage) {
		return nil, false
	}
	return o.HmCurrentUsage, true
}

// HasHmCurrentUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmCurrentUsage() bool {
	if o != nil && !IsNil(o.HmCurrentUsage) {
		return true
	}

	return false
}

// SetHmCurrentUsage gets a reference to the given float32 and assigns it to the HmCurrentUsage field.
func (o *FormattedApiOrg) SetHmCurrentUsage(v float32) {
	o.HmCurrentUsage = &v
}

// GetHmGraphiteIncludedUsage returns the HmGraphiteIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteIncludedUsage() float32 {
	if o == nil || IsNil(o.HmGraphiteIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteIncludedUsage
}

// GetHmGraphiteIncludedUsageOk returns a tuple with the HmGraphiteIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteIncludedUsage) {
		return nil, false
	}
	return o.HmGraphiteIncludedUsage, true
}

// HasHmGraphiteIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteIncludedUsage() bool {
	if o != nil && !IsNil(o.HmGraphiteIncludedUsage) {
		return true
	}

	return false
}

// SetHmGraphiteIncludedUsage gets a reference to the given float32 and assigns it to the HmGraphiteIncludedUsage field.
func (o *FormattedApiOrg) SetHmGraphiteIncludedUsage(v float32) {
	o.HmGraphiteIncludedUsage = &v
}

// GetHmGraphiteTier1Rate returns the HmGraphiteTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteTier1Rate() float32 {
	if o == nil || IsNil(o.HmGraphiteTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteTier1Rate
}

// GetHmGraphiteTier1RateOk returns a tuple with the HmGraphiteTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteTier1Rate) {
		return nil, false
	}
	return o.HmGraphiteTier1Rate, true
}

// HasHmGraphiteTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteTier1Rate() bool {
	if o != nil && !IsNil(o.HmGraphiteTier1Rate) {
		return true
	}

	return false
}

// SetHmGraphiteTier1Rate gets a reference to the given float32 and assigns it to the HmGraphiteTier1Rate field.
func (o *FormattedApiOrg) SetHmGraphiteTier1Rate(v float32) {
	o.HmGraphiteTier1Rate = &v
}

// GetHmGraphiteTier2Min returns the HmGraphiteTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteTier2Min() float32 {
	if o == nil || IsNil(o.HmGraphiteTier2Min) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteTier2Min
}

// GetHmGraphiteTier2MinOk returns a tuple with the HmGraphiteTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteTier2Min) {
		return nil, false
	}
	return o.HmGraphiteTier2Min, true
}

// HasHmGraphiteTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteTier2Min() bool {
	if o != nil && !IsNil(o.HmGraphiteTier2Min) {
		return true
	}

	return false
}

// SetHmGraphiteTier2Min gets a reference to the given float32 and assigns it to the HmGraphiteTier2Min field.
func (o *FormattedApiOrg) SetHmGraphiteTier2Min(v float32) {
	o.HmGraphiteTier2Min = &v
}

// GetHmGraphiteTier2Rate returns the HmGraphiteTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteTier2Rate() float32 {
	if o == nil || IsNil(o.HmGraphiteTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteTier2Rate
}

// GetHmGraphiteTier2RateOk returns a tuple with the HmGraphiteTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteTier2Rate) {
		return nil, false
	}
	return o.HmGraphiteTier2Rate, true
}

// HasHmGraphiteTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteTier2Rate() bool {
	if o != nil && !IsNil(o.HmGraphiteTier2Rate) {
		return true
	}

	return false
}

// SetHmGraphiteTier2Rate gets a reference to the given float32 and assigns it to the HmGraphiteTier2Rate field.
func (o *FormattedApiOrg) SetHmGraphiteTier2Rate(v float32) {
	o.HmGraphiteTier2Rate = &v
}

// GetHmGraphiteTier3Min returns the HmGraphiteTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteTier3Min() float32 {
	if o == nil || IsNil(o.HmGraphiteTier3Min) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteTier3Min
}

// GetHmGraphiteTier3MinOk returns a tuple with the HmGraphiteTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteTier3Min) {
		return nil, false
	}
	return o.HmGraphiteTier3Min, true
}

// HasHmGraphiteTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteTier3Min() bool {
	if o != nil && !IsNil(o.HmGraphiteTier3Min) {
		return true
	}

	return false
}

// SetHmGraphiteTier3Min gets a reference to the given float32 and assigns it to the HmGraphiteTier3Min field.
func (o *FormattedApiOrg) SetHmGraphiteTier3Min(v float32) {
	o.HmGraphiteTier3Min = &v
}

// GetHmGraphiteTier3Rate returns the HmGraphiteTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteTier3Rate() float32 {
	if o == nil || IsNil(o.HmGraphiteTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteTier3Rate
}

// GetHmGraphiteTier3RateOk returns a tuple with the HmGraphiteTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteTier3Rate) {
		return nil, false
	}
	return o.HmGraphiteTier3Rate, true
}

// HasHmGraphiteTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteTier3Rate() bool {
	if o != nil && !IsNil(o.HmGraphiteTier3Rate) {
		return true
	}

	return false
}

// SetHmGraphiteTier3Rate gets a reference to the given float32 and assigns it to the HmGraphiteTier3Rate field.
func (o *FormattedApiOrg) SetHmGraphiteTier3Rate(v float32) {
	o.HmGraphiteTier3Rate = &v
}

// GetHmGraphiteUsage returns the HmGraphiteUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteUsage() float32 {
	if o == nil || IsNil(o.HmGraphiteUsage) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteUsage
}

// GetHmGraphiteUsageOk returns a tuple with the HmGraphiteUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteUsage) {
		return nil, false
	}
	return o.HmGraphiteUsage, true
}

// HasHmGraphiteUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteUsage() bool {
	if o != nil && !IsNil(o.HmGraphiteUsage) {
		return true
	}

	return false
}

// SetHmGraphiteUsage gets a reference to the given float32 and assigns it to the HmGraphiteUsage field.
func (o *FormattedApiOrg) SetHmGraphiteUsage(v float32) {
	o.HmGraphiteUsage = &v
}

// GetHlIncludedUsage returns the HlIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlIncludedUsage() float32 {
	if o == nil || IsNil(o.HlIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.HlIncludedUsage
}

// GetHlIncludedUsageOk returns a tuple with the HlIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlIncludedUsage) {
		return nil, false
	}
	return o.HlIncludedUsage, true
}

// HasHlIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlIncludedUsage() bool {
	if o != nil && !IsNil(o.HlIncludedUsage) {
		return true
	}

	return false
}

// SetHlIncludedUsage gets a reference to the given float32 and assigns it to the HlIncludedUsage field.
func (o *FormattedApiOrg) SetHlIncludedUsage(v float32) {
	o.HlIncludedUsage = &v
}

// GetHlQueryToIngestRatio returns the HlQueryToIngestRatio field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlQueryToIngestRatio() float32 {
	if o == nil || IsNil(o.HlQueryToIngestRatio) {
		var ret float32
		return ret
	}
	return *o.HlQueryToIngestRatio
}

// GetHlQueryToIngestRatioOk returns a tuple with the HlQueryToIngestRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlQueryToIngestRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.HlQueryToIngestRatio) {
		return nil, false
	}
	return o.HlQueryToIngestRatio, true
}

// HasHlQueryToIngestRatio returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlQueryToIngestRatio() bool {
	if o != nil && !IsNil(o.HlQueryToIngestRatio) {
		return true
	}

	return false
}

// SetHlQueryToIngestRatio gets a reference to the given float32 and assigns it to the HlQueryToIngestRatio field.
func (o *FormattedApiOrg) SetHlQueryToIngestRatio(v float32) {
	o.HlQueryToIngestRatio = &v
}

// GetHlTier1Rate returns the HlTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlTier1Rate() float32 {
	if o == nil || IsNil(o.HlTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HlTier1Rate
}

// GetHlTier1RateOk returns a tuple with the HlTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlTier1Rate) {
		return nil, false
	}
	return o.HlTier1Rate, true
}

// HasHlTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlTier1Rate() bool {
	if o != nil && !IsNil(o.HlTier1Rate) {
		return true
	}

	return false
}

// SetHlTier1Rate gets a reference to the given float32 and assigns it to the HlTier1Rate field.
func (o *FormattedApiOrg) SetHlTier1Rate(v float32) {
	o.HlTier1Rate = &v
}

// GetHlTier2Min returns the HlTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlTier2Min() float32 {
	if o == nil || IsNil(o.HlTier2Min) {
		var ret float32
		return ret
	}
	return *o.HlTier2Min
}

// GetHlTier2MinOk returns a tuple with the HlTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HlTier2Min) {
		return nil, false
	}
	return o.HlTier2Min, true
}

// HasHlTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlTier2Min() bool {
	if o != nil && !IsNil(o.HlTier2Min) {
		return true
	}

	return false
}

// SetHlTier2Min gets a reference to the given float32 and assigns it to the HlTier2Min field.
func (o *FormattedApiOrg) SetHlTier2Min(v float32) {
	o.HlTier2Min = &v
}

// GetHlTier2Rate returns the HlTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlTier2Rate() float32 {
	if o == nil || IsNil(o.HlTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HlTier2Rate
}

// GetHlTier2RateOk returns a tuple with the HlTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlTier2Rate) {
		return nil, false
	}
	return o.HlTier2Rate, true
}

// HasHlTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlTier2Rate() bool {
	if o != nil && !IsNil(o.HlTier2Rate) {
		return true
	}

	return false
}

// SetHlTier2Rate gets a reference to the given float32 and assigns it to the HlTier2Rate field.
func (o *FormattedApiOrg) SetHlTier2Rate(v float32) {
	o.HlTier2Rate = &v
}

// GetHlTier3Min returns the HlTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlTier3Min() float32 {
	if o == nil || IsNil(o.HlTier3Min) {
		var ret float32
		return ret
	}
	return *o.HlTier3Min
}

// GetHlTier3MinOk returns a tuple with the HlTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HlTier3Min) {
		return nil, false
	}
	return o.HlTier3Min, true
}

// HasHlTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlTier3Min() bool {
	if o != nil && !IsNil(o.HlTier3Min) {
		return true
	}

	return false
}

// SetHlTier3Min gets a reference to the given float32 and assigns it to the HlTier3Min field.
func (o *FormattedApiOrg) SetHlTier3Min(v float32) {
	o.HlTier3Min = &v
}

// GetHlTier3Rate returns the HlTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlTier3Rate() float32 {
	if o == nil || IsNil(o.HlTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HlTier3Rate
}

// GetHlTier3RateOk returns a tuple with the HlTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlTier3Rate) {
		return nil, false
	}
	return o.HlTier3Rate, true
}

// HasHlTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlTier3Rate() bool {
	if o != nil && !IsNil(o.HlTier3Rate) {
		return true
	}

	return false
}

// SetHlTier3Rate gets a reference to the given float32 and assigns it to the HlTier3Rate field.
func (o *FormattedApiOrg) SetHlTier3Rate(v float32) {
	o.HlTier3Rate = &v
}

// GetHlUsage returns the HlUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlUsage() float32 {
	if o == nil || IsNil(o.HlUsage) {
		var ret float32
		return ret
	}
	return *o.HlUsage
}

// GetHlUsageOk returns a tuple with the HlUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlUsage) {
		return nil, false
	}
	return o.HlUsage, true
}

// HasHlUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlUsage() bool {
	if o != nil && !IsNil(o.HlUsage) {
		return true
	}

	return false
}

// SetHlUsage gets a reference to the given float32 and assigns it to the HlUsage field.
func (o *FormattedApiOrg) SetHlUsage(v float32) {
	o.HlUsage = &v
}

// GetHlRetentionIncludedUsage returns the HlRetentionIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionIncludedUsage() float32 {
	if o == nil || IsNil(o.HlRetentionIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.HlRetentionIncludedUsage
}

// GetHlRetentionIncludedUsageOk returns a tuple with the HlRetentionIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionIncludedUsage) {
		return nil, false
	}
	return o.HlRetentionIncludedUsage, true
}

// HasHlRetentionIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionIncludedUsage() bool {
	if o != nil && !IsNil(o.HlRetentionIncludedUsage) {
		return true
	}

	return false
}

// SetHlRetentionIncludedUsage gets a reference to the given float32 and assigns it to the HlRetentionIncludedUsage field.
func (o *FormattedApiOrg) SetHlRetentionIncludedUsage(v float32) {
	o.HlRetentionIncludedUsage = &v
}

// GetHlRetentionTier1Rate returns the HlRetentionTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionTier1Rate() float32 {
	if o == nil || IsNil(o.HlRetentionTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HlRetentionTier1Rate
}

// GetHlRetentionTier1RateOk returns a tuple with the HlRetentionTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionTier1Rate) {
		return nil, false
	}
	return o.HlRetentionTier1Rate, true
}

// HasHlRetentionTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionTier1Rate() bool {
	if o != nil && !IsNil(o.HlRetentionTier1Rate) {
		return true
	}

	return false
}

// SetHlRetentionTier1Rate gets a reference to the given float32 and assigns it to the HlRetentionTier1Rate field.
func (o *FormattedApiOrg) SetHlRetentionTier1Rate(v float32) {
	o.HlRetentionTier1Rate = &v
}

// GetHlRetentionTier2Min returns the HlRetentionTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionTier2Min() float32 {
	if o == nil || IsNil(o.HlRetentionTier2Min) {
		var ret float32
		return ret
	}
	return *o.HlRetentionTier2Min
}

// GetHlRetentionTier2MinOk returns a tuple with the HlRetentionTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionTier2Min) {
		return nil, false
	}
	return o.HlRetentionTier2Min, true
}

// HasHlRetentionTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionTier2Min() bool {
	if o != nil && !IsNil(o.HlRetentionTier2Min) {
		return true
	}

	return false
}

// SetHlRetentionTier2Min gets a reference to the given float32 and assigns it to the HlRetentionTier2Min field.
func (o *FormattedApiOrg) SetHlRetentionTier2Min(v float32) {
	o.HlRetentionTier2Min = &v
}

// GetHlRetentionTier2Rate returns the HlRetentionTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionTier2Rate() float32 {
	if o == nil || IsNil(o.HlRetentionTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HlRetentionTier2Rate
}

// GetHlRetentionTier2RateOk returns a tuple with the HlRetentionTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionTier2Rate) {
		return nil, false
	}
	return o.HlRetentionTier2Rate, true
}

// HasHlRetentionTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionTier2Rate() bool {
	if o != nil && !IsNil(o.HlRetentionTier2Rate) {
		return true
	}

	return false
}

// SetHlRetentionTier2Rate gets a reference to the given float32 and assigns it to the HlRetentionTier2Rate field.
func (o *FormattedApiOrg) SetHlRetentionTier2Rate(v float32) {
	o.HlRetentionTier2Rate = &v
}

// GetHlRetentionTier3Min returns the HlRetentionTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionTier3Min() float32 {
	if o == nil || IsNil(o.HlRetentionTier3Min) {
		var ret float32
		return ret
	}
	return *o.HlRetentionTier3Min
}

// GetHlRetentionTier3MinOk returns a tuple with the HlRetentionTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionTier3Min) {
		return nil, false
	}
	return o.HlRetentionTier3Min, true
}

// HasHlRetentionTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionTier3Min() bool {
	if o != nil && !IsNil(o.HlRetentionTier3Min) {
		return true
	}

	return false
}

// SetHlRetentionTier3Min gets a reference to the given float32 and assigns it to the HlRetentionTier3Min field.
func (o *FormattedApiOrg) SetHlRetentionTier3Min(v float32) {
	o.HlRetentionTier3Min = &v
}

// GetHlRetentionTier3Rate returns the HlRetentionTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionTier3Rate() float32 {
	if o == nil || IsNil(o.HlRetentionTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HlRetentionTier3Rate
}

// GetHlRetentionTier3RateOk returns a tuple with the HlRetentionTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionTier3Rate) {
		return nil, false
	}
	return o.HlRetentionTier3Rate, true
}

// HasHlRetentionTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionTier3Rate() bool {
	if o != nil && !IsNil(o.HlRetentionTier3Rate) {
		return true
	}

	return false
}

// SetHlRetentionTier3Rate gets a reference to the given float32 and assigns it to the HlRetentionTier3Rate field.
func (o *FormattedApiOrg) SetHlRetentionTier3Rate(v float32) {
	o.HlRetentionTier3Rate = &v
}

// GetHlRetentionUsage returns the HlRetentionUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHlRetentionUsage() float32 {
	if o == nil || IsNil(o.HlRetentionUsage) {
		var ret float32
		return ret
	}
	return *o.HlRetentionUsage
}

// GetHlRetentionUsageOk returns a tuple with the HlRetentionUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHlRetentionUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlRetentionUsage) {
		return nil, false
	}
	return o.HlRetentionUsage, true
}

// HasHlRetentionUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHlRetentionUsage() bool {
	if o != nil && !IsNil(o.HlRetentionUsage) {
		return true
	}

	return false
}

// SetHlRetentionUsage gets a reference to the given float32 and assigns it to the HlRetentionUsage field.
func (o *FormattedApiOrg) SetHlRetentionUsage(v float32) {
	o.HlRetentionUsage = &v
}

// GetHtIncludedUsage returns the HtIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtIncludedUsage() float32 {
	if o == nil || IsNil(o.HtIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.HtIncludedUsage
}

// GetHtIncludedUsageOk returns a tuple with the HtIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HtIncludedUsage) {
		return nil, false
	}
	return o.HtIncludedUsage, true
}

// HasHtIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtIncludedUsage() bool {
	if o != nil && !IsNil(o.HtIncludedUsage) {
		return true
	}

	return false
}

// SetHtIncludedUsage gets a reference to the given float32 and assigns it to the HtIncludedUsage field.
func (o *FormattedApiOrg) SetHtIncludedUsage(v float32) {
	o.HtIncludedUsage = &v
}

// GetHtTier1Rate returns the HtTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtTier1Rate() float32 {
	if o == nil || IsNil(o.HtTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HtTier1Rate
}

// GetHtTier1RateOk returns a tuple with the HtTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HtTier1Rate) {
		return nil, false
	}
	return o.HtTier1Rate, true
}

// HasHtTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtTier1Rate() bool {
	if o != nil && !IsNil(o.HtTier1Rate) {
		return true
	}

	return false
}

// SetHtTier1Rate gets a reference to the given float32 and assigns it to the HtTier1Rate field.
func (o *FormattedApiOrg) SetHtTier1Rate(v float32) {
	o.HtTier1Rate = &v
}

// GetHtTier2Min returns the HtTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtTier2Min() float32 {
	if o == nil || IsNil(o.HtTier2Min) {
		var ret float32
		return ret
	}
	return *o.HtTier2Min
}

// GetHtTier2MinOk returns a tuple with the HtTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HtTier2Min) {
		return nil, false
	}
	return o.HtTier2Min, true
}

// HasHtTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtTier2Min() bool {
	if o != nil && !IsNil(o.HtTier2Min) {
		return true
	}

	return false
}

// SetHtTier2Min gets a reference to the given float32 and assigns it to the HtTier2Min field.
func (o *FormattedApiOrg) SetHtTier2Min(v float32) {
	o.HtTier2Min = &v
}

// GetHtTier2Rate returns the HtTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtTier2Rate() float32 {
	if o == nil || IsNil(o.HtTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HtTier2Rate
}

// GetHtTier2RateOk returns a tuple with the HtTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HtTier2Rate) {
		return nil, false
	}
	return o.HtTier2Rate, true
}

// HasHtTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtTier2Rate() bool {
	if o != nil && !IsNil(o.HtTier2Rate) {
		return true
	}

	return false
}

// SetHtTier2Rate gets a reference to the given float32 and assigns it to the HtTier2Rate field.
func (o *FormattedApiOrg) SetHtTier2Rate(v float32) {
	o.HtTier2Rate = &v
}

// GetHtTier3Min returns the HtTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtTier3Min() float32 {
	if o == nil || IsNil(o.HtTier3Min) {
		var ret float32
		return ret
	}
	return *o.HtTier3Min
}

// GetHtTier3MinOk returns a tuple with the HtTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HtTier3Min) {
		return nil, false
	}
	return o.HtTier3Min, true
}

// HasHtTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtTier3Min() bool {
	if o != nil && !IsNil(o.HtTier3Min) {
		return true
	}

	return false
}

// SetHtTier3Min gets a reference to the given float32 and assigns it to the HtTier3Min field.
func (o *FormattedApiOrg) SetHtTier3Min(v float32) {
	o.HtTier3Min = &v
}

// GetHtTier3Rate returns the HtTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtTier3Rate() float32 {
	if o == nil || IsNil(o.HtTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HtTier3Rate
}

// GetHtTier3RateOk returns a tuple with the HtTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HtTier3Rate) {
		return nil, false
	}
	return o.HtTier3Rate, true
}

// HasHtTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtTier3Rate() bool {
	if o != nil && !IsNil(o.HtTier3Rate) {
		return true
	}

	return false
}

// SetHtTier3Rate gets a reference to the given float32 and assigns it to the HtTier3Rate field.
func (o *FormattedApiOrg) SetHtTier3Rate(v float32) {
	o.HtTier3Rate = &v
}

// GetHtUsage returns the HtUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHtUsage() float32 {
	if o == nil || IsNil(o.HtUsage) {
		var ret float32
		return ret
	}
	return *o.HtUsage
}

// GetHtUsageOk returns a tuple with the HtUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHtUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HtUsage) {
		return nil, false
	}
	return o.HtUsage, true
}

// HasHtUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHtUsage() bool {
	if o != nil && !IsNil(o.HtUsage) {
		return true
	}

	return false
}

// SetHtUsage gets a reference to the given float32 and assigns it to the HtUsage field.
func (o *FormattedApiOrg) SetHtUsage(v float32) {
	o.HtUsage = &v
}

// GetHpIncludedUsage returns the HpIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpIncludedUsage() float32 {
	if o == nil || IsNil(o.HpIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.HpIncludedUsage
}

// GetHpIncludedUsageOk returns a tuple with the HpIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HpIncludedUsage) {
		return nil, false
	}
	return o.HpIncludedUsage, true
}

// HasHpIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpIncludedUsage() bool {
	if o != nil && !IsNil(o.HpIncludedUsage) {
		return true
	}

	return false
}

// SetHpIncludedUsage gets a reference to the given float32 and assigns it to the HpIncludedUsage field.
func (o *FormattedApiOrg) SetHpIncludedUsage(v float32) {
	o.HpIncludedUsage = &v
}

// GetHpTier1Rate returns the HpTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpTier1Rate() float32 {
	if o == nil || IsNil(o.HpTier1Rate) {
		var ret float32
		return ret
	}
	return *o.HpTier1Rate
}

// GetHpTier1RateOk returns a tuple with the HpTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HpTier1Rate) {
		return nil, false
	}
	return o.HpTier1Rate, true
}

// HasHpTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpTier1Rate() bool {
	if o != nil && !IsNil(o.HpTier1Rate) {
		return true
	}

	return false
}

// SetHpTier1Rate gets a reference to the given float32 and assigns it to the HpTier1Rate field.
func (o *FormattedApiOrg) SetHpTier1Rate(v float32) {
	o.HpTier1Rate = &v
}

// GetHpTier2Min returns the HpTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpTier2Min() float32 {
	if o == nil || IsNil(o.HpTier2Min) {
		var ret float32
		return ret
	}
	return *o.HpTier2Min
}

// GetHpTier2MinOk returns a tuple with the HpTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HpTier2Min) {
		return nil, false
	}
	return o.HpTier2Min, true
}

// HasHpTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpTier2Min() bool {
	if o != nil && !IsNil(o.HpTier2Min) {
		return true
	}

	return false
}

// SetHpTier2Min gets a reference to the given float32 and assigns it to the HpTier2Min field.
func (o *FormattedApiOrg) SetHpTier2Min(v float32) {
	o.HpTier2Min = &v
}

// GetHpTier2Rate returns the HpTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpTier2Rate() float32 {
	if o == nil || IsNil(o.HpTier2Rate) {
		var ret float32
		return ret
	}
	return *o.HpTier2Rate
}

// GetHpTier2RateOk returns a tuple with the HpTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HpTier2Rate) {
		return nil, false
	}
	return o.HpTier2Rate, true
}

// HasHpTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpTier2Rate() bool {
	if o != nil && !IsNil(o.HpTier2Rate) {
		return true
	}

	return false
}

// SetHpTier2Rate gets a reference to the given float32 and assigns it to the HpTier2Rate field.
func (o *FormattedApiOrg) SetHpTier2Rate(v float32) {
	o.HpTier2Rate = &v
}

// GetHpTier3Min returns the HpTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpTier3Min() float32 {
	if o == nil || IsNil(o.HpTier3Min) {
		var ret float32
		return ret
	}
	return *o.HpTier3Min
}

// GetHpTier3MinOk returns a tuple with the HpTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.HpTier3Min) {
		return nil, false
	}
	return o.HpTier3Min, true
}

// HasHpTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpTier3Min() bool {
	if o != nil && !IsNil(o.HpTier3Min) {
		return true
	}

	return false
}

// SetHpTier3Min gets a reference to the given float32 and assigns it to the HpTier3Min field.
func (o *FormattedApiOrg) SetHpTier3Min(v float32) {
	o.HpTier3Min = &v
}

// GetHpTier3Rate returns the HpTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpTier3Rate() float32 {
	if o == nil || IsNil(o.HpTier3Rate) {
		var ret float32
		return ret
	}
	return *o.HpTier3Rate
}

// GetHpTier3RateOk returns a tuple with the HpTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.HpTier3Rate) {
		return nil, false
	}
	return o.HpTier3Rate, true
}

// HasHpTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpTier3Rate() bool {
	if o != nil && !IsNil(o.HpTier3Rate) {
		return true
	}

	return false
}

// SetHpTier3Rate gets a reference to the given float32 and assigns it to the HpTier3Rate field.
func (o *FormattedApiOrg) SetHpTier3Rate(v float32) {
	o.HpTier3Rate = &v
}

// GetHpUsage returns the HpUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHpUsage() float32 {
	if o == nil || IsNil(o.HpUsage) {
		var ret float32
		return ret
	}
	return *o.HpUsage
}

// GetHpUsageOk returns a tuple with the HpUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHpUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HpUsage) {
		return nil, false
	}
	return o.HpUsage, true
}

// HasHpUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHpUsage() bool {
	if o != nil && !IsNil(o.HpUsage) {
		return true
	}

	return false
}

// SetHpUsage gets a reference to the given float32 and assigns it to the HpUsage field.
func (o *FormattedApiOrg) SetHpUsage(v float32) {
	o.HpUsage = &v
}

// GetIrmStatus returns the IrmStatus field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmStatus() float32 {
	if o == nil || IsNil(o.IrmStatus) {
		var ret float32
		return ret
	}
	return *o.IrmStatus
}

// GetIrmStatusOk returns a tuple with the IrmStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmStatus) {
		return nil, false
	}
	return o.IrmStatus, true
}

// HasIrmStatus returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmStatus() bool {
	if o != nil && !IsNil(o.IrmStatus) {
		return true
	}

	return false
}

// SetIrmStatus gets a reference to the given float32 and assigns it to the IrmStatus field.
func (o *FormattedApiOrg) SetIrmStatus(v float32) {
	o.IrmStatus = &v
}

// GetIrmIncludedUsage returns the IrmIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmIncludedUsage() float32 {
	if o == nil || IsNil(o.IrmIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.IrmIncludedUsage
}

// GetIrmIncludedUsageOk returns a tuple with the IrmIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmIncludedUsage) {
		return nil, false
	}
	return o.IrmIncludedUsage, true
}

// HasIrmIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmIncludedUsage() bool {
	if o != nil && !IsNil(o.IrmIncludedUsage) {
		return true
	}

	return false
}

// SetIrmIncludedUsage gets a reference to the given float32 and assigns it to the IrmIncludedUsage field.
func (o *FormattedApiOrg) SetIrmIncludedUsage(v float32) {
	o.IrmIncludedUsage = &v
}

// GetIrmTier1Rate returns the IrmTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmTier1Rate() float32 {
	if o == nil || IsNil(o.IrmTier1Rate) {
		var ret float32
		return ret
	}
	return *o.IrmTier1Rate
}

// GetIrmTier1RateOk returns a tuple with the IrmTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmTier1Rate) {
		return nil, false
	}
	return o.IrmTier1Rate, true
}

// HasIrmTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmTier1Rate() bool {
	if o != nil && !IsNil(o.IrmTier1Rate) {
		return true
	}

	return false
}

// SetIrmTier1Rate gets a reference to the given float32 and assigns it to the IrmTier1Rate field.
func (o *FormattedApiOrg) SetIrmTier1Rate(v float32) {
	o.IrmTier1Rate = &v
}

// GetIrmTier2Min returns the IrmTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmTier2Min() float32 {
	if o == nil || IsNil(o.IrmTier2Min) {
		var ret float32
		return ret
	}
	return *o.IrmTier2Min
}

// GetIrmTier2MinOk returns a tuple with the IrmTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmTier2Min) {
		return nil, false
	}
	return o.IrmTier2Min, true
}

// HasIrmTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmTier2Min() bool {
	if o != nil && !IsNil(o.IrmTier2Min) {
		return true
	}

	return false
}

// SetIrmTier2Min gets a reference to the given float32 and assigns it to the IrmTier2Min field.
func (o *FormattedApiOrg) SetIrmTier2Min(v float32) {
	o.IrmTier2Min = &v
}

// GetIrmTier2Rate returns the IrmTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmTier2Rate() float32 {
	if o == nil || IsNil(o.IrmTier2Rate) {
		var ret float32
		return ret
	}
	return *o.IrmTier2Rate
}

// GetIrmTier2RateOk returns a tuple with the IrmTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmTier2Rate) {
		return nil, false
	}
	return o.IrmTier2Rate, true
}

// HasIrmTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmTier2Rate() bool {
	if o != nil && !IsNil(o.IrmTier2Rate) {
		return true
	}

	return false
}

// SetIrmTier2Rate gets a reference to the given float32 and assigns it to the IrmTier2Rate field.
func (o *FormattedApiOrg) SetIrmTier2Rate(v float32) {
	o.IrmTier2Rate = &v
}

// GetIrmTier3Min returns the IrmTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmTier3Min() float32 {
	if o == nil || IsNil(o.IrmTier3Min) {
		var ret float32
		return ret
	}
	return *o.IrmTier3Min
}

// GetIrmTier3MinOk returns a tuple with the IrmTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmTier3Min) {
		return nil, false
	}
	return o.IrmTier3Min, true
}

// HasIrmTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmTier3Min() bool {
	if o != nil && !IsNil(o.IrmTier3Min) {
		return true
	}

	return false
}

// SetIrmTier3Min gets a reference to the given float32 and assigns it to the IrmTier3Min field.
func (o *FormattedApiOrg) SetIrmTier3Min(v float32) {
	o.IrmTier3Min = &v
}

// GetIrmTier3Rate returns the IrmTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmTier3Rate() float32 {
	if o == nil || IsNil(o.IrmTier3Rate) {
		var ret float32
		return ret
	}
	return *o.IrmTier3Rate
}

// GetIrmTier3RateOk returns a tuple with the IrmTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmTier3Rate) {
		return nil, false
	}
	return o.IrmTier3Rate, true
}

// HasIrmTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmTier3Rate() bool {
	if o != nil && !IsNil(o.IrmTier3Rate) {
		return true
	}

	return false
}

// SetIrmTier3Rate gets a reference to the given float32 and assigns it to the IrmTier3Rate field.
func (o *FormattedApiOrg) SetIrmTier3Rate(v float32) {
	o.IrmTier3Rate = &v
}

// GetIrmUsage returns the IrmUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetIrmUsage() float32 {
	if o == nil || IsNil(o.IrmUsage) {
		var ret float32
		return ret
	}
	return *o.IrmUsage
}

// GetIrmUsageOk returns a tuple with the IrmUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetIrmUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.IrmUsage) {
		return nil, false
	}
	return o.IrmUsage, true
}

// HasIrmUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasIrmUsage() bool {
	if o != nil && !IsNil(o.IrmUsage) {
		return true
	}

	return false
}

// SetIrmUsage gets a reference to the given float32 and assigns it to the IrmUsage field.
func (o *FormattedApiOrg) SetIrmUsage(v float32) {
	o.IrmUsage = &v
}

// GetK6VuhIncludedUsage returns the K6VuhIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhIncludedUsage() float32 {
	if o == nil || IsNil(o.K6VuhIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.K6VuhIncludedUsage
}

// GetK6VuhIncludedUsageOk returns a tuple with the K6VuhIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhIncludedUsage) {
		return nil, false
	}
	return o.K6VuhIncludedUsage, true
}

// HasK6VuhIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhIncludedUsage() bool {
	if o != nil && !IsNil(o.K6VuhIncludedUsage) {
		return true
	}

	return false
}

// SetK6VuhIncludedUsage gets a reference to the given float32 and assigns it to the K6VuhIncludedUsage field.
func (o *FormattedApiOrg) SetK6VuhIncludedUsage(v float32) {
	o.K6VuhIncludedUsage = &v
}

// GetK6VuhTier1Rate returns the K6VuhTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhTier1Rate() float32 {
	if o == nil || IsNil(o.K6VuhTier1Rate) {
		var ret float32
		return ret
	}
	return *o.K6VuhTier1Rate
}

// GetK6VuhTier1RateOk returns a tuple with the K6VuhTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhTier1Rate) {
		return nil, false
	}
	return o.K6VuhTier1Rate, true
}

// HasK6VuhTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhTier1Rate() bool {
	if o != nil && !IsNil(o.K6VuhTier1Rate) {
		return true
	}

	return false
}

// SetK6VuhTier1Rate gets a reference to the given float32 and assigns it to the K6VuhTier1Rate field.
func (o *FormattedApiOrg) SetK6VuhTier1Rate(v float32) {
	o.K6VuhTier1Rate = &v
}

// GetK6VuhTier2Min returns the K6VuhTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhTier2Min() float32 {
	if o == nil || IsNil(o.K6VuhTier2Min) {
		var ret float32
		return ret
	}
	return *o.K6VuhTier2Min
}

// GetK6VuhTier2MinOk returns a tuple with the K6VuhTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhTier2Min) {
		return nil, false
	}
	return o.K6VuhTier2Min, true
}

// HasK6VuhTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhTier2Min() bool {
	if o != nil && !IsNil(o.K6VuhTier2Min) {
		return true
	}

	return false
}

// SetK6VuhTier2Min gets a reference to the given float32 and assigns it to the K6VuhTier2Min field.
func (o *FormattedApiOrg) SetK6VuhTier2Min(v float32) {
	o.K6VuhTier2Min = &v
}

// GetK6VuhTier2Rate returns the K6VuhTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhTier2Rate() float32 {
	if o == nil || IsNil(o.K6VuhTier2Rate) {
		var ret float32
		return ret
	}
	return *o.K6VuhTier2Rate
}

// GetK6VuhTier2RateOk returns a tuple with the K6VuhTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhTier2Rate) {
		return nil, false
	}
	return o.K6VuhTier2Rate, true
}

// HasK6VuhTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhTier2Rate() bool {
	if o != nil && !IsNil(o.K6VuhTier2Rate) {
		return true
	}

	return false
}

// SetK6VuhTier2Rate gets a reference to the given float32 and assigns it to the K6VuhTier2Rate field.
func (o *FormattedApiOrg) SetK6VuhTier2Rate(v float32) {
	o.K6VuhTier2Rate = &v
}

// GetK6VuhTier3Min returns the K6VuhTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhTier3Min() float32 {
	if o == nil || IsNil(o.K6VuhTier3Min) {
		var ret float32
		return ret
	}
	return *o.K6VuhTier3Min
}

// GetK6VuhTier3MinOk returns a tuple with the K6VuhTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhTier3Min) {
		return nil, false
	}
	return o.K6VuhTier3Min, true
}

// HasK6VuhTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhTier3Min() bool {
	if o != nil && !IsNil(o.K6VuhTier3Min) {
		return true
	}

	return false
}

// SetK6VuhTier3Min gets a reference to the given float32 and assigns it to the K6VuhTier3Min field.
func (o *FormattedApiOrg) SetK6VuhTier3Min(v float32) {
	o.K6VuhTier3Min = &v
}

// GetK6VuhTier3Rate returns the K6VuhTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhTier3Rate() float32 {
	if o == nil || IsNil(o.K6VuhTier3Rate) {
		var ret float32
		return ret
	}
	return *o.K6VuhTier3Rate
}

// GetK6VuhTier3RateOk returns a tuple with the K6VuhTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhTier3Rate) {
		return nil, false
	}
	return o.K6VuhTier3Rate, true
}

// HasK6VuhTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhTier3Rate() bool {
	if o != nil && !IsNil(o.K6VuhTier3Rate) {
		return true
	}

	return false
}

// SetK6VuhTier3Rate gets a reference to the given float32 and assigns it to the K6VuhTier3Rate field.
func (o *FormattedApiOrg) SetK6VuhTier3Rate(v float32) {
	o.K6VuhTier3Rate = &v
}

// GetK6VuhUnits returns the K6VuhUnits field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhUnits() float32 {
	if o == nil || IsNil(o.K6VuhUnits) {
		var ret float32
		return ret
	}
	return *o.K6VuhUnits
}

// GetK6VuhUnitsOk returns a tuple with the K6VuhUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhUnitsOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhUnits) {
		return nil, false
	}
	return o.K6VuhUnits, true
}

// HasK6VuhUnits returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhUnits() bool {
	if o != nil && !IsNil(o.K6VuhUnits) {
		return true
	}

	return false
}

// SetK6VuhUnits gets a reference to the given float32 and assigns it to the K6VuhUnits field.
func (o *FormattedApiOrg) SetK6VuhUnits(v float32) {
	o.K6VuhUnits = &v
}

// GetK6VuhUsage returns the K6VuhUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6VuhUsage() float32 {
	if o == nil || IsNil(o.K6VuhUsage) {
		var ret float32
		return ret
	}
	return *o.K6VuhUsage
}

// GetK6VuhUsageOk returns a tuple with the K6VuhUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6VuhUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6VuhUsage) {
		return nil, false
	}
	return o.K6VuhUsage, true
}

// HasK6VuhUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6VuhUsage() bool {
	if o != nil && !IsNil(o.K6VuhUsage) {
		return true
	}

	return false
}

// SetK6VuhUsage gets a reference to the given float32 and assigns it to the K6VuhUsage field.
func (o *FormattedApiOrg) SetK6VuhUsage(v float32) {
	o.K6VuhUsage = &v
}

// GetK6IPIncludedUsage returns the K6IPIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPIncludedUsage() float32 {
	if o == nil || IsNil(o.K6IPIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.K6IPIncludedUsage
}

// GetK6IPIncludedUsageOk returns a tuple with the K6IPIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPIncludedUsage) {
		return nil, false
	}
	return o.K6IPIncludedUsage, true
}

// HasK6IPIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPIncludedUsage() bool {
	if o != nil && !IsNil(o.K6IPIncludedUsage) {
		return true
	}

	return false
}

// SetK6IPIncludedUsage gets a reference to the given float32 and assigns it to the K6IPIncludedUsage field.
func (o *FormattedApiOrg) SetK6IPIncludedUsage(v float32) {
	o.K6IPIncludedUsage = &v
}

// GetK6IPTier1Rate returns the K6IPTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPTier1Rate() float32 {
	if o == nil || IsNil(o.K6IPTier1Rate) {
		var ret float32
		return ret
	}
	return *o.K6IPTier1Rate
}

// GetK6IPTier1RateOk returns a tuple with the K6IPTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPTier1Rate) {
		return nil, false
	}
	return o.K6IPTier1Rate, true
}

// HasK6IPTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPTier1Rate() bool {
	if o != nil && !IsNil(o.K6IPTier1Rate) {
		return true
	}

	return false
}

// SetK6IPTier1Rate gets a reference to the given float32 and assigns it to the K6IPTier1Rate field.
func (o *FormattedApiOrg) SetK6IPTier1Rate(v float32) {
	o.K6IPTier1Rate = &v
}

// GetK6IPTier2Min returns the K6IPTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPTier2Min() float32 {
	if o == nil || IsNil(o.K6IPTier2Min) {
		var ret float32
		return ret
	}
	return *o.K6IPTier2Min
}

// GetK6IPTier2MinOk returns a tuple with the K6IPTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPTier2Min) {
		return nil, false
	}
	return o.K6IPTier2Min, true
}

// HasK6IPTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPTier2Min() bool {
	if o != nil && !IsNil(o.K6IPTier2Min) {
		return true
	}

	return false
}

// SetK6IPTier2Min gets a reference to the given float32 and assigns it to the K6IPTier2Min field.
func (o *FormattedApiOrg) SetK6IPTier2Min(v float32) {
	o.K6IPTier2Min = &v
}

// GetK6IPTier2Rate returns the K6IPTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPTier2Rate() float32 {
	if o == nil || IsNil(o.K6IPTier2Rate) {
		var ret float32
		return ret
	}
	return *o.K6IPTier2Rate
}

// GetK6IPTier2RateOk returns a tuple with the K6IPTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPTier2Rate) {
		return nil, false
	}
	return o.K6IPTier2Rate, true
}

// HasK6IPTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPTier2Rate() bool {
	if o != nil && !IsNil(o.K6IPTier2Rate) {
		return true
	}

	return false
}

// SetK6IPTier2Rate gets a reference to the given float32 and assigns it to the K6IPTier2Rate field.
func (o *FormattedApiOrg) SetK6IPTier2Rate(v float32) {
	o.K6IPTier2Rate = &v
}

// GetK6IPTier3Min returns the K6IPTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPTier3Min() float32 {
	if o == nil || IsNil(o.K6IPTier3Min) {
		var ret float32
		return ret
	}
	return *o.K6IPTier3Min
}

// GetK6IPTier3MinOk returns a tuple with the K6IPTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPTier3Min) {
		return nil, false
	}
	return o.K6IPTier3Min, true
}

// HasK6IPTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPTier3Min() bool {
	if o != nil && !IsNil(o.K6IPTier3Min) {
		return true
	}

	return false
}

// SetK6IPTier3Min gets a reference to the given float32 and assigns it to the K6IPTier3Min field.
func (o *FormattedApiOrg) SetK6IPTier3Min(v float32) {
	o.K6IPTier3Min = &v
}

// GetK6IPTier3Rate returns the K6IPTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPTier3Rate() float32 {
	if o == nil || IsNil(o.K6IPTier3Rate) {
		var ret float32
		return ret
	}
	return *o.K6IPTier3Rate
}

// GetK6IPTier3RateOk returns a tuple with the K6IPTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPTier3Rate) {
		return nil, false
	}
	return o.K6IPTier3Rate, true
}

// HasK6IPTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPTier3Rate() bool {
	if o != nil && !IsNil(o.K6IPTier3Rate) {
		return true
	}

	return false
}

// SetK6IPTier3Rate gets a reference to the given float32 and assigns it to the K6IPTier3Rate field.
func (o *FormattedApiOrg) SetK6IPTier3Rate(v float32) {
	o.K6IPTier3Rate = &v
}

// GetK6IPUsage returns the K6IPUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetK6IPUsage() float32 {
	if o == nil || IsNil(o.K6IPUsage) {
		var ret float32
		return ret
	}
	return *o.K6IPUsage
}

// GetK6IPUsageOk returns a tuple with the K6IPUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetK6IPUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.K6IPUsage) {
		return nil, false
	}
	return o.K6IPUsage, true
}

// HasK6IPUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasK6IPUsage() bool {
	if o != nil && !IsNil(o.K6IPUsage) {
		return true
	}

	return false
}

// SetK6IPUsage gets a reference to the given float32 and assigns it to the K6IPUsage field.
func (o *FormattedApiOrg) SetK6IPUsage(v float32) {
	o.K6IPUsage = &v
}

// GetFeO11yIncludedUsage returns the FeO11yIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yIncludedUsage() float32 {
	if o == nil || IsNil(o.FeO11yIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.FeO11yIncludedUsage
}

// GetFeO11yIncludedUsageOk returns a tuple with the FeO11yIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yIncludedUsage) {
		return nil, false
	}
	return o.FeO11yIncludedUsage, true
}

// HasFeO11yIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yIncludedUsage() bool {
	if o != nil && !IsNil(o.FeO11yIncludedUsage) {
		return true
	}

	return false
}

// SetFeO11yIncludedUsage gets a reference to the given float32 and assigns it to the FeO11yIncludedUsage field.
func (o *FormattedApiOrg) SetFeO11yIncludedUsage(v float32) {
	o.FeO11yIncludedUsage = &v
}

// GetFeO11yTier1Rate returns the FeO11yTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yTier1Rate() float32 {
	if o == nil || IsNil(o.FeO11yTier1Rate) {
		var ret float32
		return ret
	}
	return *o.FeO11yTier1Rate
}

// GetFeO11yTier1RateOk returns a tuple with the FeO11yTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yTier1Rate) {
		return nil, false
	}
	return o.FeO11yTier1Rate, true
}

// HasFeO11yTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yTier1Rate() bool {
	if o != nil && !IsNil(o.FeO11yTier1Rate) {
		return true
	}

	return false
}

// SetFeO11yTier1Rate gets a reference to the given float32 and assigns it to the FeO11yTier1Rate field.
func (o *FormattedApiOrg) SetFeO11yTier1Rate(v float32) {
	o.FeO11yTier1Rate = &v
}

// GetFeO11yTier2Min returns the FeO11yTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yTier2Min() float32 {
	if o == nil || IsNil(o.FeO11yTier2Min) {
		var ret float32
		return ret
	}
	return *o.FeO11yTier2Min
}

// GetFeO11yTier2MinOk returns a tuple with the FeO11yTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yTier2Min) {
		return nil, false
	}
	return o.FeO11yTier2Min, true
}

// HasFeO11yTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yTier2Min() bool {
	if o != nil && !IsNil(o.FeO11yTier2Min) {
		return true
	}

	return false
}

// SetFeO11yTier2Min gets a reference to the given float32 and assigns it to the FeO11yTier2Min field.
func (o *FormattedApiOrg) SetFeO11yTier2Min(v float32) {
	o.FeO11yTier2Min = &v
}

// GetFeO11yTier2Rate returns the FeO11yTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yTier2Rate() float32 {
	if o == nil || IsNil(o.FeO11yTier2Rate) {
		var ret float32
		return ret
	}
	return *o.FeO11yTier2Rate
}

// GetFeO11yTier2RateOk returns a tuple with the FeO11yTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yTier2Rate) {
		return nil, false
	}
	return o.FeO11yTier2Rate, true
}

// HasFeO11yTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yTier2Rate() bool {
	if o != nil && !IsNil(o.FeO11yTier2Rate) {
		return true
	}

	return false
}

// SetFeO11yTier2Rate gets a reference to the given float32 and assigns it to the FeO11yTier2Rate field.
func (o *FormattedApiOrg) SetFeO11yTier2Rate(v float32) {
	o.FeO11yTier2Rate = &v
}

// GetFeO11yTier3Min returns the FeO11yTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yTier3Min() float32 {
	if o == nil || IsNil(o.FeO11yTier3Min) {
		var ret float32
		return ret
	}
	return *o.FeO11yTier3Min
}

// GetFeO11yTier3MinOk returns a tuple with the FeO11yTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yTier3Min) {
		return nil, false
	}
	return o.FeO11yTier3Min, true
}

// HasFeO11yTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yTier3Min() bool {
	if o != nil && !IsNil(o.FeO11yTier3Min) {
		return true
	}

	return false
}

// SetFeO11yTier3Min gets a reference to the given float32 and assigns it to the FeO11yTier3Min field.
func (o *FormattedApiOrg) SetFeO11yTier3Min(v float32) {
	o.FeO11yTier3Min = &v
}

// GetFeO11yTier3Rate returns the FeO11yTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yTier3Rate() float32 {
	if o == nil || IsNil(o.FeO11yTier3Rate) {
		var ret float32
		return ret
	}
	return *o.FeO11yTier3Rate
}

// GetFeO11yTier3RateOk returns a tuple with the FeO11yTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yTier3Rate) {
		return nil, false
	}
	return o.FeO11yTier3Rate, true
}

// HasFeO11yTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yTier3Rate() bool {
	if o != nil && !IsNil(o.FeO11yTier3Rate) {
		return true
	}

	return false
}

// SetFeO11yTier3Rate gets a reference to the given float32 and assigns it to the FeO11yTier3Rate field.
func (o *FormattedApiOrg) SetFeO11yTier3Rate(v float32) {
	o.FeO11yTier3Rate = &v
}

// GetFeO11yUnits returns the FeO11yUnits field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yUnits() float32 {
	if o == nil || IsNil(o.FeO11yUnits) {
		var ret float32
		return ret
	}
	return *o.FeO11yUnits
}

// GetFeO11yUnitsOk returns a tuple with the FeO11yUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yUnitsOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yUnits) {
		return nil, false
	}
	return o.FeO11yUnits, true
}

// HasFeO11yUnits returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yUnits() bool {
	if o != nil && !IsNil(o.FeO11yUnits) {
		return true
	}

	return false
}

// SetFeO11yUnits gets a reference to the given float32 and assigns it to the FeO11yUnits field.
func (o *FormattedApiOrg) SetFeO11yUnits(v float32) {
	o.FeO11yUnits = &v
}

// GetFeO11yUsage returns the FeO11yUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetFeO11yUsage() float32 {
	if o == nil || IsNil(o.FeO11yUsage) {
		var ret float32
		return ret
	}
	return *o.FeO11yUsage
}

// GetFeO11yUsageOk returns a tuple with the FeO11yUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetFeO11yUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.FeO11yUsage) {
		return nil, false
	}
	return o.FeO11yUsage, true
}

// HasFeO11yUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasFeO11yUsage() bool {
	if o != nil && !IsNil(o.FeO11yUsage) {
		return true
	}

	return false
}

// SetFeO11yUsage gets a reference to the given float32 and assigns it to the FeO11yUsage field.
func (o *FormattedApiOrg) SetFeO11yUsage(v float32) {
	o.FeO11yUsage = &v
}

// GetGeUsersIncludedUsage returns the GeUsersIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersIncludedUsage() float32 {
	if o == nil || IsNil(o.GeUsersIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.GeUsersIncludedUsage
}

// GetGeUsersIncludedUsageOk returns a tuple with the GeUsersIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersIncludedUsage) {
		return nil, false
	}
	return o.GeUsersIncludedUsage, true
}

// HasGeUsersIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersIncludedUsage() bool {
	if o != nil && !IsNil(o.GeUsersIncludedUsage) {
		return true
	}

	return false
}

// SetGeUsersIncludedUsage gets a reference to the given float32 and assigns it to the GeUsersIncludedUsage field.
func (o *FormattedApiOrg) SetGeUsersIncludedUsage(v float32) {
	o.GeUsersIncludedUsage = &v
}

// GetGeUsersTier1Rate returns the GeUsersTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersTier1Rate() float32 {
	if o == nil || IsNil(o.GeUsersTier1Rate) {
		var ret float32
		return ret
	}
	return *o.GeUsersTier1Rate
}

// GetGeUsersTier1RateOk returns a tuple with the GeUsersTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersTier1Rate) {
		return nil, false
	}
	return o.GeUsersTier1Rate, true
}

// HasGeUsersTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersTier1Rate() bool {
	if o != nil && !IsNil(o.GeUsersTier1Rate) {
		return true
	}

	return false
}

// SetGeUsersTier1Rate gets a reference to the given float32 and assigns it to the GeUsersTier1Rate field.
func (o *FormattedApiOrg) SetGeUsersTier1Rate(v float32) {
	o.GeUsersTier1Rate = &v
}

// GetGeUsersTier2Min returns the GeUsersTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersTier2Min() float32 {
	if o == nil || IsNil(o.GeUsersTier2Min) {
		var ret float32
		return ret
	}
	return *o.GeUsersTier2Min
}

// GetGeUsersTier2MinOk returns a tuple with the GeUsersTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersTier2Min) {
		return nil, false
	}
	return o.GeUsersTier2Min, true
}

// HasGeUsersTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersTier2Min() bool {
	if o != nil && !IsNil(o.GeUsersTier2Min) {
		return true
	}

	return false
}

// SetGeUsersTier2Min gets a reference to the given float32 and assigns it to the GeUsersTier2Min field.
func (o *FormattedApiOrg) SetGeUsersTier2Min(v float32) {
	o.GeUsersTier2Min = &v
}

// GetGeUsersTier2Rate returns the GeUsersTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersTier2Rate() float32 {
	if o == nil || IsNil(o.GeUsersTier2Rate) {
		var ret float32
		return ret
	}
	return *o.GeUsersTier2Rate
}

// GetGeUsersTier2RateOk returns a tuple with the GeUsersTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersTier2Rate) {
		return nil, false
	}
	return o.GeUsersTier2Rate, true
}

// HasGeUsersTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersTier2Rate() bool {
	if o != nil && !IsNil(o.GeUsersTier2Rate) {
		return true
	}

	return false
}

// SetGeUsersTier2Rate gets a reference to the given float32 and assigns it to the GeUsersTier2Rate field.
func (o *FormattedApiOrg) SetGeUsersTier2Rate(v float32) {
	o.GeUsersTier2Rate = &v
}

// GetGeUsersTier3Min returns the GeUsersTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersTier3Min() float32 {
	if o == nil || IsNil(o.GeUsersTier3Min) {
		var ret float32
		return ret
	}
	return *o.GeUsersTier3Min
}

// GetGeUsersTier3MinOk returns a tuple with the GeUsersTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersTier3Min) {
		return nil, false
	}
	return o.GeUsersTier3Min, true
}

// HasGeUsersTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersTier3Min() bool {
	if o != nil && !IsNil(o.GeUsersTier3Min) {
		return true
	}

	return false
}

// SetGeUsersTier3Min gets a reference to the given float32 and assigns it to the GeUsersTier3Min field.
func (o *FormattedApiOrg) SetGeUsersTier3Min(v float32) {
	o.GeUsersTier3Min = &v
}

// GetGeUsersTier3Rate returns the GeUsersTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersTier3Rate() float32 {
	if o == nil || IsNil(o.GeUsersTier3Rate) {
		var ret float32
		return ret
	}
	return *o.GeUsersTier3Rate
}

// GetGeUsersTier3RateOk returns a tuple with the GeUsersTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersTier3Rate) {
		return nil, false
	}
	return o.GeUsersTier3Rate, true
}

// HasGeUsersTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersTier3Rate() bool {
	if o != nil && !IsNil(o.GeUsersTier3Rate) {
		return true
	}

	return false
}

// SetGeUsersTier3Rate gets a reference to the given float32 and assigns it to the GeUsersTier3Rate field.
func (o *FormattedApiOrg) SetGeUsersTier3Rate(v float32) {
	o.GeUsersTier3Rate = &v
}

// GetGeUsersUsage returns the GeUsersUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeUsersUsage() float32 {
	if o == nil || IsNil(o.GeUsersUsage) {
		var ret float32
		return ret
	}
	return *o.GeUsersUsage
}

// GetGeUsersUsageOk returns a tuple with the GeUsersUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeUsersUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeUsersUsage) {
		return nil, false
	}
	return o.GeUsersUsage, true
}

// HasGeUsersUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeUsersUsage() bool {
	if o != nil && !IsNil(o.GeUsersUsage) {
		return true
	}

	return false
}

// SetGeUsersUsage gets a reference to the given float32 and assigns it to the GeUsersUsage field.
func (o *FormattedApiOrg) SetGeUsersUsage(v float32) {
	o.GeUsersUsage = &v
}

// GetGeInstancesIncludedUsage returns the GeInstancesIncludedUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesIncludedUsage() float32 {
	if o == nil || IsNil(o.GeInstancesIncludedUsage) {
		var ret float32
		return ret
	}
	return *o.GeInstancesIncludedUsage
}

// GetGeInstancesIncludedUsageOk returns a tuple with the GeInstancesIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesIncludedUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesIncludedUsage) {
		return nil, false
	}
	return o.GeInstancesIncludedUsage, true
}

// HasGeInstancesIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesIncludedUsage() bool {
	if o != nil && !IsNil(o.GeInstancesIncludedUsage) {
		return true
	}

	return false
}

// SetGeInstancesIncludedUsage gets a reference to the given float32 and assigns it to the GeInstancesIncludedUsage field.
func (o *FormattedApiOrg) SetGeInstancesIncludedUsage(v float32) {
	o.GeInstancesIncludedUsage = &v
}

// GetGeInstancesTier1Rate returns the GeInstancesTier1Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesTier1Rate() float32 {
	if o == nil || IsNil(o.GeInstancesTier1Rate) {
		var ret float32
		return ret
	}
	return *o.GeInstancesTier1Rate
}

// GetGeInstancesTier1RateOk returns a tuple with the GeInstancesTier1Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesTier1RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesTier1Rate) {
		return nil, false
	}
	return o.GeInstancesTier1Rate, true
}

// HasGeInstancesTier1Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesTier1Rate() bool {
	if o != nil && !IsNil(o.GeInstancesTier1Rate) {
		return true
	}

	return false
}

// SetGeInstancesTier1Rate gets a reference to the given float32 and assigns it to the GeInstancesTier1Rate field.
func (o *FormattedApiOrg) SetGeInstancesTier1Rate(v float32) {
	o.GeInstancesTier1Rate = &v
}

// GetGeInstancesTier2Min returns the GeInstancesTier2Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesTier2Min() float32 {
	if o == nil || IsNil(o.GeInstancesTier2Min) {
		var ret float32
		return ret
	}
	return *o.GeInstancesTier2Min
}

// GetGeInstancesTier2MinOk returns a tuple with the GeInstancesTier2Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesTier2MinOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesTier2Min) {
		return nil, false
	}
	return o.GeInstancesTier2Min, true
}

// HasGeInstancesTier2Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesTier2Min() bool {
	if o != nil && !IsNil(o.GeInstancesTier2Min) {
		return true
	}

	return false
}

// SetGeInstancesTier2Min gets a reference to the given float32 and assigns it to the GeInstancesTier2Min field.
func (o *FormattedApiOrg) SetGeInstancesTier2Min(v float32) {
	o.GeInstancesTier2Min = &v
}

// GetGeInstancesTier2Rate returns the GeInstancesTier2Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesTier2Rate() float32 {
	if o == nil || IsNil(o.GeInstancesTier2Rate) {
		var ret float32
		return ret
	}
	return *o.GeInstancesTier2Rate
}

// GetGeInstancesTier2RateOk returns a tuple with the GeInstancesTier2Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesTier2RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesTier2Rate) {
		return nil, false
	}
	return o.GeInstancesTier2Rate, true
}

// HasGeInstancesTier2Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesTier2Rate() bool {
	if o != nil && !IsNil(o.GeInstancesTier2Rate) {
		return true
	}

	return false
}

// SetGeInstancesTier2Rate gets a reference to the given float32 and assigns it to the GeInstancesTier2Rate field.
func (o *FormattedApiOrg) SetGeInstancesTier2Rate(v float32) {
	o.GeInstancesTier2Rate = &v
}

// GetGeInstancesTier3Min returns the GeInstancesTier3Min field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesTier3Min() float32 {
	if o == nil || IsNil(o.GeInstancesTier3Min) {
		var ret float32
		return ret
	}
	return *o.GeInstancesTier3Min
}

// GetGeInstancesTier3MinOk returns a tuple with the GeInstancesTier3Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesTier3MinOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesTier3Min) {
		return nil, false
	}
	return o.GeInstancesTier3Min, true
}

// HasGeInstancesTier3Min returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesTier3Min() bool {
	if o != nil && !IsNil(o.GeInstancesTier3Min) {
		return true
	}

	return false
}

// SetGeInstancesTier3Min gets a reference to the given float32 and assigns it to the GeInstancesTier3Min field.
func (o *FormattedApiOrg) SetGeInstancesTier3Min(v float32) {
	o.GeInstancesTier3Min = &v
}

// GetGeInstancesTier3Rate returns the GeInstancesTier3Rate field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesTier3Rate() float32 {
	if o == nil || IsNil(o.GeInstancesTier3Rate) {
		var ret float32
		return ret
	}
	return *o.GeInstancesTier3Rate
}

// GetGeInstancesTier3RateOk returns a tuple with the GeInstancesTier3Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesTier3RateOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesTier3Rate) {
		return nil, false
	}
	return o.GeInstancesTier3Rate, true
}

// HasGeInstancesTier3Rate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesTier3Rate() bool {
	if o != nil && !IsNil(o.GeInstancesTier3Rate) {
		return true
	}

	return false
}

// SetGeInstancesTier3Rate gets a reference to the given float32 and assigns it to the GeInstancesTier3Rate field.
func (o *FormattedApiOrg) SetGeInstancesTier3Rate(v float32) {
	o.GeInstancesTier3Rate = &v
}

// GetGeInstancesUsage returns the GeInstancesUsage field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetGeInstancesUsage() float32 {
	if o == nil || IsNil(o.GeInstancesUsage) {
		var ret float32
		return ret
	}
	return *o.GeInstancesUsage
}

// GetGeInstancesUsageOk returns a tuple with the GeInstancesUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetGeInstancesUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.GeInstancesUsage) {
		return nil, false
	}
	return o.GeInstancesUsage, true
}

// HasGeInstancesUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasGeInstancesUsage() bool {
	if o != nil && !IsNil(o.GeInstancesUsage) {
		return true
	}

	return false
}

// SetGeInstancesUsage gets a reference to the given float32 and assigns it to the GeInstancesUsage field.
func (o *FormattedApiOrg) SetGeInstancesUsage(v float32) {
	o.GeInstancesUsage = &v
}

// GetHgPluginUsersOverageRate returns the HgPluginUsersOverageRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgPluginUsersOverageRate() float32 {
	if o == nil || IsNil(o.HgPluginUsersOverageRate.Get()) {
		var ret float32
		return ret
	}
	return *o.HgPluginUsersOverageRate.Get()
}

// GetHgPluginUsersOverageRateOk returns a tuple with the HgPluginUsersOverageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgPluginUsersOverageRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgPluginUsersOverageRate.Get(), o.HgPluginUsersOverageRate.IsSet()
}

// HasHgPluginUsersOverageRate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgPluginUsersOverageRate() bool {
	if o != nil && o.HgPluginUsersOverageRate.IsSet() {
		return true
	}

	return false
}

// SetHgPluginUsersOverageRate gets a reference to the given NullableFloat32 and assigns it to the HgPluginUsersOverageRate field.
func (o *FormattedApiOrg) SetHgPluginUsersOverageRate(v float32) {
	o.HgPluginUsersOverageRate.Set(&v)
}

// SetHgPluginUsersOverageRateNil sets the value for HgPluginUsersOverageRate to be an explicit nil
func (o *FormattedApiOrg) SetHgPluginUsersOverageRateNil() {
	o.HgPluginUsersOverageRate.Set(nil)
}

// UnsetHgPluginUsersOverageRate ensures that no value is present for HgPluginUsersOverageRate, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgPluginUsersOverageRate() {
	o.HgPluginUsersOverageRate.Unset()
}

// GetHgPluginUsersIncludedUsage returns the HgPluginUsersIncludedUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetHgPluginUsersIncludedUsage() float32 {
	if o == nil || IsNil(o.HgPluginUsersIncludedUsage.Get()) {
		var ret float32
		return ret
	}
	return *o.HgPluginUsersIncludedUsage.Get()
}

// GetHgPluginUsersIncludedUsageOk returns a tuple with the HgPluginUsersIncludedUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetHgPluginUsersIncludedUsageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HgPluginUsersIncludedUsage.Get(), o.HgPluginUsersIncludedUsage.IsSet()
}

// HasHgPluginUsersIncludedUsage returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHgPluginUsersIncludedUsage() bool {
	if o != nil && o.HgPluginUsersIncludedUsage.IsSet() {
		return true
	}

	return false
}

// SetHgPluginUsersIncludedUsage gets a reference to the given NullableFloat32 and assigns it to the HgPluginUsersIncludedUsage field.
func (o *FormattedApiOrg) SetHgPluginUsersIncludedUsage(v float32) {
	o.HgPluginUsersIncludedUsage.Set(&v)
}

// SetHgPluginUsersIncludedUsageNil sets the value for HgPluginUsersIncludedUsage to be an explicit nil
func (o *FormattedApiOrg) SetHgPluginUsersIncludedUsageNil() {
	o.HgPluginUsersIncludedUsage.Set(nil)
}

// UnsetHgPluginUsersIncludedUsage ensures that no value is present for HgPluginUsersIncludedUsage, not even an explicit nil
func (o *FormattedApiOrg) UnsetHgPluginUsersIncludedUsage() {
	o.HgPluginUsersIncludedUsage.Unset()
}

// GetHmGraphiteInstanceCnt returns the HmGraphiteInstanceCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmGraphiteInstanceCnt() float32 {
	if o == nil || IsNil(o.HmGraphiteInstanceCnt) {
		var ret float32
		return ret
	}
	return *o.HmGraphiteInstanceCnt
}

// GetHmGraphiteInstanceCntOk returns a tuple with the HmGraphiteInstanceCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmGraphiteInstanceCntOk() (*float32, bool) {
	if o == nil || IsNil(o.HmGraphiteInstanceCnt) {
		return nil, false
	}
	return o.HmGraphiteInstanceCnt, true
}

// HasHmGraphiteInstanceCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmGraphiteInstanceCnt() bool {
	if o != nil && !IsNil(o.HmGraphiteInstanceCnt) {
		return true
	}

	return false
}

// SetHmGraphiteInstanceCnt gets a reference to the given float32 and assigns it to the HmGraphiteInstanceCnt field.
func (o *FormattedApiOrg) SetHmGraphiteInstanceCnt(v float32) {
	o.HmGraphiteInstanceCnt = &v
}

// GetHmPrometheusInstanceCnt returns the HmPrometheusInstanceCnt field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetHmPrometheusInstanceCnt() float32 {
	if o == nil || IsNil(o.HmPrometheusInstanceCnt) {
		var ret float32
		return ret
	}
	return *o.HmPrometheusInstanceCnt
}

// GetHmPrometheusInstanceCntOk returns a tuple with the HmPrometheusInstanceCnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetHmPrometheusInstanceCntOk() (*float32, bool) {
	if o == nil || IsNil(o.HmPrometheusInstanceCnt) {
		return nil, false
	}
	return o.HmPrometheusInstanceCnt, true
}

// HasHmPrometheusInstanceCnt returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasHmPrometheusInstanceCnt() bool {
	if o != nil && !IsNil(o.HmPrometheusInstanceCnt) {
		return true
	}

	return false
}

// SetHmPrometheusInstanceCnt gets a reference to the given float32 and assigns it to the HmPrometheusInstanceCnt field.
func (o *FormattedApiOrg) SetHmPrometheusInstanceCnt(v float32) {
	o.HmPrometheusInstanceCnt = &v
}

// GetAwsMarketplaceSupport returns the AwsMarketplaceSupport field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetAwsMarketplaceSupport() float32 {
	if o == nil || IsNil(o.AwsMarketplaceSupport) {
		var ret float32
		return ret
	}
	return *o.AwsMarketplaceSupport
}

// GetAwsMarketplaceSupportOk returns a tuple with the AwsMarketplaceSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetAwsMarketplaceSupportOk() (*float32, bool) {
	if o == nil || IsNil(o.AwsMarketplaceSupport) {
		return nil, false
	}
	return o.AwsMarketplaceSupport, true
}

// HasAwsMarketplaceSupport returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasAwsMarketplaceSupport() bool {
	if o != nil && !IsNil(o.AwsMarketplaceSupport) {
		return true
	}

	return false
}

// SetAwsMarketplaceSupport gets a reference to the given float32 and assigns it to the AwsMarketplaceSupport field.
func (o *FormattedApiOrg) SetAwsMarketplaceSupport(v float32) {
	o.AwsMarketplaceSupport = &v
}

// GetTrialStartDate returns the TrialStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetTrialStartDate() string {
	if o == nil || IsNil(o.TrialStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.TrialStartDate.Get()
}

// GetTrialStartDateOk returns a tuple with the TrialStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetTrialStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialStartDate.Get(), o.TrialStartDate.IsSet()
}

// HasTrialStartDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTrialStartDate() bool {
	if o != nil && o.TrialStartDate.IsSet() {
		return true
	}

	return false
}

// SetTrialStartDate gets a reference to the given NullableString and assigns it to the TrialStartDate field.
func (o *FormattedApiOrg) SetTrialStartDate(v string) {
	o.TrialStartDate.Set(&v)
}

// SetTrialStartDateNil sets the value for TrialStartDate to be an explicit nil
func (o *FormattedApiOrg) SetTrialStartDateNil() {
	o.TrialStartDate.Set(nil)
}

// UnsetTrialStartDate ensures that no value is present for TrialStartDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetTrialStartDate() {
	o.TrialStartDate.Unset()
}

// GetTrialEndDate returns the TrialEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetTrialEndDate() string {
	if o == nil || IsNil(o.TrialEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.TrialEndDate.Get()
}

// GetTrialEndDateOk returns a tuple with the TrialEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetTrialEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialEndDate.Get(), o.TrialEndDate.IsSet()
}

// HasTrialEndDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTrialEndDate() bool {
	if o != nil && o.TrialEndDate.IsSet() {
		return true
	}

	return false
}

// SetTrialEndDate gets a reference to the given NullableString and assigns it to the TrialEndDate field.
func (o *FormattedApiOrg) SetTrialEndDate(v string) {
	o.TrialEndDate.Set(&v)
}

// SetTrialEndDateNil sets the value for TrialEndDate to be an explicit nil
func (o *FormattedApiOrg) SetTrialEndDateNil() {
	o.TrialEndDate.Set(nil)
}

// UnsetTrialEndDate ensures that no value is present for TrialEndDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetTrialEndDate() {
	o.TrialEndDate.Unset()
}

// GetTrialLengthDays returns the TrialLengthDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetTrialLengthDays() float32 {
	if o == nil || IsNil(o.TrialLengthDays.Get()) {
		var ret float32
		return ret
	}
	return *o.TrialLengthDays.Get()
}

// GetTrialLengthDaysOk returns a tuple with the TrialLengthDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetTrialLengthDaysOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialLengthDays.Get(), o.TrialLengthDays.IsSet()
}

// HasTrialLengthDays returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTrialLengthDays() bool {
	if o != nil && o.TrialLengthDays.IsSet() {
		return true
	}

	return false
}

// SetTrialLengthDays gets a reference to the given NullableFloat32 and assigns it to the TrialLengthDays field.
func (o *FormattedApiOrg) SetTrialLengthDays(v float32) {
	o.TrialLengthDays.Set(&v)
}

// SetTrialLengthDaysNil sets the value for TrialLengthDays to be an explicit nil
func (o *FormattedApiOrg) SetTrialLengthDaysNil() {
	o.TrialLengthDays.Set(nil)
}

// UnsetTrialLengthDays ensures that no value is present for TrialLengthDays, not even an explicit nil
func (o *FormattedApiOrg) UnsetTrialLengthDays() {
	o.TrialLengthDays.Unset()
}

// GetTrialNoticeDate returns the TrialNoticeDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetTrialNoticeDate() string {
	if o == nil || IsNil(o.TrialNoticeDate.Get()) {
		var ret string
		return ret
	}
	return *o.TrialNoticeDate.Get()
}

// GetTrialNoticeDateOk returns a tuple with the TrialNoticeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetTrialNoticeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialNoticeDate.Get(), o.TrialNoticeDate.IsSet()
}

// HasTrialNoticeDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasTrialNoticeDate() bool {
	if o != nil && o.TrialNoticeDate.IsSet() {
		return true
	}

	return false
}

// SetTrialNoticeDate gets a reference to the given NullableString and assigns it to the TrialNoticeDate field.
func (o *FormattedApiOrg) SetTrialNoticeDate(v string) {
	o.TrialNoticeDate.Set(&v)
}

// SetTrialNoticeDateNil sets the value for TrialNoticeDate to be an explicit nil
func (o *FormattedApiOrg) SetTrialNoticeDateNil() {
	o.TrialNoticeDate.Set(nil)
}

// UnsetTrialNoticeDate ensures that no value is present for TrialNoticeDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetTrialNoticeDate() {
	o.TrialNoticeDate.Unset()
}

// GetCancellationDate returns the CancellationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiOrg) GetCancellationDate() string {
	if o == nil || IsNil(o.CancellationDate.Get()) {
		var ret string
		return ret
	}
	return *o.CancellationDate.Get()
}

// GetCancellationDateOk returns a tuple with the CancellationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiOrg) GetCancellationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancellationDate.Get(), o.CancellationDate.IsSet()
}

// HasCancellationDate returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasCancellationDate() bool {
	if o != nil && o.CancellationDate.IsSet() {
		return true
	}

	return false
}

// SetCancellationDate gets a reference to the given NullableString and assigns it to the CancellationDate field.
func (o *FormattedApiOrg) SetCancellationDate(v string) {
	o.CancellationDate.Set(&v)
}

// SetCancellationDateNil sets the value for CancellationDate to be an explicit nil
func (o *FormattedApiOrg) SetCancellationDateNil() {
	o.CancellationDate.Set(nil)
}

// UnsetCancellationDate ensures that no value is present for CancellationDate, not even an explicit nil
func (o *FormattedApiOrg) UnsetCancellationDate() {
	o.CancellationDate.Unset()
}

// GetRetainedStackId returns the RetainedStackId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetRetainedStackId() float32 {
	if o == nil || IsNil(o.RetainedStackId) {
		var ret float32
		return ret
	}
	return *o.RetainedStackId
}

// GetRetainedStackIdOk returns a tuple with the RetainedStackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetRetainedStackIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RetainedStackId) {
		return nil, false
	}
	return o.RetainedStackId, true
}

// HasRetainedStackId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasRetainedStackId() bool {
	if o != nil && !IsNil(o.RetainedStackId) {
		return true
	}

	return false
}

// SetRetainedStackId gets a reference to the given float32 and assigns it to the RetainedStackId field.
func (o *FormattedApiOrg) SetRetainedStackId(v float32) {
	o.RetainedStackId = &v
}

// GetPluginSignatureType returns the PluginSignatureType field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetPluginSignatureType() string {
	if o == nil || IsNil(o.PluginSignatureType) {
		var ret string
		return ret
	}
	return *o.PluginSignatureType
}

// GetPluginSignatureTypeOk returns a tuple with the PluginSignatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetPluginSignatureTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PluginSignatureType) {
		return nil, false
	}
	return o.PluginSignatureType, true
}

// HasPluginSignatureType returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasPluginSignatureType() bool {
	if o != nil && !IsNil(o.PluginSignatureType) {
		return true
	}

	return false
}

// SetPluginSignatureType gets a reference to the given string and assigns it to the PluginSignatureType field.
func (o *FormattedApiOrg) SetPluginSignatureType(v string) {
	o.PluginSignatureType = &v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetContractType() string {
	if o == nil || IsNil(o.ContractType) {
		var ret string
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetContractTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given string and assigns it to the ContractType field.
func (o *FormattedApiOrg) SetContractType(v string) {
	o.ContractType = &v
}

// GetContractTypeId returns the ContractTypeId field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetContractTypeId() float32 {
	if o == nil || IsNil(o.ContractTypeId) {
		var ret float32
		return ret
	}
	return *o.ContractTypeId
}

// GetContractTypeIdOk returns a tuple with the ContractTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetContractTypeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ContractTypeId) {
		return nil, false
	}
	return o.ContractTypeId, true
}

// HasContractTypeId returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasContractTypeId() bool {
	if o != nil && !IsNil(o.ContractTypeId) {
		return true
	}

	return false
}

// SetContractTypeId gets a reference to the given float32 and assigns it to the ContractTypeId field.
func (o *FormattedApiOrg) SetContractTypeId(v float32) {
	o.ContractTypeId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetLinks() []LinksInner1 {
	if o == nil || IsNil(o.Links) {
		var ret []LinksInner1
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetLinksOk() ([]LinksInner1, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinksInner1 and assigns it to the Links field.
func (o *FormattedApiOrg) SetLinks(v []LinksInner1) {
	o.Links = v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *FormattedApiOrg) GetSubscriptions() Subscriptions {
	if o == nil || IsNil(o.Subscriptions) {
		var ret Subscriptions
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiOrg) GetSubscriptionsOk() (*Subscriptions, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *FormattedApiOrg) HasSubscriptions() bool {
	if o != nil && !IsNil(o.Subscriptions) {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given Subscriptions and assigns it to the Subscriptions field.
func (o *FormattedApiOrg) SetSubscriptions(v Subscriptions) {
	o.Subscriptions = &v
}

func (o FormattedApiOrg) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormattedApiOrg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.AccountManagerId) {
		toSerialize["accountManagerId"] = o.AccountManagerId
	}
	if !IsNil(o.AccountManagerUsername) {
		toSerialize["accountManagerUsername"] = o.AccountManagerUsername
	}
	if !IsNil(o.AccountManagerName) {
		toSerialize["accountManagerName"] = o.AccountManagerName
	}
	if !IsNil(o.AwsCustomerId) {
		toSerialize["awsCustomerId"] = o.AwsCustomerId
	}
	if !IsNil(o.AccountOwnerId) {
		toSerialize["accountOwnerId"] = o.AccountOwnerId
	}
	if !IsNil(o.AccountOwnerUsername) {
		toSerialize["accountOwnerUsername"] = o.AccountOwnerUsername
	}
	if !IsNil(o.AccountOwnerName) {
		toSerialize["accountOwnerName"] = o.AccountOwnerName
	}
	if o.HmBillingStartDate.IsSet() {
		toSerialize["hmBillingStartDate"] = o.HmBillingStartDate.Get()
	}
	if o.HmBillingEndDate.IsSet() {
		toSerialize["hmBillingEndDate"] = o.HmBillingEndDate.Get()
	}
	if o.HmBilledToDate.IsSet() {
		toSerialize["hmBilledToDate"] = o.HmBilledToDate.Get()
	}
	if o.HmOverageWarnDate.IsSet() {
		toSerialize["hmOverageWarnDate"] = o.HmOverageWarnDate.Get()
	}
	if !IsNil(o.HmOverageAmount) {
		toSerialize["hmOverageAmount"] = o.HmOverageAmount
	}
	if !IsNil(o.HmCurrentPrometheusUsage) {
		toSerialize["hmCurrentPrometheusUsage"] = o.HmCurrentPrometheusUsage
	}
	if !IsNil(o.HmCurrentGraphiteUsage) {
		toSerialize["hmCurrentGraphiteUsage"] = o.HmCurrentGraphiteUsage
	}
	if o.HlBillingStartDate.IsSet() {
		toSerialize["hlBillingStartDate"] = o.HlBillingStartDate.Get()
	}
	if o.HlBillingEndDate.IsSet() {
		toSerialize["hlBillingEndDate"] = o.HlBillingEndDate.Get()
	}
	if o.HlBilledToDate.IsSet() {
		toSerialize["hlBilledToDate"] = o.HlBilledToDate.Get()
	}
	if o.HlOverageWarnDate.IsSet() {
		toSerialize["hlOverageWarnDate"] = o.HlOverageWarnDate.Get()
	}
	if !IsNil(o.HlOverageAmount) {
		toSerialize["hlOverageAmount"] = o.HlOverageAmount
	}
	if !IsNil(o.HlCurrentUsage) {
		toSerialize["hlCurrentUsage"] = o.HlCurrentUsage
	}
	if o.HgBillingStartDate.IsSet() {
		toSerialize["hgBillingStartDate"] = o.HgBillingStartDate.Get()
	}
	if o.HgBillingEndDate.IsSet() {
		toSerialize["hgBillingEndDate"] = o.HgBillingEndDate.Get()
	}
	if o.HgBilledToDate.IsSet() {
		toSerialize["hgBilledToDate"] = o.HgBilledToDate.Get()
	}
	if o.HgOverageWarnDate.IsSet() {
		toSerialize["hgOverageWarnDate"] = o.HgOverageWarnDate.Get()
	}
	if !IsNil(o.HgOverageAmount) {
		toSerialize["hgOverageAmount"] = o.HgOverageAmount
	}
	if !IsNil(o.HgActiveUsers) {
		toSerialize["hgActiveUsers"] = o.HgActiveUsers
	}
	if !IsNil(o.HgDatasourceCnts) {
		toSerialize["hgDatasourceCnts"] = o.HgDatasourceCnts
	}
	if !IsNil(o.HgIntegrationCnts) {
		toSerialize["hgIntegrationCnts"] = o.HgIntegrationCnts
	}
	if o.HmGraphiteBillingStartDate.IsSet() {
		toSerialize["hmGraphiteBillingStartDate"] = o.HmGraphiteBillingStartDate.Get()
	}
	if o.HmGraphiteBillingEndDate.IsSet() {
		toSerialize["hmGraphiteBillingEndDate"] = o.HmGraphiteBillingEndDate.Get()
	}
	if o.HmGraphiteBilledToDate.IsSet() {
		toSerialize["hmGraphiteBilledToDate"] = o.HmGraphiteBilledToDate.Get()
	}
	if o.HmGraphiteOverageWarnDate.IsSet() {
		toSerialize["hmGraphiteOverageWarnDate"] = o.HmGraphiteOverageWarnDate.Get()
	}
	if !IsNil(o.HmGraphiteCurrentUsage) {
		toSerialize["hmGraphiteCurrentUsage"] = o.HmGraphiteCurrentUsage
	}
	if !IsNil(o.HmGraphiteOverageAmount) {
		toSerialize["hmGraphiteOverageAmount"] = o.HmGraphiteOverageAmount
	}
	if o.HlRetentionBillingStartDate.IsSet() {
		toSerialize["hlRetentionBillingStartDate"] = o.HlRetentionBillingStartDate.Get()
	}
	if o.HlRetentionBillingEndDate.IsSet() {
		toSerialize["hlRetentionBillingEndDate"] = o.HlRetentionBillingEndDate.Get()
	}
	if o.HlRetentionBilledToDate.IsSet() {
		toSerialize["hlRetentionBilledToDate"] = o.HlRetentionBilledToDate.Get()
	}
	if o.HlRetentionOverageWarnDate.IsSet() {
		toSerialize["hlRetentionOverageWarnDate"] = o.HlRetentionOverageWarnDate.Get()
	}
	if !IsNil(o.HlRetentionCurrentUsage) {
		toSerialize["hlRetentionCurrentUsage"] = o.HlRetentionCurrentUsage
	}
	if !IsNil(o.HlRetentionOverageAmount) {
		toSerialize["hlRetentionOverageAmount"] = o.HlRetentionOverageAmount
	}
	if o.HtBillingStartDate.IsSet() {
		toSerialize["htBillingStartDate"] = o.HtBillingStartDate.Get()
	}
	if o.HtBillingEndDate.IsSet() {
		toSerialize["htBillingEndDate"] = o.HtBillingEndDate.Get()
	}
	if o.HtBilledToDate.IsSet() {
		toSerialize["htBilledToDate"] = o.HtBilledToDate.Get()
	}
	if o.HtOverageWarnDate.IsSet() {
		toSerialize["htOverageWarnDate"] = o.HtOverageWarnDate.Get()
	}
	if !IsNil(o.HtCurrentUsage) {
		toSerialize["htCurrentUsage"] = o.HtCurrentUsage
	}
	if !IsNil(o.HtOverageAmount) {
		toSerialize["htOverageAmount"] = o.HtOverageAmount
	}
	if o.IrmBillingStartDate.IsSet() {
		toSerialize["irmBillingStartDate"] = o.IrmBillingStartDate.Get()
	}
	if o.IrmBillingEndDate.IsSet() {
		toSerialize["irmBillingEndDate"] = o.IrmBillingEndDate.Get()
	}
	if o.IrmBilledToDate.IsSet() {
		toSerialize["irmBilledToDate"] = o.IrmBilledToDate.Get()
	}
	if o.IrmOverageWarnDate.IsSet() {
		toSerialize["irmOverageWarnDate"] = o.IrmOverageWarnDate.Get()
	}
	if !IsNil(o.IrmCurrentUsage) {
		toSerialize["irmCurrentUsage"] = o.IrmCurrentUsage
	}
	if !IsNil(o.IrmOverageAmount) {
		toSerialize["irmOverageAmount"] = o.IrmOverageAmount
	}
	if o.HpBillingStartDate.IsSet() {
		toSerialize["hpBillingStartDate"] = o.HpBillingStartDate.Get()
	}
	if o.HpBillingEndDate.IsSet() {
		toSerialize["hpBillingEndDate"] = o.HpBillingEndDate.Get()
	}
	if o.HpBilledToDate.IsSet() {
		toSerialize["hpBilledToDate"] = o.HpBilledToDate.Get()
	}
	if o.HpOverageWarnDate.IsSet() {
		toSerialize["hpOverageWarnDate"] = o.HpOverageWarnDate.Get()
	}
	if !IsNil(o.HpCurrentUsage) {
		toSerialize["hpCurrentUsage"] = o.HpCurrentUsage
	}
	if !IsNil(o.HpOverageAmount) {
		toSerialize["hpOverageAmount"] = o.HpOverageAmount
	}
	if o.K6VuhBillingStartDate.IsSet() {
		toSerialize["k6VuhBillingStartDate"] = o.K6VuhBillingStartDate.Get()
	}
	if o.K6VuhBillingEndDate.IsSet() {
		toSerialize["k6VuhBillingEndDate"] = o.K6VuhBillingEndDate.Get()
	}
	if o.K6VuhBilledToDate.IsSet() {
		toSerialize["k6VuhBilledToDate"] = o.K6VuhBilledToDate.Get()
	}
	if o.K6VuhOverageWarnDate.IsSet() {
		toSerialize["k6VuhOverageWarnDate"] = o.K6VuhOverageWarnDate.Get()
	}
	if !IsNil(o.K6VuhCurrentUsage) {
		toSerialize["k6VuhCurrentUsage"] = o.K6VuhCurrentUsage
	}
	if !IsNil(o.K6VuhOverageAmount) {
		toSerialize["k6VuhOverageAmount"] = o.K6VuhOverageAmount
	}
	if o.K6IPBillingStartDate.IsSet() {
		toSerialize["k6IPBillingStartDate"] = o.K6IPBillingStartDate.Get()
	}
	if o.K6IPBillingEndDate.IsSet() {
		toSerialize["k6IPBillingEndDate"] = o.K6IPBillingEndDate.Get()
	}
	if o.K6IPBilledToDate.IsSet() {
		toSerialize["k6IPBilledToDate"] = o.K6IPBilledToDate.Get()
	}
	if o.K6IPOverageWarnDate.IsSet() {
		toSerialize["k6IPOverageWarnDate"] = o.K6IPOverageWarnDate.Get()
	}
	if !IsNil(o.K6IPCurrentUsage) {
		toSerialize["k6IPCurrentUsage"] = o.K6IPCurrentUsage
	}
	if !IsNil(o.K6IPOverageAmount) {
		toSerialize["k6IPOverageAmount"] = o.K6IPOverageAmount
	}
	if o.FeO11yBillingStartDate.IsSet() {
		toSerialize["feO11yBillingStartDate"] = o.FeO11yBillingStartDate.Get()
	}
	if o.FeO11yBillingEndDate.IsSet() {
		toSerialize["feO11yBillingEndDate"] = o.FeO11yBillingEndDate.Get()
	}
	if o.FeO11yBilledToDate.IsSet() {
		toSerialize["feO11yBilledToDate"] = o.FeO11yBilledToDate.Get()
	}
	if o.FeO11yOverageWarnDate.IsSet() {
		toSerialize["feO11yOverageWarnDate"] = o.FeO11yOverageWarnDate.Get()
	}
	if !IsNil(o.FeO11yCurrentUsage) {
		toSerialize["feO11yCurrentUsage"] = o.FeO11yCurrentUsage
	}
	if !IsNil(o.FeO11yOverageAmount) {
		toSerialize["feO11yOverageAmount"] = o.FeO11yOverageAmount
	}
	if o.GeUsersBillingStartDate.IsSet() {
		toSerialize["geUsersBillingStartDate"] = o.GeUsersBillingStartDate.Get()
	}
	if o.GeUsersBillingEndDate.IsSet() {
		toSerialize["geUsersBillingEndDate"] = o.GeUsersBillingEndDate.Get()
	}
	if o.GeUsersBilledToDate.IsSet() {
		toSerialize["geUsersBilledToDate"] = o.GeUsersBilledToDate.Get()
	}
	if o.GeUsersOverageWarnDate.IsSet() {
		toSerialize["geUsersOverageWarnDate"] = o.GeUsersOverageWarnDate.Get()
	}
	if !IsNil(o.GeUsersCurrentUsage) {
		toSerialize["geUsersCurrentUsage"] = o.GeUsersCurrentUsage
	}
	if !IsNil(o.GeUsersOverageAmount) {
		toSerialize["geUsersOverageAmount"] = o.GeUsersOverageAmount
	}
	if o.GeInstancesBillingStartDate.IsSet() {
		toSerialize["geInstancesBillingStartDate"] = o.GeInstancesBillingStartDate.Get()
	}
	if o.GeInstancesBillingEndDate.IsSet() {
		toSerialize["geInstancesBillingEndDate"] = o.GeInstancesBillingEndDate.Get()
	}
	if o.GeInstancesBilledToDate.IsSet() {
		toSerialize["geInstancesBilledToDate"] = o.GeInstancesBilledToDate.Get()
	}
	if o.GeInstancesOverageWarnDate.IsSet() {
		toSerialize["geInstancesOverageWarnDate"] = o.GeInstancesOverageWarnDate.Get()
	}
	if !IsNil(o.GeInstancesCurrentUsage) {
		toSerialize["geInstancesCurrentUsage"] = o.GeInstancesCurrentUsage
	}
	if !IsNil(o.GeInstancesOverageAmount) {
		toSerialize["geInstancesOverageAmount"] = o.GeInstancesOverageAmount
	}
	if !IsNil(o.SalesforceAccountId) {
		toSerialize["salesforceAccountId"] = o.SalesforceAccountId
	}
	if !IsNil(o.SalesforceLeadId) {
		toSerialize["salesforceLeadId"] = o.SalesforceLeadId
	}
	if !IsNil(o.SalesforceCustomOrgId) {
		toSerialize["salesforceCustomOrgId"] = o.SalesforceCustomOrgId
	}
	if !IsNil(o.SlackSupport) {
		toSerialize["slackSupport"] = o.SlackSupport
	}
	if !IsNil(o.SlackSupportChannel) {
		toSerialize["slackSupportChannel"] = o.SlackSupportChannel
	}
	if !IsNil(o.TotalOverageAmount) {
		toSerialize["totalOverageAmount"] = o.TotalOverageAmount
	}
	if !IsNil(o.MemberCnt) {
		toSerialize["memberCnt"] = o.MemberCnt
	}
	if !IsNil(o.LicenseCnt) {
		toSerialize["licenseCnt"] = o.LicenseCnt
	}
	if !IsNil(o.LicenseConfiguredCnt) {
		toSerialize["licenseConfiguredCnt"] = o.LicenseConfiguredCnt
	}
	if !IsNil(o.LicenseUnconfiguredCnt) {
		toSerialize["licenseUnconfiguredCnt"] = o.LicenseUnconfiguredCnt
	}
	if !IsNil(o.HgInstanceCnt) {
		toSerialize["hgInstanceCnt"] = o.HgInstanceCnt
	}
	if !IsNil(o.HlInstanceCnt) {
		toSerialize["hlInstanceCnt"] = o.HlInstanceCnt
	}
	if !IsNil(o.HtInstanceCnt) {
		toSerialize["htInstanceCnt"] = o.HtInstanceCnt
	}
	if !IsNil(o.UbersmithClientId) {
		toSerialize["ubersmithClientId"] = o.UbersmithClientId
	}
	if !IsNil(o.IntacctCustomerId) {
		toSerialize["intacctCustomerId"] = o.IntacctCustomerId
	}
	if !IsNil(o.IntacctCustomerUrl) {
		toSerialize["intacctCustomerUrl"] = o.IntacctCustomerUrl
	}
	if !IsNil(o.CommittedArr) {
		toSerialize["committedArr"] = o.CommittedArr
	}
	if !IsNil(o.PrevCommittedArr) {
		toSerialize["prevCommittedArr"] = o.PrevCommittedArr
	}
	if !IsNil(o.ZendeskId) {
		toSerialize["zendeskId"] = o.ZendeskId
	}
	if o.HappinessRating.IsSet() {
		toSerialize["happinessRating"] = o.HappinessRating.Get()
	}
	if o.HappinessNote.IsSet() {
		toSerialize["happinessNote"] = o.HappinessNote.Get()
	}
	if o.HappinessReasonCode.IsSet() {
		toSerialize["happinessReasonCode"] = o.HappinessReasonCode.Get()
	}
	if o.HappinessCreatedAt.IsSet() {
		toSerialize["happinessCreatedAt"] = o.HappinessCreatedAt.Get()
	}
	if o.HappinessChangedAt.IsSet() {
		toSerialize["happinessChangedAt"] = o.HappinessChangedAt.Get()
	}
	if o.HappinessExpiredAt.IsSet() {
		toSerialize["happinessExpiredAt"] = o.HappinessExpiredAt.Get()
	}
	if o.HappinessUserName.IsSet() {
		toSerialize["happinessUserName"] = o.HappinessUserName.Get()
	}
	if o.CancellationClientNotes.IsSet() {
		toSerialize["cancellationClientNotes"] = o.CancellationClientNotes.Get()
	}
	if o.CancellationNotes.IsSet() {
		toSerialize["cancellationNotes"] = o.CancellationNotes.Get()
	}
	if !IsNil(o.CancellationReason) {
		toSerialize["cancellationReason"] = o.CancellationReason
	}
	if o.NetPromoterScore.IsSet() {
		toSerialize["netPromoterScore"] = o.NetPromoterScore.Get()
	}
	if o.HmFirstOverageDate.IsSet() {
		toSerialize["hmFirstOverageDate"] = o.HmFirstOverageDate.Get()
	}
	if o.HmFirstApproachingLimitDate.IsSet() {
		toSerialize["hmFirstApproachingLimitDate"] = o.HmFirstApproachingLimitDate.Get()
	}
	if !IsNil(o.SpendCommitCreditBalance) {
		toSerialize["spendCommitCreditBalance"] = o.SpendCommitCreditBalance
	}
	if !IsNil(o.SpendCommitCreditTotal) {
		toSerialize["spendCommitCreditTotal"] = o.SpendCommitCreditTotal
	}
	if !IsNil(o.ProjectedOverageAmount) {
		toSerialize["projectedOverageAmount"] = o.ProjectedOverageAmount
	}
	if !IsNil(o.EstimatedArr) {
		toSerialize["estimatedArr"] = o.EstimatedArr
	}
	if !IsNil(o.ReferredBy) {
		toSerialize["referredBy"] = o.ReferredBy
	}
	if !IsNil(o.K6OrgId) {
		toSerialize["k6OrgId"] = o.K6OrgId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if !IsNil(o.ChecksPerMonth) {
		toSerialize["checksPerMonth"] = o.ChecksPerMonth
	}
	if !IsNil(o.WpPlan) {
		toSerialize["wpPlan"] = o.WpPlan
	}
	if !IsNil(o.HgInstanceLimit) {
		toSerialize["hgInstanceLimit"] = o.HgInstanceLimit
	}
	if !IsNil(o.HmInstanceLimit) {
		toSerialize["hmInstanceLimit"] = o.HmInstanceLimit
	}
	if !IsNil(o.HlInstanceLimit) {
		toSerialize["hlInstanceLimit"] = o.HlInstanceLimit
	}
	if !IsNil(o.UserQuota) {
		toSerialize["userQuota"] = o.UserQuota
	}
	if !IsNil(o.SupportPlan) {
		toSerialize["supportPlan"] = o.SupportPlan
	}
	if !IsNil(o.CreditApproved) {
		toSerialize["creditApproved"] = o.CreditApproved
	}
	if o.MsaSignedAt.IsSet() {
		toSerialize["msaSignedAt"] = o.MsaSignedAt.Get()
	}
	if o.MsaSignedBy.IsSet() {
		toSerialize["msaSignedBy"] = o.MsaSignedBy.Get()
	}
	if !IsNil(o.EnterprisePlugins) {
		toSerialize["enterprisePlugins"] = o.EnterprisePlugins
	}
	if !IsNil(o.GrafanaCloud) {
		toSerialize["grafanaCloud"] = o.GrafanaCloud
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !IsNil(o.Reseller) {
		toSerialize["reseller"] = o.Reseller
	}
	if o.ResellerId.IsSet() {
		toSerialize["resellerId"] = o.ResellerId.Get()
	}
	if o.ResellerName.IsSet() {
		toSerialize["resellerName"] = o.ResellerName.Get()
	}
	if !IsNil(o.EmergencySupport) {
		toSerialize["emergencySupport"] = o.EmergencySupport
	}
	if !IsNil(o.IsContractedLicenseAutoProvision) {
		toSerialize["isContractedLicenseAutoProvision"] = o.IsContractedLicenseAutoProvision
	}
	if !IsNil(o.GcloudMonthlyCost) {
		toSerialize["gcloudMonthlyCost"] = o.GcloudMonthlyCost
	}
	if !IsNil(o.HgIncludedUsers) {
		toSerialize["hgIncludedUsers"] = o.HgIncludedUsers
	}
	if !IsNil(o.HgTier1Rate) {
		toSerialize["hgTier1Rate"] = o.HgTier1Rate
	}
	if !IsNil(o.HgTier2Min) {
		toSerialize["hgTier2Min"] = o.HgTier2Min
	}
	if !IsNil(o.HgTier2Rate) {
		toSerialize["hgTier2Rate"] = o.HgTier2Rate
	}
	if !IsNil(o.HgTier3Min) {
		toSerialize["hgTier3Min"] = o.HgTier3Min
	}
	if !IsNil(o.HgTier3Rate) {
		toSerialize["hgTier3Rate"] = o.HgTier3Rate
	}
	if !IsNil(o.HgUsage) {
		toSerialize["hgUsage"] = o.HgUsage
	}
	if !IsNil(o.HgCurrentActiveUsers) {
		toSerialize["hgCurrentActiveUsers"] = o.HgCurrentActiveUsers
	}
	if !IsNil(o.HgGrafanaUsage) {
		toSerialize["hgGrafanaUsage"] = o.HgGrafanaUsage
	}
	if !IsNil(o.HgOnCallUsage) {
		toSerialize["hgOnCallUsage"] = o.HgOnCallUsage
	}
	if !IsNil(o.HmIncludedSeries) {
		toSerialize["hmIncludedSeries"] = o.HmIncludedSeries
	}
	if !IsNil(o.HmAverageDpm) {
		toSerialize["hmAverageDpm"] = o.HmAverageDpm
	}
	if !IsNil(o.HmTier1Rate) {
		toSerialize["hmTier1Rate"] = o.HmTier1Rate
	}
	if !IsNil(o.HmTier2Min) {
		toSerialize["hmTier2Min"] = o.HmTier2Min
	}
	if !IsNil(o.HmTier2Rate) {
		toSerialize["hmTier2Rate"] = o.HmTier2Rate
	}
	if !IsNil(o.HmTier3Min) {
		toSerialize["hmTier3Min"] = o.HmTier3Min
	}
	if !IsNil(o.HmTier3Rate) {
		toSerialize["hmTier3Rate"] = o.HmTier3Rate
	}
	if !IsNil(o.HmUsage) {
		toSerialize["hmUsage"] = o.HmUsage
	}
	if !IsNil(o.HmCurrentUsage) {
		toSerialize["hmCurrentUsage"] = o.HmCurrentUsage
	}
	if !IsNil(o.HmGraphiteIncludedUsage) {
		toSerialize["hmGraphiteIncludedUsage"] = o.HmGraphiteIncludedUsage
	}
	if !IsNil(o.HmGraphiteTier1Rate) {
		toSerialize["hmGraphiteTier1Rate"] = o.HmGraphiteTier1Rate
	}
	if !IsNil(o.HmGraphiteTier2Min) {
		toSerialize["hmGraphiteTier2Min"] = o.HmGraphiteTier2Min
	}
	if !IsNil(o.HmGraphiteTier2Rate) {
		toSerialize["hmGraphiteTier2Rate"] = o.HmGraphiteTier2Rate
	}
	if !IsNil(o.HmGraphiteTier3Min) {
		toSerialize["hmGraphiteTier3Min"] = o.HmGraphiteTier3Min
	}
	if !IsNil(o.HmGraphiteTier3Rate) {
		toSerialize["hmGraphiteTier3Rate"] = o.HmGraphiteTier3Rate
	}
	if !IsNil(o.HmGraphiteUsage) {
		toSerialize["hmGraphiteUsage"] = o.HmGraphiteUsage
	}
	if !IsNil(o.HlIncludedUsage) {
		toSerialize["hlIncludedUsage"] = o.HlIncludedUsage
	}
	if !IsNil(o.HlQueryToIngestRatio) {
		toSerialize["hlQueryToIngestRatio"] = o.HlQueryToIngestRatio
	}
	if !IsNil(o.HlTier1Rate) {
		toSerialize["hlTier1Rate"] = o.HlTier1Rate
	}
	if !IsNil(o.HlTier2Min) {
		toSerialize["hlTier2Min"] = o.HlTier2Min
	}
	if !IsNil(o.HlTier2Rate) {
		toSerialize["hlTier2Rate"] = o.HlTier2Rate
	}
	if !IsNil(o.HlTier3Min) {
		toSerialize["hlTier3Min"] = o.HlTier3Min
	}
	if !IsNil(o.HlTier3Rate) {
		toSerialize["hlTier3Rate"] = o.HlTier3Rate
	}
	if !IsNil(o.HlUsage) {
		toSerialize["hlUsage"] = o.HlUsage
	}
	if !IsNil(o.HlRetentionIncludedUsage) {
		toSerialize["hlRetentionIncludedUsage"] = o.HlRetentionIncludedUsage
	}
	if !IsNil(o.HlRetentionTier1Rate) {
		toSerialize["hlRetentionTier1Rate"] = o.HlRetentionTier1Rate
	}
	if !IsNil(o.HlRetentionTier2Min) {
		toSerialize["hlRetentionTier2Min"] = o.HlRetentionTier2Min
	}
	if !IsNil(o.HlRetentionTier2Rate) {
		toSerialize["hlRetentionTier2Rate"] = o.HlRetentionTier2Rate
	}
	if !IsNil(o.HlRetentionTier3Min) {
		toSerialize["hlRetentionTier3Min"] = o.HlRetentionTier3Min
	}
	if !IsNil(o.HlRetentionTier3Rate) {
		toSerialize["hlRetentionTier3Rate"] = o.HlRetentionTier3Rate
	}
	if !IsNil(o.HlRetentionUsage) {
		toSerialize["hlRetentionUsage"] = o.HlRetentionUsage
	}
	if !IsNil(o.HtIncludedUsage) {
		toSerialize["htIncludedUsage"] = o.HtIncludedUsage
	}
	if !IsNil(o.HtTier1Rate) {
		toSerialize["htTier1Rate"] = o.HtTier1Rate
	}
	if !IsNil(o.HtTier2Min) {
		toSerialize["htTier2Min"] = o.HtTier2Min
	}
	if !IsNil(o.HtTier2Rate) {
		toSerialize["htTier2Rate"] = o.HtTier2Rate
	}
	if !IsNil(o.HtTier3Min) {
		toSerialize["htTier3Min"] = o.HtTier3Min
	}
	if !IsNil(o.HtTier3Rate) {
		toSerialize["htTier3Rate"] = o.HtTier3Rate
	}
	if !IsNil(o.HtUsage) {
		toSerialize["htUsage"] = o.HtUsage
	}
	if !IsNil(o.HpIncludedUsage) {
		toSerialize["hpIncludedUsage"] = o.HpIncludedUsage
	}
	if !IsNil(o.HpTier1Rate) {
		toSerialize["hpTier1Rate"] = o.HpTier1Rate
	}
	if !IsNil(o.HpTier2Min) {
		toSerialize["hpTier2Min"] = o.HpTier2Min
	}
	if !IsNil(o.HpTier2Rate) {
		toSerialize["hpTier2Rate"] = o.HpTier2Rate
	}
	if !IsNil(o.HpTier3Min) {
		toSerialize["hpTier3Min"] = o.HpTier3Min
	}
	if !IsNil(o.HpTier3Rate) {
		toSerialize["hpTier3Rate"] = o.HpTier3Rate
	}
	if !IsNil(o.HpUsage) {
		toSerialize["hpUsage"] = o.HpUsage
	}
	if !IsNil(o.IrmStatus) {
		toSerialize["irmStatus"] = o.IrmStatus
	}
	if !IsNil(o.IrmIncludedUsage) {
		toSerialize["irmIncludedUsage"] = o.IrmIncludedUsage
	}
	if !IsNil(o.IrmTier1Rate) {
		toSerialize["irmTier1Rate"] = o.IrmTier1Rate
	}
	if !IsNil(o.IrmTier2Min) {
		toSerialize["irmTier2Min"] = o.IrmTier2Min
	}
	if !IsNil(o.IrmTier2Rate) {
		toSerialize["irmTier2Rate"] = o.IrmTier2Rate
	}
	if !IsNil(o.IrmTier3Min) {
		toSerialize["irmTier3Min"] = o.IrmTier3Min
	}
	if !IsNil(o.IrmTier3Rate) {
		toSerialize["irmTier3Rate"] = o.IrmTier3Rate
	}
	if !IsNil(o.IrmUsage) {
		toSerialize["irmUsage"] = o.IrmUsage
	}
	if !IsNil(o.K6VuhIncludedUsage) {
		toSerialize["k6VuhIncludedUsage"] = o.K6VuhIncludedUsage
	}
	if !IsNil(o.K6VuhTier1Rate) {
		toSerialize["k6VuhTier1Rate"] = o.K6VuhTier1Rate
	}
	if !IsNil(o.K6VuhTier2Min) {
		toSerialize["k6VuhTier2Min"] = o.K6VuhTier2Min
	}
	if !IsNil(o.K6VuhTier2Rate) {
		toSerialize["k6VuhTier2Rate"] = o.K6VuhTier2Rate
	}
	if !IsNil(o.K6VuhTier3Min) {
		toSerialize["k6VuhTier3Min"] = o.K6VuhTier3Min
	}
	if !IsNil(o.K6VuhTier3Rate) {
		toSerialize["k6VuhTier3Rate"] = o.K6VuhTier3Rate
	}
	if !IsNil(o.K6VuhUnits) {
		toSerialize["k6VuhUnits"] = o.K6VuhUnits
	}
	if !IsNil(o.K6VuhUsage) {
		toSerialize["k6VuhUsage"] = o.K6VuhUsage
	}
	if !IsNil(o.K6IPIncludedUsage) {
		toSerialize["k6IPIncludedUsage"] = o.K6IPIncludedUsage
	}
	if !IsNil(o.K6IPTier1Rate) {
		toSerialize["k6IPTier1Rate"] = o.K6IPTier1Rate
	}
	if !IsNil(o.K6IPTier2Min) {
		toSerialize["k6IPTier2Min"] = o.K6IPTier2Min
	}
	if !IsNil(o.K6IPTier2Rate) {
		toSerialize["k6IPTier2Rate"] = o.K6IPTier2Rate
	}
	if !IsNil(o.K6IPTier3Min) {
		toSerialize["k6IPTier3Min"] = o.K6IPTier3Min
	}
	if !IsNil(o.K6IPTier3Rate) {
		toSerialize["k6IPTier3Rate"] = o.K6IPTier3Rate
	}
	if !IsNil(o.K6IPUsage) {
		toSerialize["k6IPUsage"] = o.K6IPUsage
	}
	if !IsNil(o.FeO11yIncludedUsage) {
		toSerialize["feO11yIncludedUsage"] = o.FeO11yIncludedUsage
	}
	if !IsNil(o.FeO11yTier1Rate) {
		toSerialize["feO11yTier1Rate"] = o.FeO11yTier1Rate
	}
	if !IsNil(o.FeO11yTier2Min) {
		toSerialize["feO11yTier2Min"] = o.FeO11yTier2Min
	}
	if !IsNil(o.FeO11yTier2Rate) {
		toSerialize["feO11yTier2Rate"] = o.FeO11yTier2Rate
	}
	if !IsNil(o.FeO11yTier3Min) {
		toSerialize["feO11yTier3Min"] = o.FeO11yTier3Min
	}
	if !IsNil(o.FeO11yTier3Rate) {
		toSerialize["feO11yTier3Rate"] = o.FeO11yTier3Rate
	}
	if !IsNil(o.FeO11yUnits) {
		toSerialize["feO11yUnits"] = o.FeO11yUnits
	}
	if !IsNil(o.FeO11yUsage) {
		toSerialize["feO11yUsage"] = o.FeO11yUsage
	}
	if !IsNil(o.GeUsersIncludedUsage) {
		toSerialize["geUsersIncludedUsage"] = o.GeUsersIncludedUsage
	}
	if !IsNil(o.GeUsersTier1Rate) {
		toSerialize["geUsersTier1Rate"] = o.GeUsersTier1Rate
	}
	if !IsNil(o.GeUsersTier2Min) {
		toSerialize["geUsersTier2Min"] = o.GeUsersTier2Min
	}
	if !IsNil(o.GeUsersTier2Rate) {
		toSerialize["geUsersTier2Rate"] = o.GeUsersTier2Rate
	}
	if !IsNil(o.GeUsersTier3Min) {
		toSerialize["geUsersTier3Min"] = o.GeUsersTier3Min
	}
	if !IsNil(o.GeUsersTier3Rate) {
		toSerialize["geUsersTier3Rate"] = o.GeUsersTier3Rate
	}
	if !IsNil(o.GeUsersUsage) {
		toSerialize["geUsersUsage"] = o.GeUsersUsage
	}
	if !IsNil(o.GeInstancesIncludedUsage) {
		toSerialize["geInstancesIncludedUsage"] = o.GeInstancesIncludedUsage
	}
	if !IsNil(o.GeInstancesTier1Rate) {
		toSerialize["geInstancesTier1Rate"] = o.GeInstancesTier1Rate
	}
	if !IsNil(o.GeInstancesTier2Min) {
		toSerialize["geInstancesTier2Min"] = o.GeInstancesTier2Min
	}
	if !IsNil(o.GeInstancesTier2Rate) {
		toSerialize["geInstancesTier2Rate"] = o.GeInstancesTier2Rate
	}
	if !IsNil(o.GeInstancesTier3Min) {
		toSerialize["geInstancesTier3Min"] = o.GeInstancesTier3Min
	}
	if !IsNil(o.GeInstancesTier3Rate) {
		toSerialize["geInstancesTier3Rate"] = o.GeInstancesTier3Rate
	}
	if !IsNil(o.GeInstancesUsage) {
		toSerialize["geInstancesUsage"] = o.GeInstancesUsage
	}
	if o.HgPluginUsersOverageRate.IsSet() {
		toSerialize["hgPluginUsersOverageRate"] = o.HgPluginUsersOverageRate.Get()
	}
	if o.HgPluginUsersIncludedUsage.IsSet() {
		toSerialize["hgPluginUsersIncludedUsage"] = o.HgPluginUsersIncludedUsage.Get()
	}
	if !IsNil(o.HmGraphiteInstanceCnt) {
		toSerialize["hmGraphiteInstanceCnt"] = o.HmGraphiteInstanceCnt
	}
	if !IsNil(o.HmPrometheusInstanceCnt) {
		toSerialize["hmPrometheusInstanceCnt"] = o.HmPrometheusInstanceCnt
	}
	if !IsNil(o.AwsMarketplaceSupport) {
		toSerialize["awsMarketplaceSupport"] = o.AwsMarketplaceSupport
	}
	if o.TrialStartDate.IsSet() {
		toSerialize["trialStartDate"] = o.TrialStartDate.Get()
	}
	if o.TrialEndDate.IsSet() {
		toSerialize["trialEndDate"] = o.TrialEndDate.Get()
	}
	if o.TrialLengthDays.IsSet() {
		toSerialize["trialLengthDays"] = o.TrialLengthDays.Get()
	}
	if o.TrialNoticeDate.IsSet() {
		toSerialize["trialNoticeDate"] = o.TrialNoticeDate.Get()
	}
	if o.CancellationDate.IsSet() {
		toSerialize["cancellationDate"] = o.CancellationDate.Get()
	}
	if !IsNil(o.RetainedStackId) {
		toSerialize["retainedStackId"] = o.RetainedStackId
	}
	if !IsNil(o.PluginSignatureType) {
		toSerialize["pluginSignatureType"] = o.PluginSignatureType
	}
	if !IsNil(o.ContractType) {
		toSerialize["contractType"] = o.ContractType
	}
	if !IsNil(o.ContractTypeId) {
		toSerialize["contractTypeId"] = o.ContractTypeId
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormattedApiOrg) UnmarshalJSON(data []byte) (err error) {
	varFormattedApiOrg := _FormattedApiOrg{}

	err = json.Unmarshal(data, &varFormattedApiOrg)

	if err != nil {
		return err
	}

	*o = FormattedApiOrg(varFormattedApiOrg)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "accountManagerId")
		delete(additionalProperties, "accountManagerUsername")
		delete(additionalProperties, "accountManagerName")
		delete(additionalProperties, "awsCustomerId")
		delete(additionalProperties, "accountOwnerId")
		delete(additionalProperties, "accountOwnerUsername")
		delete(additionalProperties, "accountOwnerName")
		delete(additionalProperties, "hmBillingStartDate")
		delete(additionalProperties, "hmBillingEndDate")
		delete(additionalProperties, "hmBilledToDate")
		delete(additionalProperties, "hmOverageWarnDate")
		delete(additionalProperties, "hmOverageAmount")
		delete(additionalProperties, "hmCurrentPrometheusUsage")
		delete(additionalProperties, "hmCurrentGraphiteUsage")
		delete(additionalProperties, "hlBillingStartDate")
		delete(additionalProperties, "hlBillingEndDate")
		delete(additionalProperties, "hlBilledToDate")
		delete(additionalProperties, "hlOverageWarnDate")
		delete(additionalProperties, "hlOverageAmount")
		delete(additionalProperties, "hlCurrentUsage")
		delete(additionalProperties, "hgBillingStartDate")
		delete(additionalProperties, "hgBillingEndDate")
		delete(additionalProperties, "hgBilledToDate")
		delete(additionalProperties, "hgOverageWarnDate")
		delete(additionalProperties, "hgOverageAmount")
		delete(additionalProperties, "hgActiveUsers")
		delete(additionalProperties, "hgDatasourceCnts")
		delete(additionalProperties, "hgIntegrationCnts")
		delete(additionalProperties, "hmGraphiteBillingStartDate")
		delete(additionalProperties, "hmGraphiteBillingEndDate")
		delete(additionalProperties, "hmGraphiteBilledToDate")
		delete(additionalProperties, "hmGraphiteOverageWarnDate")
		delete(additionalProperties, "hmGraphiteCurrentUsage")
		delete(additionalProperties, "hmGraphiteOverageAmount")
		delete(additionalProperties, "hlRetentionBillingStartDate")
		delete(additionalProperties, "hlRetentionBillingEndDate")
		delete(additionalProperties, "hlRetentionBilledToDate")
		delete(additionalProperties, "hlRetentionOverageWarnDate")
		delete(additionalProperties, "hlRetentionCurrentUsage")
		delete(additionalProperties, "hlRetentionOverageAmount")
		delete(additionalProperties, "htBillingStartDate")
		delete(additionalProperties, "htBillingEndDate")
		delete(additionalProperties, "htBilledToDate")
		delete(additionalProperties, "htOverageWarnDate")
		delete(additionalProperties, "htCurrentUsage")
		delete(additionalProperties, "htOverageAmount")
		delete(additionalProperties, "irmBillingStartDate")
		delete(additionalProperties, "irmBillingEndDate")
		delete(additionalProperties, "irmBilledToDate")
		delete(additionalProperties, "irmOverageWarnDate")
		delete(additionalProperties, "irmCurrentUsage")
		delete(additionalProperties, "irmOverageAmount")
		delete(additionalProperties, "hpBillingStartDate")
		delete(additionalProperties, "hpBillingEndDate")
		delete(additionalProperties, "hpBilledToDate")
		delete(additionalProperties, "hpOverageWarnDate")
		delete(additionalProperties, "hpCurrentUsage")
		delete(additionalProperties, "hpOverageAmount")
		delete(additionalProperties, "k6VuhBillingStartDate")
		delete(additionalProperties, "k6VuhBillingEndDate")
		delete(additionalProperties, "k6VuhBilledToDate")
		delete(additionalProperties, "k6VuhOverageWarnDate")
		delete(additionalProperties, "k6VuhCurrentUsage")
		delete(additionalProperties, "k6VuhOverageAmount")
		delete(additionalProperties, "k6IPBillingStartDate")
		delete(additionalProperties, "k6IPBillingEndDate")
		delete(additionalProperties, "k6IPBilledToDate")
		delete(additionalProperties, "k6IPOverageWarnDate")
		delete(additionalProperties, "k6IPCurrentUsage")
		delete(additionalProperties, "k6IPOverageAmount")
		delete(additionalProperties, "feO11yBillingStartDate")
		delete(additionalProperties, "feO11yBillingEndDate")
		delete(additionalProperties, "feO11yBilledToDate")
		delete(additionalProperties, "feO11yOverageWarnDate")
		delete(additionalProperties, "feO11yCurrentUsage")
		delete(additionalProperties, "feO11yOverageAmount")
		delete(additionalProperties, "geUsersBillingStartDate")
		delete(additionalProperties, "geUsersBillingEndDate")
		delete(additionalProperties, "geUsersBilledToDate")
		delete(additionalProperties, "geUsersOverageWarnDate")
		delete(additionalProperties, "geUsersCurrentUsage")
		delete(additionalProperties, "geUsersOverageAmount")
		delete(additionalProperties, "geInstancesBillingStartDate")
		delete(additionalProperties, "geInstancesBillingEndDate")
		delete(additionalProperties, "geInstancesBilledToDate")
		delete(additionalProperties, "geInstancesOverageWarnDate")
		delete(additionalProperties, "geInstancesCurrentUsage")
		delete(additionalProperties, "geInstancesOverageAmount")
		delete(additionalProperties, "salesforceAccountId")
		delete(additionalProperties, "salesforceLeadId")
		delete(additionalProperties, "salesforceCustomOrgId")
		delete(additionalProperties, "slackSupport")
		delete(additionalProperties, "slackSupportChannel")
		delete(additionalProperties, "totalOverageAmount")
		delete(additionalProperties, "memberCnt")
		delete(additionalProperties, "licenseCnt")
		delete(additionalProperties, "licenseConfiguredCnt")
		delete(additionalProperties, "licenseUnconfiguredCnt")
		delete(additionalProperties, "hgInstanceCnt")
		delete(additionalProperties, "hlInstanceCnt")
		delete(additionalProperties, "htInstanceCnt")
		delete(additionalProperties, "ubersmithClientId")
		delete(additionalProperties, "intacctCustomerId")
		delete(additionalProperties, "intacctCustomerUrl")
		delete(additionalProperties, "committedArr")
		delete(additionalProperties, "prevCommittedArr")
		delete(additionalProperties, "zendeskId")
		delete(additionalProperties, "happinessRating")
		delete(additionalProperties, "happinessNote")
		delete(additionalProperties, "happinessReasonCode")
		delete(additionalProperties, "happinessCreatedAt")
		delete(additionalProperties, "happinessChangedAt")
		delete(additionalProperties, "happinessExpiredAt")
		delete(additionalProperties, "happinessUserName")
		delete(additionalProperties, "cancellationClientNotes")
		delete(additionalProperties, "cancellationNotes")
		delete(additionalProperties, "cancellationReason")
		delete(additionalProperties, "netPromoterScore")
		delete(additionalProperties, "hmFirstOverageDate")
		delete(additionalProperties, "hmFirstApproachingLimitDate")
		delete(additionalProperties, "spendCommitCreditBalance")
		delete(additionalProperties, "spendCommitCreditTotal")
		delete(additionalProperties, "projectedOverageAmount")
		delete(additionalProperties, "estimatedArr")
		delete(additionalProperties, "referredBy")
		delete(additionalProperties, "k6OrgId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "name")
		delete(additionalProperties, "url")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "updatedBy")
		delete(additionalProperties, "avatar")
		delete(additionalProperties, "checksPerMonth")
		delete(additionalProperties, "wpPlan")
		delete(additionalProperties, "hgInstanceLimit")
		delete(additionalProperties, "hmInstanceLimit")
		delete(additionalProperties, "hlInstanceLimit")
		delete(additionalProperties, "userQuota")
		delete(additionalProperties, "supportPlan")
		delete(additionalProperties, "creditApproved")
		delete(additionalProperties, "msaSignedAt")
		delete(additionalProperties, "msaSignedBy")
		delete(additionalProperties, "enterprisePlugins")
		delete(additionalProperties, "grafanaCloud")
		delete(additionalProperties, "privacy")
		delete(additionalProperties, "reseller")
		delete(additionalProperties, "resellerId")
		delete(additionalProperties, "resellerName")
		delete(additionalProperties, "emergencySupport")
		delete(additionalProperties, "isContractedLicenseAutoProvision")
		delete(additionalProperties, "gcloudMonthlyCost")
		delete(additionalProperties, "hgIncludedUsers")
		delete(additionalProperties, "hgTier1Rate")
		delete(additionalProperties, "hgTier2Min")
		delete(additionalProperties, "hgTier2Rate")
		delete(additionalProperties, "hgTier3Min")
		delete(additionalProperties, "hgTier3Rate")
		delete(additionalProperties, "hgUsage")
		delete(additionalProperties, "hgCurrentActiveUsers")
		delete(additionalProperties, "hgGrafanaUsage")
		delete(additionalProperties, "hgOnCallUsage")
		delete(additionalProperties, "hmIncludedSeries")
		delete(additionalProperties, "hmAverageDpm")
		delete(additionalProperties, "hmTier1Rate")
		delete(additionalProperties, "hmTier2Min")
		delete(additionalProperties, "hmTier2Rate")
		delete(additionalProperties, "hmTier3Min")
		delete(additionalProperties, "hmTier3Rate")
		delete(additionalProperties, "hmUsage")
		delete(additionalProperties, "hmCurrentUsage")
		delete(additionalProperties, "hmGraphiteIncludedUsage")
		delete(additionalProperties, "hmGraphiteTier1Rate")
		delete(additionalProperties, "hmGraphiteTier2Min")
		delete(additionalProperties, "hmGraphiteTier2Rate")
		delete(additionalProperties, "hmGraphiteTier3Min")
		delete(additionalProperties, "hmGraphiteTier3Rate")
		delete(additionalProperties, "hmGraphiteUsage")
		delete(additionalProperties, "hlIncludedUsage")
		delete(additionalProperties, "hlQueryToIngestRatio")
		delete(additionalProperties, "hlTier1Rate")
		delete(additionalProperties, "hlTier2Min")
		delete(additionalProperties, "hlTier2Rate")
		delete(additionalProperties, "hlTier3Min")
		delete(additionalProperties, "hlTier3Rate")
		delete(additionalProperties, "hlUsage")
		delete(additionalProperties, "hlRetentionIncludedUsage")
		delete(additionalProperties, "hlRetentionTier1Rate")
		delete(additionalProperties, "hlRetentionTier2Min")
		delete(additionalProperties, "hlRetentionTier2Rate")
		delete(additionalProperties, "hlRetentionTier3Min")
		delete(additionalProperties, "hlRetentionTier3Rate")
		delete(additionalProperties, "hlRetentionUsage")
		delete(additionalProperties, "htIncludedUsage")
		delete(additionalProperties, "htTier1Rate")
		delete(additionalProperties, "htTier2Min")
		delete(additionalProperties, "htTier2Rate")
		delete(additionalProperties, "htTier3Min")
		delete(additionalProperties, "htTier3Rate")
		delete(additionalProperties, "htUsage")
		delete(additionalProperties, "hpIncludedUsage")
		delete(additionalProperties, "hpTier1Rate")
		delete(additionalProperties, "hpTier2Min")
		delete(additionalProperties, "hpTier2Rate")
		delete(additionalProperties, "hpTier3Min")
		delete(additionalProperties, "hpTier3Rate")
		delete(additionalProperties, "hpUsage")
		delete(additionalProperties, "irmStatus")
		delete(additionalProperties, "irmIncludedUsage")
		delete(additionalProperties, "irmTier1Rate")
		delete(additionalProperties, "irmTier2Min")
		delete(additionalProperties, "irmTier2Rate")
		delete(additionalProperties, "irmTier3Min")
		delete(additionalProperties, "irmTier3Rate")
		delete(additionalProperties, "irmUsage")
		delete(additionalProperties, "k6VuhIncludedUsage")
		delete(additionalProperties, "k6VuhTier1Rate")
		delete(additionalProperties, "k6VuhTier2Min")
		delete(additionalProperties, "k6VuhTier2Rate")
		delete(additionalProperties, "k6VuhTier3Min")
		delete(additionalProperties, "k6VuhTier3Rate")
		delete(additionalProperties, "k6VuhUnits")
		delete(additionalProperties, "k6VuhUsage")
		delete(additionalProperties, "k6IPIncludedUsage")
		delete(additionalProperties, "k6IPTier1Rate")
		delete(additionalProperties, "k6IPTier2Min")
		delete(additionalProperties, "k6IPTier2Rate")
		delete(additionalProperties, "k6IPTier3Min")
		delete(additionalProperties, "k6IPTier3Rate")
		delete(additionalProperties, "k6IPUsage")
		delete(additionalProperties, "feO11yIncludedUsage")
		delete(additionalProperties, "feO11yTier1Rate")
		delete(additionalProperties, "feO11yTier2Min")
		delete(additionalProperties, "feO11yTier2Rate")
		delete(additionalProperties, "feO11yTier3Min")
		delete(additionalProperties, "feO11yTier3Rate")
		delete(additionalProperties, "feO11yUnits")
		delete(additionalProperties, "feO11yUsage")
		delete(additionalProperties, "geUsersIncludedUsage")
		delete(additionalProperties, "geUsersTier1Rate")
		delete(additionalProperties, "geUsersTier2Min")
		delete(additionalProperties, "geUsersTier2Rate")
		delete(additionalProperties, "geUsersTier3Min")
		delete(additionalProperties, "geUsersTier3Rate")
		delete(additionalProperties, "geUsersUsage")
		delete(additionalProperties, "geInstancesIncludedUsage")
		delete(additionalProperties, "geInstancesTier1Rate")
		delete(additionalProperties, "geInstancesTier2Min")
		delete(additionalProperties, "geInstancesTier2Rate")
		delete(additionalProperties, "geInstancesTier3Min")
		delete(additionalProperties, "geInstancesTier3Rate")
		delete(additionalProperties, "geInstancesUsage")
		delete(additionalProperties, "hgPluginUsersOverageRate")
		delete(additionalProperties, "hgPluginUsersIncludedUsage")
		delete(additionalProperties, "hmGraphiteInstanceCnt")
		delete(additionalProperties, "hmPrometheusInstanceCnt")
		delete(additionalProperties, "awsMarketplaceSupport")
		delete(additionalProperties, "trialStartDate")
		delete(additionalProperties, "trialEndDate")
		delete(additionalProperties, "trialLengthDays")
		delete(additionalProperties, "trialNoticeDate")
		delete(additionalProperties, "cancellationDate")
		delete(additionalProperties, "retainedStackId")
		delete(additionalProperties, "pluginSignatureType")
		delete(additionalProperties, "contractType")
		delete(additionalProperties, "contractTypeId")
		delete(additionalProperties, "links")
		delete(additionalProperties, "subscriptions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormattedApiOrg struct {
	value *FormattedApiOrg
	isSet bool
}

func (v NullableFormattedApiOrg) Get() *FormattedApiOrg {
	return v.value
}

func (v *NullableFormattedApiOrg) Set(val *FormattedApiOrg) {
	v.value = val
	v.isSet = true
}

func (v NullableFormattedApiOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableFormattedApiOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormattedApiOrg(val *FormattedApiOrg) *NullableFormattedApiOrg {
	return &NullableFormattedApiOrg{value: val, isSet: true}
}

func (v NullableFormattedApiOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormattedApiOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
