/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the FormattedApiStackRegionAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormattedApiStackRegionAnyOf{}

// FormattedApiStackRegionAnyOf struct for FormattedApiStackRegionAnyOf
type FormattedApiStackRegionAnyOf struct {
	Id                   *float32       `json:"id,omitempty"`
	Status               *string        `json:"status,omitempty"`
	Visibility           *string        `json:"visibility,omitempty"`
	Slug                 *string        `json:"slug,omitempty"`
	Name                 *string        `json:"name,omitempty"`
	PublicName           *string        `json:"publicName,omitempty"`
	Description          *string        `json:"description,omitempty"`
	Provider             *string        `json:"provider,omitempty"`
	CreatedAt            *string        `json:"createdAt,omitempty"`
	UpdatedAt            NullableString `json:"updatedAt,omitempty"`
	SortOrder            *float32       `json:"sortOrder,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FormattedApiStackRegionAnyOf FormattedApiStackRegionAnyOf

// NewFormattedApiStackRegionAnyOf instantiates a new FormattedApiStackRegionAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormattedApiStackRegionAnyOf() *FormattedApiStackRegionAnyOf {
	this := FormattedApiStackRegionAnyOf{}
	return &this
}

// NewFormattedApiStackRegionAnyOfWithDefaults instantiates a new FormattedApiStackRegionAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormattedApiStackRegionAnyOfWithDefaults() *FormattedApiStackRegionAnyOf {
	this := FormattedApiStackRegionAnyOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *FormattedApiStackRegionAnyOf) SetId(v float32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FormattedApiStackRegionAnyOf) SetStatus(v string) {
	o.Status = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *FormattedApiStackRegionAnyOf) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *FormattedApiStackRegionAnyOf) SetSlug(v string) {
	o.Slug = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FormattedApiStackRegionAnyOf) SetName(v string) {
	o.Name = &v
}

// GetPublicName returns the PublicName field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetPublicName() string {
	if o == nil || IsNil(o.PublicName) {
		var ret string
		return ret
	}
	return *o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetPublicNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublicName) {
		return nil, false
	}
	return o.PublicName, true
}

// HasPublicName returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasPublicName() bool {
	if o != nil && !IsNil(o.PublicName) {
		return true
	}

	return false
}

// SetPublicName gets a reference to the given string and assigns it to the PublicName field.
func (o *FormattedApiStackRegionAnyOf) SetPublicName(v string) {
	o.PublicName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FormattedApiStackRegionAnyOf) SetDescription(v string) {
	o.Description = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *FormattedApiStackRegionAnyOf) SetProvider(v string) {
	o.Provider = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FormattedApiStackRegionAnyOf) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedApiStackRegionAnyOf) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiStackRegionAnyOf) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *FormattedApiStackRegionAnyOf) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *FormattedApiStackRegionAnyOf) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *FormattedApiStackRegionAnyOf) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *FormattedApiStackRegionAnyOf) GetSortOrder() float32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret float32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetSortOrderOk() (*float32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *FormattedApiStackRegionAnyOf) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given float32 and assigns it to the SortOrder field.
func (o *FormattedApiStackRegionAnyOf) SetSortOrder(v float32) {
	o.SortOrder = &v
}

func (o FormattedApiStackRegionAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormattedApiStackRegionAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PublicName) {
		toSerialize["publicName"] = o.PublicName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormattedApiStackRegionAnyOf) UnmarshalJSON(data []byte) (err error) {
	varFormattedApiStackRegionAnyOf := _FormattedApiStackRegionAnyOf{}

	err = json.Unmarshal(data, &varFormattedApiStackRegionAnyOf)

	if err != nil {
		return err
	}

	*o = FormattedApiStackRegionAnyOf(varFormattedApiStackRegionAnyOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "visibility")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "name")
		delete(additionalProperties, "publicName")
		delete(additionalProperties, "description")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "sortOrder")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormattedApiStackRegionAnyOf struct {
	value *FormattedApiStackRegionAnyOf
	isSet bool
}

func (v NullableFormattedApiStackRegionAnyOf) Get() *FormattedApiStackRegionAnyOf {
	return v.value
}

func (v *NullableFormattedApiStackRegionAnyOf) Set(val *FormattedApiStackRegionAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFormattedApiStackRegionAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFormattedApiStackRegionAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormattedApiStackRegionAnyOf(val *FormattedApiStackRegionAnyOf) *NullableFormattedApiStackRegionAnyOf {
	return &NullableFormattedApiStackRegionAnyOf{value: val, isSet: true}
}

func (v NullableFormattedApiStackRegionAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormattedApiStackRegionAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
