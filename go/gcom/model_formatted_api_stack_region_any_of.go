/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise       

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FormattedApiStackRegionAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormattedApiStackRegionAnyOf{}

// FormattedApiStackRegionAnyOf struct for FormattedApiStackRegionAnyOf
type FormattedApiStackRegionAnyOf struct {
	Id float32 `json:"id"`
	Status string `json:"status"`
	Visibility string `json:"visibility"`
	Slug string `json:"slug"`
	Name string `json:"name"`
	PublicName string `json:"publicName"`
	Description string `json:"description"`
	Provider string `json:"provider"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt NullableString `json:"updatedAt"`
	SortOrder float32 `json:"sortOrder"`
}

type _FormattedApiStackRegionAnyOf FormattedApiStackRegionAnyOf

// NewFormattedApiStackRegionAnyOf instantiates a new FormattedApiStackRegionAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormattedApiStackRegionAnyOf(id float32, status string, visibility string, slug string, name string, publicName string, description string, provider string, createdAt string, updatedAt NullableString, sortOrder float32) *FormattedApiStackRegionAnyOf {
	this := FormattedApiStackRegionAnyOf{}
	this.Id = id
	this.Status = status
	this.Visibility = visibility
	this.Slug = slug
	this.Name = name
	this.PublicName = publicName
	this.Description = description
	this.Provider = provider
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SortOrder = sortOrder
	return &this
}

// NewFormattedApiStackRegionAnyOfWithDefaults instantiates a new FormattedApiStackRegionAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormattedApiStackRegionAnyOfWithDefaults() *FormattedApiStackRegionAnyOf {
	this := FormattedApiStackRegionAnyOf{}
	return &this
}

// GetId returns the Id field value
func (o *FormattedApiStackRegionAnyOf) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FormattedApiStackRegionAnyOf) SetId(v float32) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *FormattedApiStackRegionAnyOf) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FormattedApiStackRegionAnyOf) SetStatus(v string) {
	o.Status = v
}

// GetVisibility returns the Visibility field value
func (o *FormattedApiStackRegionAnyOf) GetVisibility() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetVisibilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// SetVisibility sets field value
func (o *FormattedApiStackRegionAnyOf) SetVisibility(v string) {
	o.Visibility = v
}

// GetSlug returns the Slug field value
func (o *FormattedApiStackRegionAnyOf) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *FormattedApiStackRegionAnyOf) SetSlug(v string) {
	o.Slug = v
}

// GetName returns the Name field value
func (o *FormattedApiStackRegionAnyOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FormattedApiStackRegionAnyOf) SetName(v string) {
	o.Name = v
}

// GetPublicName returns the PublicName field value
func (o *FormattedApiStackRegionAnyOf) GetPublicName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetPublicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicName, true
}

// SetPublicName sets field value
func (o *FormattedApiStackRegionAnyOf) SetPublicName(v string) {
	o.PublicName = v
}

// GetDescription returns the Description field value
func (o *FormattedApiStackRegionAnyOf) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *FormattedApiStackRegionAnyOf) SetDescription(v string) {
	o.Description = v
}

// GetProvider returns the Provider field value
func (o *FormattedApiStackRegionAnyOf) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *FormattedApiStackRegionAnyOf) SetProvider(v string) {
	o.Provider = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *FormattedApiStackRegionAnyOf) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FormattedApiStackRegionAnyOf) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FormattedApiStackRegionAnyOf) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedApiStackRegionAnyOf) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *FormattedApiStackRegionAnyOf) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// GetSortOrder returns the SortOrder field value
func (o *FormattedApiStackRegionAnyOf) GetSortOrder() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *FormattedApiStackRegionAnyOf) GetSortOrderOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *FormattedApiStackRegionAnyOf) SetSortOrder(v float32) {
	o.SortOrder = v
}

func (o FormattedApiStackRegionAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormattedApiStackRegionAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["visibility"] = o.Visibility
	toSerialize["slug"] = o.Slug
	toSerialize["name"] = o.Name
	toSerialize["publicName"] = o.PublicName
	toSerialize["description"] = o.Description
	toSerialize["provider"] = o.Provider
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt.Get()
	toSerialize["sortOrder"] = o.SortOrder
	return toSerialize, nil
}

func (o *FormattedApiStackRegionAnyOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"status",
		"visibility",
		"slug",
		"name",
		"publicName",
		"description",
		"provider",
		"createdAt",
		"updatedAt",
		"sortOrder",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFormattedApiStackRegionAnyOf := _FormattedApiStackRegionAnyOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFormattedApiStackRegionAnyOf)

	if err != nil {
		return err
	}

	*o = FormattedApiStackRegionAnyOf(varFormattedApiStackRegionAnyOf)

	return err
}

type NullableFormattedApiStackRegionAnyOf struct {
	value *FormattedApiStackRegionAnyOf
	isSet bool
}

func (v NullableFormattedApiStackRegionAnyOf) Get() *FormattedApiStackRegionAnyOf {
	return v.value
}

func (v *NullableFormattedApiStackRegionAnyOf) Set(val *FormattedApiStackRegionAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFormattedApiStackRegionAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFormattedApiStackRegionAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormattedApiStackRegionAnyOf(val *FormattedApiStackRegionAnyOf) *NullableFormattedApiStackRegionAnyOf {
	return &NullableFormattedApiStackRegionAnyOf{value: val, isSet: true}
}

func (v NullableFormattedApiStackRegionAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormattedApiStackRegionAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


