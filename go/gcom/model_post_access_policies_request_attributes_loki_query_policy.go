/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PostAccessPoliciesRequestAttributesLokiQueryPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccessPoliciesRequestAttributesLokiQueryPolicy{}

// PostAccessPoliciesRequestAttributesLokiQueryPolicy struct for PostAccessPoliciesRequestAttributesLokiQueryPolicy
type PostAccessPoliciesRequestAttributesLokiQueryPolicy struct {
	MaxEntriesLimitPerQuery NullableInt32  `json:"maxEntriesLimitPerQuery,omitempty"`
	MaxQueryBytesRead       NullableString `json:"maxQueryBytesRead,omitempty"`
	MaxQueryInterval        NullableString `json:"maxQueryInterval,omitempty"`
	MaxQueryLength          NullableString `json:"maxQueryLength,omitempty"`
	MaxQueryLookback        NullableString `json:"maxQueryLookback,omitempty"`
	MaxQueryTime            NullableString `json:"maxQueryTime,omitempty"`
	MinimumLabelsNumber     NullableInt32  `json:"minimumLabelsNumber,omitempty"`
	RequiredLabels          []string       `json:"requiredLabels,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _PostAccessPoliciesRequestAttributesLokiQueryPolicy PostAccessPoliciesRequestAttributesLokiQueryPolicy

// NewPostAccessPoliciesRequestAttributesLokiQueryPolicy instantiates a new PostAccessPoliciesRequestAttributesLokiQueryPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccessPoliciesRequestAttributesLokiQueryPolicy() *PostAccessPoliciesRequestAttributesLokiQueryPolicy {
	this := PostAccessPoliciesRequestAttributesLokiQueryPolicy{}
	return &this
}

// NewPostAccessPoliciesRequestAttributesLokiQueryPolicyWithDefaults instantiates a new PostAccessPoliciesRequestAttributesLokiQueryPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccessPoliciesRequestAttributesLokiQueryPolicyWithDefaults() *PostAccessPoliciesRequestAttributesLokiQueryPolicy {
	this := PostAccessPoliciesRequestAttributesLokiQueryPolicy{}
	return &this
}

// GetMaxEntriesLimitPerQuery returns the MaxEntriesLimitPerQuery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxEntriesLimitPerQuery() int32 {
	if o == nil || IsNil(o.MaxEntriesLimitPerQuery.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxEntriesLimitPerQuery.Get()
}

// GetMaxEntriesLimitPerQueryOk returns a tuple with the MaxEntriesLimitPerQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxEntriesLimitPerQueryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxEntriesLimitPerQuery.Get(), o.MaxEntriesLimitPerQuery.IsSet()
}

// HasMaxEntriesLimitPerQuery returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxEntriesLimitPerQuery() bool {
	if o != nil && o.MaxEntriesLimitPerQuery.IsSet() {
		return true
	}

	return false
}

// SetMaxEntriesLimitPerQuery gets a reference to the given NullableInt32 and assigns it to the MaxEntriesLimitPerQuery field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxEntriesLimitPerQuery(v int32) {
	o.MaxEntriesLimitPerQuery.Set(&v)
}

// SetMaxEntriesLimitPerQueryNil sets the value for MaxEntriesLimitPerQuery to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxEntriesLimitPerQueryNil() {
	o.MaxEntriesLimitPerQuery.Set(nil)
}

// UnsetMaxEntriesLimitPerQuery ensures that no value is present for MaxEntriesLimitPerQuery, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxEntriesLimitPerQuery() {
	o.MaxEntriesLimitPerQuery.Unset()
}

// GetMaxQueryBytesRead returns the MaxQueryBytesRead field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryBytesRead() string {
	if o == nil || IsNil(o.MaxQueryBytesRead.Get()) {
		var ret string
		return ret
	}
	return *o.MaxQueryBytesRead.Get()
}

// GetMaxQueryBytesReadOk returns a tuple with the MaxQueryBytesRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryBytesReadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxQueryBytesRead.Get(), o.MaxQueryBytesRead.IsSet()
}

// HasMaxQueryBytesRead returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxQueryBytesRead() bool {
	if o != nil && o.MaxQueryBytesRead.IsSet() {
		return true
	}

	return false
}

// SetMaxQueryBytesRead gets a reference to the given NullableString and assigns it to the MaxQueryBytesRead field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryBytesRead(v string) {
	o.MaxQueryBytesRead.Set(&v)
}

// SetMaxQueryBytesReadNil sets the value for MaxQueryBytesRead to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryBytesReadNil() {
	o.MaxQueryBytesRead.Set(nil)
}

// UnsetMaxQueryBytesRead ensures that no value is present for MaxQueryBytesRead, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxQueryBytesRead() {
	o.MaxQueryBytesRead.Unset()
}

// GetMaxQueryInterval returns the MaxQueryInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryInterval() string {
	if o == nil || IsNil(o.MaxQueryInterval.Get()) {
		var ret string
		return ret
	}
	return *o.MaxQueryInterval.Get()
}

// GetMaxQueryIntervalOk returns a tuple with the MaxQueryInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxQueryInterval.Get(), o.MaxQueryInterval.IsSet()
}

// HasMaxQueryInterval returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxQueryInterval() bool {
	if o != nil && o.MaxQueryInterval.IsSet() {
		return true
	}

	return false
}

// SetMaxQueryInterval gets a reference to the given NullableString and assigns it to the MaxQueryInterval field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryInterval(v string) {
	o.MaxQueryInterval.Set(&v)
}

// SetMaxQueryIntervalNil sets the value for MaxQueryInterval to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryIntervalNil() {
	o.MaxQueryInterval.Set(nil)
}

// UnsetMaxQueryInterval ensures that no value is present for MaxQueryInterval, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxQueryInterval() {
	o.MaxQueryInterval.Unset()
}

// GetMaxQueryLength returns the MaxQueryLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryLength() string {
	if o == nil || IsNil(o.MaxQueryLength.Get()) {
		var ret string
		return ret
	}
	return *o.MaxQueryLength.Get()
}

// GetMaxQueryLengthOk returns a tuple with the MaxQueryLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryLengthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxQueryLength.Get(), o.MaxQueryLength.IsSet()
}

// HasMaxQueryLength returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxQueryLength() bool {
	if o != nil && o.MaxQueryLength.IsSet() {
		return true
	}

	return false
}

// SetMaxQueryLength gets a reference to the given NullableString and assigns it to the MaxQueryLength field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryLength(v string) {
	o.MaxQueryLength.Set(&v)
}

// SetMaxQueryLengthNil sets the value for MaxQueryLength to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryLengthNil() {
	o.MaxQueryLength.Set(nil)
}

// UnsetMaxQueryLength ensures that no value is present for MaxQueryLength, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxQueryLength() {
	o.MaxQueryLength.Unset()
}

// GetMaxQueryLookback returns the MaxQueryLookback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryLookback() string {
	if o == nil || IsNil(o.MaxQueryLookback.Get()) {
		var ret string
		return ret
	}
	return *o.MaxQueryLookback.Get()
}

// GetMaxQueryLookbackOk returns a tuple with the MaxQueryLookback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryLookbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxQueryLookback.Get(), o.MaxQueryLookback.IsSet()
}

// HasMaxQueryLookback returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxQueryLookback() bool {
	if o != nil && o.MaxQueryLookback.IsSet() {
		return true
	}

	return false
}

// SetMaxQueryLookback gets a reference to the given NullableString and assigns it to the MaxQueryLookback field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryLookback(v string) {
	o.MaxQueryLookback.Set(&v)
}

// SetMaxQueryLookbackNil sets the value for MaxQueryLookback to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryLookbackNil() {
	o.MaxQueryLookback.Set(nil)
}

// UnsetMaxQueryLookback ensures that no value is present for MaxQueryLookback, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxQueryLookback() {
	o.MaxQueryLookback.Unset()
}

// GetMaxQueryTime returns the MaxQueryTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryTime() string {
	if o == nil || IsNil(o.MaxQueryTime.Get()) {
		var ret string
		return ret
	}
	return *o.MaxQueryTime.Get()
}

// GetMaxQueryTimeOk returns a tuple with the MaxQueryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMaxQueryTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxQueryTime.Get(), o.MaxQueryTime.IsSet()
}

// HasMaxQueryTime returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMaxQueryTime() bool {
	if o != nil && o.MaxQueryTime.IsSet() {
		return true
	}

	return false
}

// SetMaxQueryTime gets a reference to the given NullableString and assigns it to the MaxQueryTime field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryTime(v string) {
	o.MaxQueryTime.Set(&v)
}

// SetMaxQueryTimeNil sets the value for MaxQueryTime to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMaxQueryTimeNil() {
	o.MaxQueryTime.Set(nil)
}

// UnsetMaxQueryTime ensures that no value is present for MaxQueryTime, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMaxQueryTime() {
	o.MaxQueryTime.Unset()
}

// GetMinimumLabelsNumber returns the MinimumLabelsNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMinimumLabelsNumber() int32 {
	if o == nil || IsNil(o.MinimumLabelsNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.MinimumLabelsNumber.Get()
}

// GetMinimumLabelsNumberOk returns a tuple with the MinimumLabelsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetMinimumLabelsNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumLabelsNumber.Get(), o.MinimumLabelsNumber.IsSet()
}

// HasMinimumLabelsNumber returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasMinimumLabelsNumber() bool {
	if o != nil && o.MinimumLabelsNumber.IsSet() {
		return true
	}

	return false
}

// SetMinimumLabelsNumber gets a reference to the given NullableInt32 and assigns it to the MinimumLabelsNumber field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMinimumLabelsNumber(v int32) {
	o.MinimumLabelsNumber.Set(&v)
}

// SetMinimumLabelsNumberNil sets the value for MinimumLabelsNumber to be an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetMinimumLabelsNumberNil() {
	o.MinimumLabelsNumber.Set(nil)
}

// UnsetMinimumLabelsNumber ensures that no value is present for MinimumLabelsNumber, not even an explicit nil
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnsetMinimumLabelsNumber() {
	o.MinimumLabelsNumber.Unset()
}

// GetRequiredLabels returns the RequiredLabels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetRequiredLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RequiredLabels
}

// GetRequiredLabelsOk returns a tuple with the RequiredLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) GetRequiredLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredLabels) {
		return nil, false
	}
	return o.RequiredLabels, true
}

// HasRequiredLabels returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) HasRequiredLabels() bool {
	if o != nil && IsNil(o.RequiredLabels) {
		return true
	}

	return false
}

// SetRequiredLabels gets a reference to the given []string and assigns it to the RequiredLabels field.
func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) SetRequiredLabels(v []string) {
	o.RequiredLabels = v
}

func (o PostAccessPoliciesRequestAttributesLokiQueryPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccessPoliciesRequestAttributesLokiQueryPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxEntriesLimitPerQuery.IsSet() {
		toSerialize["maxEntriesLimitPerQuery"] = o.MaxEntriesLimitPerQuery.Get()
	}
	if o.MaxQueryBytesRead.IsSet() {
		toSerialize["maxQueryBytesRead"] = o.MaxQueryBytesRead.Get()
	}
	if o.MaxQueryInterval.IsSet() {
		toSerialize["maxQueryInterval"] = o.MaxQueryInterval.Get()
	}
	if o.MaxQueryLength.IsSet() {
		toSerialize["maxQueryLength"] = o.MaxQueryLength.Get()
	}
	if o.MaxQueryLookback.IsSet() {
		toSerialize["maxQueryLookback"] = o.MaxQueryLookback.Get()
	}
	if o.MaxQueryTime.IsSet() {
		toSerialize["maxQueryTime"] = o.MaxQueryTime.Get()
	}
	if o.MinimumLabelsNumber.IsSet() {
		toSerialize["minimumLabelsNumber"] = o.MinimumLabelsNumber.Get()
	}
	if o.RequiredLabels != nil {
		toSerialize["requiredLabels"] = o.RequiredLabels
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostAccessPoliciesRequestAttributesLokiQueryPolicy) UnmarshalJSON(data []byte) (err error) {
	varPostAccessPoliciesRequestAttributesLokiQueryPolicy := _PostAccessPoliciesRequestAttributesLokiQueryPolicy{}

	err = json.Unmarshal(data, &varPostAccessPoliciesRequestAttributesLokiQueryPolicy)

	if err != nil {
		return err
	}

	*o = PostAccessPoliciesRequestAttributesLokiQueryPolicy(varPostAccessPoliciesRequestAttributesLokiQueryPolicy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "maxEntriesLimitPerQuery")
		delete(additionalProperties, "maxQueryBytesRead")
		delete(additionalProperties, "maxQueryInterval")
		delete(additionalProperties, "maxQueryLength")
		delete(additionalProperties, "maxQueryLookback")
		delete(additionalProperties, "maxQueryTime")
		delete(additionalProperties, "minimumLabelsNumber")
		delete(additionalProperties, "requiredLabels")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy struct {
	value *PostAccessPoliciesRequestAttributesLokiQueryPolicy
	isSet bool
}

func (v NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) Get() *PostAccessPoliciesRequestAttributesLokiQueryPolicy {
	return v.value
}

func (v *NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) Set(val *PostAccessPoliciesRequestAttributesLokiQueryPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccessPoliciesRequestAttributesLokiQueryPolicy(val *PostAccessPoliciesRequestAttributesLokiQueryPolicy) *NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy {
	return &NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy{value: val, isSet: true}
}

func (v NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccessPoliciesRequestAttributesLokiQueryPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
