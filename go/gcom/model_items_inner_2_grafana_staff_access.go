/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"time"
)

// checks if the ItemsInner2GrafanaStaffAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemsInner2GrafanaStaffAccess{}

// ItemsInner2GrafanaStaffAccess struct for ItemsInner2GrafanaStaffAccess
type ItemsInner2GrafanaStaffAccess struct {
	AccessExpiresAt      time.Time       `json:"accessExpiresAt"`
	TicketId             NullableFloat32 `json:"ticketId,omitempty"`
	PublicReason         NullableString  `json:"publicReason,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ItemsInner2GrafanaStaffAccess ItemsInner2GrafanaStaffAccess

// NewItemsInner2GrafanaStaffAccess instantiates a new ItemsInner2GrafanaStaffAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemsInner2GrafanaStaffAccess(accessExpiresAt time.Time) *ItemsInner2GrafanaStaffAccess {
	this := ItemsInner2GrafanaStaffAccess{}
	this.AccessExpiresAt = accessExpiresAt
	return &this
}

// NewItemsInner2GrafanaStaffAccessWithDefaults instantiates a new ItemsInner2GrafanaStaffAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemsInner2GrafanaStaffAccessWithDefaults() *ItemsInner2GrafanaStaffAccess {
	this := ItemsInner2GrafanaStaffAccess{}
	return &this
}

// GetAccessExpiresAt returns the AccessExpiresAt field value
func (o *ItemsInner2GrafanaStaffAccess) GetAccessExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.AccessExpiresAt
}

// GetAccessExpiresAtOk returns a tuple with the AccessExpiresAt field value
// and a boolean to check if the value has been set.
func (o *ItemsInner2GrafanaStaffAccess) GetAccessExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessExpiresAt, true
}

// SetAccessExpiresAt sets field value
func (o *ItemsInner2GrafanaStaffAccess) SetAccessExpiresAt(v time.Time) {
	o.AccessExpiresAt = v
}

// GetTicketId returns the TicketId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ItemsInner2GrafanaStaffAccess) GetTicketId() float32 {
	if o == nil || IsNil(o.TicketId.Get()) {
		var ret float32
		return ret
	}
	return *o.TicketId.Get()
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ItemsInner2GrafanaStaffAccess) GetTicketIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TicketId.Get(), o.TicketId.IsSet()
}

// HasTicketId returns a boolean if a field has been set.
func (o *ItemsInner2GrafanaStaffAccess) HasTicketId() bool {
	if o != nil && o.TicketId.IsSet() {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given NullableFloat32 and assigns it to the TicketId field.
func (o *ItemsInner2GrafanaStaffAccess) SetTicketId(v float32) {
	o.TicketId.Set(&v)
}

// SetTicketIdNil sets the value for TicketId to be an explicit nil
func (o *ItemsInner2GrafanaStaffAccess) SetTicketIdNil() {
	o.TicketId.Set(nil)
}

// UnsetTicketId ensures that no value is present for TicketId, not even an explicit nil
func (o *ItemsInner2GrafanaStaffAccess) UnsetTicketId() {
	o.TicketId.Unset()
}

// GetPublicReason returns the PublicReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ItemsInner2GrafanaStaffAccess) GetPublicReason() string {
	if o == nil || IsNil(o.PublicReason.Get()) {
		var ret string
		return ret
	}
	return *o.PublicReason.Get()
}

// GetPublicReasonOk returns a tuple with the PublicReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ItemsInner2GrafanaStaffAccess) GetPublicReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicReason.Get(), o.PublicReason.IsSet()
}

// HasPublicReason returns a boolean if a field has been set.
func (o *ItemsInner2GrafanaStaffAccess) HasPublicReason() bool {
	if o != nil && o.PublicReason.IsSet() {
		return true
	}

	return false
}

// SetPublicReason gets a reference to the given NullableString and assigns it to the PublicReason field.
func (o *ItemsInner2GrafanaStaffAccess) SetPublicReason(v string) {
	o.PublicReason.Set(&v)
}

// SetPublicReasonNil sets the value for PublicReason to be an explicit nil
func (o *ItemsInner2GrafanaStaffAccess) SetPublicReasonNil() {
	o.PublicReason.Set(nil)
}

// UnsetPublicReason ensures that no value is present for PublicReason, not even an explicit nil
func (o *ItemsInner2GrafanaStaffAccess) UnsetPublicReason() {
	o.PublicReason.Unset()
}

func (o ItemsInner2GrafanaStaffAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemsInner2GrafanaStaffAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessExpiresAt"] = o.AccessExpiresAt
	if o.TicketId.IsSet() {
		toSerialize["ticketId"] = o.TicketId.Get()
	}
	if o.PublicReason.IsSet() {
		toSerialize["publicReason"] = o.PublicReason.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ItemsInner2GrafanaStaffAccess) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varItemsInner2GrafanaStaffAccess := _ItemsInner2GrafanaStaffAccess{}

	err = json.Unmarshal(data, &varItemsInner2GrafanaStaffAccess)

	if err != nil {
		return err
	}

	*o = ItemsInner2GrafanaStaffAccess(varItemsInner2GrafanaStaffAccess)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessExpiresAt")
		delete(additionalProperties, "ticketId")
		delete(additionalProperties, "publicReason")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableItemsInner2GrafanaStaffAccess struct {
	value *ItemsInner2GrafanaStaffAccess
	isSet bool
}

func (v NullableItemsInner2GrafanaStaffAccess) Get() *ItemsInner2GrafanaStaffAccess {
	return v.value
}

func (v *NullableItemsInner2GrafanaStaffAccess) Set(val *ItemsInner2GrafanaStaffAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableItemsInner2GrafanaStaffAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableItemsInner2GrafanaStaffAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemsInner2GrafanaStaffAccess(val *ItemsInner2GrafanaStaffAccess) *NullableItemsInner2GrafanaStaffAccess {
	return &NullableItemsInner2GrafanaStaffAccess{value: val, isSet: true}
}

func (v NullableItemsInner2GrafanaStaffAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemsInner2GrafanaStaffAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
