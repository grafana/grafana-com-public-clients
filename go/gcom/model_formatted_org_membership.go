/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the FormattedOrgMembership type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormattedOrgMembership{}

// FormattedOrgMembership struct for FormattedOrgMembership
type FormattedOrgMembership struct {
	Id                       *float32                                   `json:"id,omitempty"`
	OrgId                    *float32                                   `json:"orgId,omitempty"`
	UserId                   *float32                                   `json:"userId,omitempty"`
	Status                   *float32                                   `json:"status,omitempty"`
	CreatedAt                *string                                    `json:"createdAt,omitempty"`
	UpdatedAt                NullableString                             `json:"updatedAt,omitempty"`
	DefaultOrg               *float32                                   `json:"defaultOrg,omitempty"`
	Role                     *string                                    `json:"role,omitempty"`
	Privacy                  *float32                                   `json:"privacy,omitempty"`
	Billing                  *float32                                   `json:"billing,omitempty"`
	CreatedBy                *string                                    `json:"createdBy,omitempty"`
	UpdatedBy                *string                                    `json:"updatedBy,omitempty"`
	OrgName                  *string                                    `json:"orgName,omitempty"`
	OrgSlug                  *string                                    `json:"orgSlug,omitempty"`
	OrgUrl                   *string                                    `json:"orgUrl,omitempty"`
	GrafanaCloud             *float32                                   `json:"grafanaCloud,omitempty"`
	ResellerId               NullableFloat32                            `json:"resellerId,omitempty"`
	ContractTypeId           *float32                                   `json:"contractTypeId,omitempty"`
	AllowGCloudTrial         *bool                                      `json:"allowGCloudTrial,omitempty"`
	HlUsage                  *float32                                   `json:"hlUsage,omitempty"`
	HmCurrentGraphiteUsage   *float32                                   `json:"hmCurrentGraphiteUsage,omitempty"`
	HmCurrentPrometheusUsage *float32                                   `json:"hmCurrentPrometheusUsage,omitempty"`
	HgDatasourceCnts         *string                                    `json:"hgDatasourceCnts,omitempty"`
	UserFirstName            *string                                    `json:"userFirstName,omitempty"`
	UserLastName             *string                                    `json:"userLastName,omitempty"`
	UserUsername             *string                                    `json:"userUsername,omitempty"`
	UserStatus               *float32                                   `json:"userStatus,omitempty"`
	UserEmail                *string                                    `json:"userEmail,omitempty"`
	UserName                 *string                                    `json:"userName,omitempty"`
	Subscriptions            *Subscriptions                             `json:"subscriptions,omitempty"`
	MarketplaceSubscription  NullableItemsInner1MarketplaceSubscription `json:"marketplaceSubscription,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _FormattedOrgMembership FormattedOrgMembership

// NewFormattedOrgMembership instantiates a new FormattedOrgMembership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormattedOrgMembership() *FormattedOrgMembership {
	this := FormattedOrgMembership{}
	return &this
}

// NewFormattedOrgMembershipWithDefaults instantiates a new FormattedOrgMembership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormattedOrgMembershipWithDefaults() *FormattedOrgMembership {
	this := FormattedOrgMembership{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *FormattedOrgMembership) SetId(v float32) {
	o.Id = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetOrgId() float32 {
	if o == nil || IsNil(o.OrgId) {
		var ret float32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetOrgIdOk() (*float32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given float32 and assigns it to the OrgId field.
func (o *FormattedOrgMembership) SetOrgId(v float32) {
	o.OrgId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserId() float32 {
	if o == nil || IsNil(o.UserId) {
		var ret float32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserIdOk() (*float32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given float32 and assigns it to the UserId field.
func (o *FormattedOrgMembership) SetUserId(v float32) {
	o.UserId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetStatus() float32 {
	if o == nil || IsNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *FormattedOrgMembership) SetStatus(v float32) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FormattedOrgMembership) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedOrgMembership) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedOrgMembership) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *FormattedOrgMembership) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *FormattedOrgMembership) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *FormattedOrgMembership) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetDefaultOrg returns the DefaultOrg field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetDefaultOrg() float32 {
	if o == nil || IsNil(o.DefaultOrg) {
		var ret float32
		return ret
	}
	return *o.DefaultOrg
}

// GetDefaultOrgOk returns a tuple with the DefaultOrg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetDefaultOrgOk() (*float32, bool) {
	if o == nil || IsNil(o.DefaultOrg) {
		return nil, false
	}
	return o.DefaultOrg, true
}

// HasDefaultOrg returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasDefaultOrg() bool {
	if o != nil && !IsNil(o.DefaultOrg) {
		return true
	}

	return false
}

// SetDefaultOrg gets a reference to the given float32 and assigns it to the DefaultOrg field.
func (o *FormattedOrgMembership) SetDefaultOrg(v float32) {
	o.DefaultOrg = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *FormattedOrgMembership) SetRole(v string) {
	o.Role = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetPrivacy() float32 {
	if o == nil || IsNil(o.Privacy) {
		var ret float32
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetPrivacyOk() (*float32, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given float32 and assigns it to the Privacy field.
func (o *FormattedOrgMembership) SetPrivacy(v float32) {
	o.Privacy = &v
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetBilling() float32 {
	if o == nil || IsNil(o.Billing) {
		var ret float32
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetBillingOk() (*float32, bool) {
	if o == nil || IsNil(o.Billing) {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasBilling() bool {
	if o != nil && !IsNil(o.Billing) {
		return true
	}

	return false
}

// SetBilling gets a reference to the given float32 and assigns it to the Billing field.
func (o *FormattedOrgMembership) SetBilling(v float32) {
	o.Billing = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *FormattedOrgMembership) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *FormattedOrgMembership) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *FormattedOrgMembership) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *FormattedOrgMembership) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

// GetOrgUrl returns the OrgUrl field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetOrgUrl() string {
	if o == nil || IsNil(o.OrgUrl) {
		var ret string
		return ret
	}
	return *o.OrgUrl
}

// GetOrgUrlOk returns a tuple with the OrgUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetOrgUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUrl) {
		return nil, false
	}
	return o.OrgUrl, true
}

// HasOrgUrl returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasOrgUrl() bool {
	if o != nil && !IsNil(o.OrgUrl) {
		return true
	}

	return false
}

// SetOrgUrl gets a reference to the given string and assigns it to the OrgUrl field.
func (o *FormattedOrgMembership) SetOrgUrl(v string) {
	o.OrgUrl = &v
}

// GetGrafanaCloud returns the GrafanaCloud field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetGrafanaCloud() float32 {
	if o == nil || IsNil(o.GrafanaCloud) {
		var ret float32
		return ret
	}
	return *o.GrafanaCloud
}

// GetGrafanaCloudOk returns a tuple with the GrafanaCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetGrafanaCloudOk() (*float32, bool) {
	if o == nil || IsNil(o.GrafanaCloud) {
		return nil, false
	}
	return o.GrafanaCloud, true
}

// HasGrafanaCloud returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasGrafanaCloud() bool {
	if o != nil && !IsNil(o.GrafanaCloud) {
		return true
	}

	return false
}

// SetGrafanaCloud gets a reference to the given float32 and assigns it to the GrafanaCloud field.
func (o *FormattedOrgMembership) SetGrafanaCloud(v float32) {
	o.GrafanaCloud = &v
}

// GetResellerId returns the ResellerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedOrgMembership) GetResellerId() float32 {
	if o == nil || IsNil(o.ResellerId.Get()) {
		var ret float32
		return ret
	}
	return *o.ResellerId.Get()
}

// GetResellerIdOk returns a tuple with the ResellerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedOrgMembership) GetResellerIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResellerId.Get(), o.ResellerId.IsSet()
}

// HasResellerId returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasResellerId() bool {
	if o != nil && o.ResellerId.IsSet() {
		return true
	}

	return false
}

// SetResellerId gets a reference to the given NullableFloat32 and assigns it to the ResellerId field.
func (o *FormattedOrgMembership) SetResellerId(v float32) {
	o.ResellerId.Set(&v)
}

// SetResellerIdNil sets the value for ResellerId to be an explicit nil
func (o *FormattedOrgMembership) SetResellerIdNil() {
	o.ResellerId.Set(nil)
}

// UnsetResellerId ensures that no value is present for ResellerId, not even an explicit nil
func (o *FormattedOrgMembership) UnsetResellerId() {
	o.ResellerId.Unset()
}

// GetContractTypeId returns the ContractTypeId field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetContractTypeId() float32 {
	if o == nil || IsNil(o.ContractTypeId) {
		var ret float32
		return ret
	}
	return *o.ContractTypeId
}

// GetContractTypeIdOk returns a tuple with the ContractTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetContractTypeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ContractTypeId) {
		return nil, false
	}
	return o.ContractTypeId, true
}

// HasContractTypeId returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasContractTypeId() bool {
	if o != nil && !IsNil(o.ContractTypeId) {
		return true
	}

	return false
}

// SetContractTypeId gets a reference to the given float32 and assigns it to the ContractTypeId field.
func (o *FormattedOrgMembership) SetContractTypeId(v float32) {
	o.ContractTypeId = &v
}

// GetAllowGCloudTrial returns the AllowGCloudTrial field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetAllowGCloudTrial() bool {
	if o == nil || IsNil(o.AllowGCloudTrial) {
		var ret bool
		return ret
	}
	return *o.AllowGCloudTrial
}

// GetAllowGCloudTrialOk returns a tuple with the AllowGCloudTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetAllowGCloudTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowGCloudTrial) {
		return nil, false
	}
	return o.AllowGCloudTrial, true
}

// HasAllowGCloudTrial returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasAllowGCloudTrial() bool {
	if o != nil && !IsNil(o.AllowGCloudTrial) {
		return true
	}

	return false
}

// SetAllowGCloudTrial gets a reference to the given bool and assigns it to the AllowGCloudTrial field.
func (o *FormattedOrgMembership) SetAllowGCloudTrial(v bool) {
	o.AllowGCloudTrial = &v
}

// GetHlUsage returns the HlUsage field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetHlUsage() float32 {
	if o == nil || IsNil(o.HlUsage) {
		var ret float32
		return ret
	}
	return *o.HlUsage
}

// GetHlUsageOk returns a tuple with the HlUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetHlUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HlUsage) {
		return nil, false
	}
	return o.HlUsage, true
}

// HasHlUsage returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasHlUsage() bool {
	if o != nil && !IsNil(o.HlUsage) {
		return true
	}

	return false
}

// SetHlUsage gets a reference to the given float32 and assigns it to the HlUsage field.
func (o *FormattedOrgMembership) SetHlUsage(v float32) {
	o.HlUsage = &v
}

// GetHmCurrentGraphiteUsage returns the HmCurrentGraphiteUsage field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetHmCurrentGraphiteUsage() float32 {
	if o == nil || IsNil(o.HmCurrentGraphiteUsage) {
		var ret float32
		return ret
	}
	return *o.HmCurrentGraphiteUsage
}

// GetHmCurrentGraphiteUsageOk returns a tuple with the HmCurrentGraphiteUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetHmCurrentGraphiteUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmCurrentGraphiteUsage) {
		return nil, false
	}
	return o.HmCurrentGraphiteUsage, true
}

// HasHmCurrentGraphiteUsage returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasHmCurrentGraphiteUsage() bool {
	if o != nil && !IsNil(o.HmCurrentGraphiteUsage) {
		return true
	}

	return false
}

// SetHmCurrentGraphiteUsage gets a reference to the given float32 and assigns it to the HmCurrentGraphiteUsage field.
func (o *FormattedOrgMembership) SetHmCurrentGraphiteUsage(v float32) {
	o.HmCurrentGraphiteUsage = &v
}

// GetHmCurrentPrometheusUsage returns the HmCurrentPrometheusUsage field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetHmCurrentPrometheusUsage() float32 {
	if o == nil || IsNil(o.HmCurrentPrometheusUsage) {
		var ret float32
		return ret
	}
	return *o.HmCurrentPrometheusUsage
}

// GetHmCurrentPrometheusUsageOk returns a tuple with the HmCurrentPrometheusUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetHmCurrentPrometheusUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.HmCurrentPrometheusUsage) {
		return nil, false
	}
	return o.HmCurrentPrometheusUsage, true
}

// HasHmCurrentPrometheusUsage returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasHmCurrentPrometheusUsage() bool {
	if o != nil && !IsNil(o.HmCurrentPrometheusUsage) {
		return true
	}

	return false
}

// SetHmCurrentPrometheusUsage gets a reference to the given float32 and assigns it to the HmCurrentPrometheusUsage field.
func (o *FormattedOrgMembership) SetHmCurrentPrometheusUsage(v float32) {
	o.HmCurrentPrometheusUsage = &v
}

// GetHgDatasourceCnts returns the HgDatasourceCnts field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetHgDatasourceCnts() string {
	if o == nil || IsNil(o.HgDatasourceCnts) {
		var ret string
		return ret
	}
	return *o.HgDatasourceCnts
}

// GetHgDatasourceCntsOk returns a tuple with the HgDatasourceCnts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetHgDatasourceCntsOk() (*string, bool) {
	if o == nil || IsNil(o.HgDatasourceCnts) {
		return nil, false
	}
	return o.HgDatasourceCnts, true
}

// HasHgDatasourceCnts returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasHgDatasourceCnts() bool {
	if o != nil && !IsNil(o.HgDatasourceCnts) {
		return true
	}

	return false
}

// SetHgDatasourceCnts gets a reference to the given string and assigns it to the HgDatasourceCnts field.
func (o *FormattedOrgMembership) SetHgDatasourceCnts(v string) {
	o.HgDatasourceCnts = &v
}

// GetUserFirstName returns the UserFirstName field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserFirstName() string {
	if o == nil || IsNil(o.UserFirstName) {
		var ret string
		return ret
	}
	return *o.UserFirstName
}

// GetUserFirstNameOk returns a tuple with the UserFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserFirstName) {
		return nil, false
	}
	return o.UserFirstName, true
}

// HasUserFirstName returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserFirstName() bool {
	if o != nil && !IsNil(o.UserFirstName) {
		return true
	}

	return false
}

// SetUserFirstName gets a reference to the given string and assigns it to the UserFirstName field.
func (o *FormattedOrgMembership) SetUserFirstName(v string) {
	o.UserFirstName = &v
}

// GetUserLastName returns the UserLastName field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserLastName() string {
	if o == nil || IsNil(o.UserLastName) {
		var ret string
		return ret
	}
	return *o.UserLastName
}

// GetUserLastNameOk returns a tuple with the UserLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserLastName) {
		return nil, false
	}
	return o.UserLastName, true
}

// HasUserLastName returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserLastName() bool {
	if o != nil && !IsNil(o.UserLastName) {
		return true
	}

	return false
}

// SetUserLastName gets a reference to the given string and assigns it to the UserLastName field.
func (o *FormattedOrgMembership) SetUserLastName(v string) {
	o.UserLastName = &v
}

// GetUserUsername returns the UserUsername field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserUsername() string {
	if o == nil || IsNil(o.UserUsername) {
		var ret string
		return ret
	}
	return *o.UserUsername
}

// GetUserUsernameOk returns a tuple with the UserUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.UserUsername) {
		return nil, false
	}
	return o.UserUsername, true
}

// HasUserUsername returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserUsername() bool {
	if o != nil && !IsNil(o.UserUsername) {
		return true
	}

	return false
}

// SetUserUsername gets a reference to the given string and assigns it to the UserUsername field.
func (o *FormattedOrgMembership) SetUserUsername(v string) {
	o.UserUsername = &v
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserStatus() float32 {
	if o == nil || IsNil(o.UserStatus) {
		var ret float32
		return ret
	}
	return *o.UserStatus
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.UserStatus) {
		return nil, false
	}
	return o.UserStatus, true
}

// HasUserStatus returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserStatus() bool {
	if o != nil && !IsNil(o.UserStatus) {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given float32 and assigns it to the UserStatus field.
func (o *FormattedOrgMembership) SetUserStatus(v float32) {
	o.UserStatus = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail) {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserEmail) {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserEmail() bool {
	if o != nil && !IsNil(o.UserEmail) {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *FormattedOrgMembership) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *FormattedOrgMembership) SetUserName(v string) {
	o.UserName = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *FormattedOrgMembership) GetSubscriptions() Subscriptions {
	if o == nil || IsNil(o.Subscriptions) {
		var ret Subscriptions
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormattedOrgMembership) GetSubscriptionsOk() (*Subscriptions, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasSubscriptions() bool {
	if o != nil && !IsNil(o.Subscriptions) {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given Subscriptions and assigns it to the Subscriptions field.
func (o *FormattedOrgMembership) SetSubscriptions(v Subscriptions) {
	o.Subscriptions = &v
}

// GetMarketplaceSubscription returns the MarketplaceSubscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FormattedOrgMembership) GetMarketplaceSubscription() ItemsInner1MarketplaceSubscription {
	if o == nil || IsNil(o.MarketplaceSubscription.Get()) {
		var ret ItemsInner1MarketplaceSubscription
		return ret
	}
	return *o.MarketplaceSubscription.Get()
}

// GetMarketplaceSubscriptionOk returns a tuple with the MarketplaceSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FormattedOrgMembership) GetMarketplaceSubscriptionOk() (*ItemsInner1MarketplaceSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketplaceSubscription.Get(), o.MarketplaceSubscription.IsSet()
}

// HasMarketplaceSubscription returns a boolean if a field has been set.
func (o *FormattedOrgMembership) HasMarketplaceSubscription() bool {
	if o != nil && o.MarketplaceSubscription.IsSet() {
		return true
	}

	return false
}

// SetMarketplaceSubscription gets a reference to the given NullableItemsInner1MarketplaceSubscription and assigns it to the MarketplaceSubscription field.
func (o *FormattedOrgMembership) SetMarketplaceSubscription(v ItemsInner1MarketplaceSubscription) {
	o.MarketplaceSubscription.Set(&v)
}

// SetMarketplaceSubscriptionNil sets the value for MarketplaceSubscription to be an explicit nil
func (o *FormattedOrgMembership) SetMarketplaceSubscriptionNil() {
	o.MarketplaceSubscription.Set(nil)
}

// UnsetMarketplaceSubscription ensures that no value is present for MarketplaceSubscription, not even an explicit nil
func (o *FormattedOrgMembership) UnsetMarketplaceSubscription() {
	o.MarketplaceSubscription.Unset()
}

func (o FormattedOrgMembership) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormattedOrgMembership) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if !IsNil(o.DefaultOrg) {
		toSerialize["defaultOrg"] = o.DefaultOrg
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !IsNil(o.Billing) {
		toSerialize["billing"] = o.Billing
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	if !IsNil(o.OrgSlug) {
		toSerialize["orgSlug"] = o.OrgSlug
	}
	if !IsNil(o.OrgUrl) {
		toSerialize["orgUrl"] = o.OrgUrl
	}
	if !IsNil(o.GrafanaCloud) {
		toSerialize["grafanaCloud"] = o.GrafanaCloud
	}
	if o.ResellerId.IsSet() {
		toSerialize["resellerId"] = o.ResellerId.Get()
	}
	if !IsNil(o.ContractTypeId) {
		toSerialize["contractTypeId"] = o.ContractTypeId
	}
	if !IsNil(o.AllowGCloudTrial) {
		toSerialize["allowGCloudTrial"] = o.AllowGCloudTrial
	}
	if !IsNil(o.HlUsage) {
		toSerialize["hlUsage"] = o.HlUsage
	}
	if !IsNil(o.HmCurrentGraphiteUsage) {
		toSerialize["hmCurrentGraphiteUsage"] = o.HmCurrentGraphiteUsage
	}
	if !IsNil(o.HmCurrentPrometheusUsage) {
		toSerialize["hmCurrentPrometheusUsage"] = o.HmCurrentPrometheusUsage
	}
	if !IsNil(o.HgDatasourceCnts) {
		toSerialize["hgDatasourceCnts"] = o.HgDatasourceCnts
	}
	if !IsNil(o.UserFirstName) {
		toSerialize["userFirstName"] = o.UserFirstName
	}
	if !IsNil(o.UserLastName) {
		toSerialize["userLastName"] = o.UserLastName
	}
	if !IsNil(o.UserUsername) {
		toSerialize["userUsername"] = o.UserUsername
	}
	if !IsNil(o.UserStatus) {
		toSerialize["userStatus"] = o.UserStatus
	}
	if !IsNil(o.UserEmail) {
		toSerialize["userEmail"] = o.UserEmail
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if o.MarketplaceSubscription.IsSet() {
		toSerialize["marketplaceSubscription"] = o.MarketplaceSubscription.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormattedOrgMembership) UnmarshalJSON(data []byte) (err error) {
	varFormattedOrgMembership := _FormattedOrgMembership{}

	err = json.Unmarshal(data, &varFormattedOrgMembership)

	if err != nil {
		return err
	}

	*o = FormattedOrgMembership(varFormattedOrgMembership)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "userId")
		delete(additionalProperties, "status")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "defaultOrg")
		delete(additionalProperties, "role")
		delete(additionalProperties, "privacy")
		delete(additionalProperties, "billing")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "updatedBy")
		delete(additionalProperties, "orgName")
		delete(additionalProperties, "orgSlug")
		delete(additionalProperties, "orgUrl")
		delete(additionalProperties, "grafanaCloud")
		delete(additionalProperties, "resellerId")
		delete(additionalProperties, "contractTypeId")
		delete(additionalProperties, "allowGCloudTrial")
		delete(additionalProperties, "hlUsage")
		delete(additionalProperties, "hmCurrentGraphiteUsage")
		delete(additionalProperties, "hmCurrentPrometheusUsage")
		delete(additionalProperties, "hgDatasourceCnts")
		delete(additionalProperties, "userFirstName")
		delete(additionalProperties, "userLastName")
		delete(additionalProperties, "userUsername")
		delete(additionalProperties, "userStatus")
		delete(additionalProperties, "userEmail")
		delete(additionalProperties, "userName")
		delete(additionalProperties, "subscriptions")
		delete(additionalProperties, "marketplaceSubscription")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormattedOrgMembership struct {
	value *FormattedOrgMembership
	isSet bool
}

func (v NullableFormattedOrgMembership) Get() *FormattedOrgMembership {
	return v.value
}

func (v *NullableFormattedOrgMembership) Set(val *FormattedOrgMembership) {
	v.value = val
	v.isSet = true
}

func (v NullableFormattedOrgMembership) IsSet() bool {
	return v.isSet
}

func (v *NullableFormattedOrgMembership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormattedOrgMembership(val *FormattedOrgMembership) *NullableFormattedOrgMembership {
	return &NullableFormattedOrgMembership{value: val, isSet: true}
}

func (v NullableFormattedOrgMembership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormattedOrgMembership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
