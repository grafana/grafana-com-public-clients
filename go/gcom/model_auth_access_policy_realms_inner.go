/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AuthAccessPolicyRealmsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthAccessPolicyRealmsInner{}

// AuthAccessPolicyRealmsInner struct for AuthAccessPolicyRealmsInner
type AuthAccessPolicyRealmsInner struct {
	// Type of the realm
	Type *string `json:"type,omitempty"`
	// The unique identifier of a realm (org or stack).
	Identifier           *string                                         `json:"identifier,omitempty"`
	LabelPolicies        []AuthAccessPolicyRealmsInnerLabelPoliciesInner `json:"labelPolicies,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthAccessPolicyRealmsInner AuthAccessPolicyRealmsInner

// NewAuthAccessPolicyRealmsInner instantiates a new AuthAccessPolicyRealmsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthAccessPolicyRealmsInner() *AuthAccessPolicyRealmsInner {
	this := AuthAccessPolicyRealmsInner{}
	return &this
}

// NewAuthAccessPolicyRealmsInnerWithDefaults instantiates a new AuthAccessPolicyRealmsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthAccessPolicyRealmsInnerWithDefaults() *AuthAccessPolicyRealmsInner {
	this := AuthAccessPolicyRealmsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthAccessPolicyRealmsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAccessPolicyRealmsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthAccessPolicyRealmsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuthAccessPolicyRealmsInner) SetType(v string) {
	o.Type = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *AuthAccessPolicyRealmsInner) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAccessPolicyRealmsInner) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *AuthAccessPolicyRealmsInner) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *AuthAccessPolicyRealmsInner) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetLabelPolicies returns the LabelPolicies field value if set, zero value otherwise.
func (o *AuthAccessPolicyRealmsInner) GetLabelPolicies() []AuthAccessPolicyRealmsInnerLabelPoliciesInner {
	if o == nil || IsNil(o.LabelPolicies) {
		var ret []AuthAccessPolicyRealmsInnerLabelPoliciesInner
		return ret
	}
	return o.LabelPolicies
}

// GetLabelPoliciesOk returns a tuple with the LabelPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAccessPolicyRealmsInner) GetLabelPoliciesOk() ([]AuthAccessPolicyRealmsInnerLabelPoliciesInner, bool) {
	if o == nil || IsNil(o.LabelPolicies) {
		return nil, false
	}
	return o.LabelPolicies, true
}

// HasLabelPolicies returns a boolean if a field has been set.
func (o *AuthAccessPolicyRealmsInner) HasLabelPolicies() bool {
	if o != nil && !IsNil(o.LabelPolicies) {
		return true
	}

	return false
}

// SetLabelPolicies gets a reference to the given []AuthAccessPolicyRealmsInnerLabelPoliciesInner and assigns it to the LabelPolicies field.
func (o *AuthAccessPolicyRealmsInner) SetLabelPolicies(v []AuthAccessPolicyRealmsInnerLabelPoliciesInner) {
	o.LabelPolicies = v
}

func (o AuthAccessPolicyRealmsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthAccessPolicyRealmsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.LabelPolicies) {
		toSerialize["labelPolicies"] = o.LabelPolicies
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthAccessPolicyRealmsInner) UnmarshalJSON(data []byte) (err error) {
	varAuthAccessPolicyRealmsInner := _AuthAccessPolicyRealmsInner{}

	err = json.Unmarshal(data, &varAuthAccessPolicyRealmsInner)

	if err != nil {
		return err
	}

	*o = AuthAccessPolicyRealmsInner(varAuthAccessPolicyRealmsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "labelPolicies")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthAccessPolicyRealmsInner struct {
	value *AuthAccessPolicyRealmsInner
	isSet bool
}

func (v NullableAuthAccessPolicyRealmsInner) Get() *AuthAccessPolicyRealmsInner {
	return v.value
}

func (v *NullableAuthAccessPolicyRealmsInner) Set(val *AuthAccessPolicyRealmsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthAccessPolicyRealmsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthAccessPolicyRealmsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthAccessPolicyRealmsInner(val *AuthAccessPolicyRealmsInner) *NullableAuthAccessPolicyRealmsInner {
	return &NullableAuthAccessPolicyRealmsInner{value: val, isSet: true}
}

func (v NullableAuthAccessPolicyRealmsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthAccessPolicyRealmsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
