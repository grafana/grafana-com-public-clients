/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PdcPrivateConnectivityInfoAnyOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PdcPrivateConnectivityInfoAnyOf3{}

// PdcPrivateConnectivityInfoAnyOf3 struct for PdcPrivateConnectivityInfoAnyOf3
type PdcPrivateConnectivityInfoAnyOf3 struct {
	Name                 string `json:"name"`
	Network              string `json:"network"`
	IpCidrRange          string `json:"ipCidrRange"`
	AdditionalProperties map[string]interface{}
}

type _PdcPrivateConnectivityInfoAnyOf3 PdcPrivateConnectivityInfoAnyOf3

// NewPdcPrivateConnectivityInfoAnyOf3 instantiates a new PdcPrivateConnectivityInfoAnyOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPdcPrivateConnectivityInfoAnyOf3(name string, network string, ipCidrRange string) *PdcPrivateConnectivityInfoAnyOf3 {
	this := PdcPrivateConnectivityInfoAnyOf3{}
	this.Name = name
	this.Network = network
	this.IpCidrRange = ipCidrRange
	return &this
}

// NewPdcPrivateConnectivityInfoAnyOf3WithDefaults instantiates a new PdcPrivateConnectivityInfoAnyOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPdcPrivateConnectivityInfoAnyOf3WithDefaults() *PdcPrivateConnectivityInfoAnyOf3 {
	this := PdcPrivateConnectivityInfoAnyOf3{}
	return &this
}

// GetName returns the Name field value
func (o *PdcPrivateConnectivityInfoAnyOf3) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PdcPrivateConnectivityInfoAnyOf3) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PdcPrivateConnectivityInfoAnyOf3) SetName(v string) {
	o.Name = v
}

// GetNetwork returns the Network field value
func (o *PdcPrivateConnectivityInfoAnyOf3) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *PdcPrivateConnectivityInfoAnyOf3) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *PdcPrivateConnectivityInfoAnyOf3) SetNetwork(v string) {
	o.Network = v
}

// GetIpCidrRange returns the IpCidrRange field value
func (o *PdcPrivateConnectivityInfoAnyOf3) GetIpCidrRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpCidrRange
}

// GetIpCidrRangeOk returns a tuple with the IpCidrRange field value
// and a boolean to check if the value has been set.
func (o *PdcPrivateConnectivityInfoAnyOf3) GetIpCidrRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpCidrRange, true
}

// SetIpCidrRange sets field value
func (o *PdcPrivateConnectivityInfoAnyOf3) SetIpCidrRange(v string) {
	o.IpCidrRange = v
}

func (o PdcPrivateConnectivityInfoAnyOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PdcPrivateConnectivityInfoAnyOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["network"] = o.Network
	toSerialize["ipCidrRange"] = o.IpCidrRange

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PdcPrivateConnectivityInfoAnyOf3) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varPdcPrivateConnectivityInfoAnyOf3 := _PdcPrivateConnectivityInfoAnyOf3{}

	err = json.Unmarshal(data, &varPdcPrivateConnectivityInfoAnyOf3)

	if err != nil {
		return err
	}

	*o = PdcPrivateConnectivityInfoAnyOf3(varPdcPrivateConnectivityInfoAnyOf3)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "network")
		delete(additionalProperties, "ipCidrRange")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePdcPrivateConnectivityInfoAnyOf3 struct {
	value *PdcPrivateConnectivityInfoAnyOf3
	isSet bool
}

func (v NullablePdcPrivateConnectivityInfoAnyOf3) Get() *PdcPrivateConnectivityInfoAnyOf3 {
	return v.value
}

func (v *NullablePdcPrivateConnectivityInfoAnyOf3) Set(val *PdcPrivateConnectivityInfoAnyOf3) {
	v.value = val
	v.isSet = true
}

func (v NullablePdcPrivateConnectivityInfoAnyOf3) IsSet() bool {
	return v.isSet
}

func (v *NullablePdcPrivateConnectivityInfoAnyOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePdcPrivateConnectivityInfoAnyOf3(val *PdcPrivateConnectivityInfoAnyOf3) *NullablePdcPrivateConnectivityInfoAnyOf3 {
	return &NullablePdcPrivateConnectivityInfoAnyOf3{value: val, isSet: true}
}

func (v NullablePdcPrivateConnectivityInfoAnyOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePdcPrivateConnectivityInfoAnyOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
