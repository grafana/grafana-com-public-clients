/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PostAccessPolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccessPolicyRequest{}

// PostAccessPolicyRequest struct for PostAccessPolicyRequest
type PostAccessPolicyRequest struct {
	Attributes  *PostAccessPoliciesRequestAttributes   `json:"attributes,omitempty"`
	Conditions  *PostAccessPoliciesRequestConditions   `json:"conditions,omitempty"`
	DisplayName *string                                `json:"displayName,omitempty"`
	Realms      []PostAccessPoliciesRequestRealmsInner `json:"realms,omitempty"`
	Scopes      []string                               `json:"scopes,omitempty"`
	Status      *string                                `json:"status,omitempty"`
}

// NewPostAccessPolicyRequest instantiates a new PostAccessPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccessPolicyRequest() *PostAccessPolicyRequest {
	this := PostAccessPolicyRequest{}
	return &this
}

// NewPostAccessPolicyRequestWithDefaults instantiates a new PostAccessPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccessPolicyRequestWithDefaults() *PostAccessPolicyRequest {
	this := PostAccessPolicyRequest{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetAttributes() PostAccessPoliciesRequestAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret PostAccessPoliciesRequestAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetAttributesOk() (*PostAccessPoliciesRequestAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given PostAccessPoliciesRequestAttributes and assigns it to the Attributes field.
func (o *PostAccessPolicyRequest) SetAttributes(v PostAccessPoliciesRequestAttributes) {
	o.Attributes = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetConditions() PostAccessPoliciesRequestConditions {
	if o == nil || IsNil(o.Conditions) {
		var ret PostAccessPoliciesRequestConditions
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetConditionsOk() (*PostAccessPoliciesRequestConditions, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given PostAccessPoliciesRequestConditions and assigns it to the Conditions field.
func (o *PostAccessPolicyRequest) SetConditions(v PostAccessPoliciesRequestConditions) {
	o.Conditions = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PostAccessPolicyRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetRealms returns the Realms field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetRealms() []PostAccessPoliciesRequestRealmsInner {
	if o == nil || IsNil(o.Realms) {
		var ret []PostAccessPoliciesRequestRealmsInner
		return ret
	}
	return o.Realms
}

// GetRealmsOk returns a tuple with the Realms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetRealmsOk() ([]PostAccessPoliciesRequestRealmsInner, bool) {
	if o == nil || IsNil(o.Realms) {
		return nil, false
	}
	return o.Realms, true
}

// HasRealms returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasRealms() bool {
	if o != nil && !IsNil(o.Realms) {
		return true
	}

	return false
}

// SetRealms gets a reference to the given []PostAccessPoliciesRequestRealmsInner and assigns it to the Realms field.
func (o *PostAccessPolicyRequest) SetRealms(v []PostAccessPoliciesRequestRealmsInner) {
	o.Realms = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *PostAccessPolicyRequest) SetScopes(v []string) {
	o.Scopes = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostAccessPolicyRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPolicyRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostAccessPolicyRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostAccessPolicyRequest) SetStatus(v string) {
	o.Status = &v
}

func (o PostAccessPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccessPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Realms) {
		toSerialize["realms"] = o.Realms
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullablePostAccessPolicyRequest struct {
	value *PostAccessPolicyRequest
	isSet bool
}

func (v NullablePostAccessPolicyRequest) Get() *PostAccessPolicyRequest {
	return v.value
}

func (v *NullablePostAccessPolicyRequest) Set(val *PostAccessPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccessPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccessPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccessPolicyRequest(val *PostAccessPolicyRequest) *NullablePostAccessPolicyRequest {
	return &NullablePostAccessPolicyRequest{value: val, isSet: true}
}

func (v NullablePostAccessPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccessPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
