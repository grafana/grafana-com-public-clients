/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise       

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PostAccessPoliciesRequestConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccessPoliciesRequestConditions{}

// PostAccessPoliciesRequestConditions struct for PostAccessPoliciesRequestConditions
type PostAccessPoliciesRequestConditions struct {
	AllowedSubnets []string `json:"allowedSubnets,omitempty"`
}

// NewPostAccessPoliciesRequestConditions instantiates a new PostAccessPoliciesRequestConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccessPoliciesRequestConditions() *PostAccessPoliciesRequestConditions {
	this := PostAccessPoliciesRequestConditions{}
	return &this
}

// NewPostAccessPoliciesRequestConditionsWithDefaults instantiates a new PostAccessPoliciesRequestConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccessPoliciesRequestConditionsWithDefaults() *PostAccessPoliciesRequestConditions {
	this := PostAccessPoliciesRequestConditions{}
	return &this
}

// GetAllowedSubnets returns the AllowedSubnets field value if set, zero value otherwise.
func (o *PostAccessPoliciesRequestConditions) GetAllowedSubnets() []string {
	if o == nil || IsNil(o.AllowedSubnets) {
		var ret []string
		return ret
	}
	return o.AllowedSubnets
}

// GetAllowedSubnetsOk returns a tuple with the AllowedSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccessPoliciesRequestConditions) GetAllowedSubnetsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedSubnets) {
		return nil, false
	}
	return o.AllowedSubnets, true
}

// HasAllowedSubnets returns a boolean if a field has been set.
func (o *PostAccessPoliciesRequestConditions) HasAllowedSubnets() bool {
	if o != nil && !IsNil(o.AllowedSubnets) {
		return true
	}

	return false
}

// SetAllowedSubnets gets a reference to the given []string and assigns it to the AllowedSubnets field.
func (o *PostAccessPoliciesRequestConditions) SetAllowedSubnets(v []string) {
	o.AllowedSubnets = v
}

func (o PostAccessPoliciesRequestConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccessPoliciesRequestConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedSubnets) {
		toSerialize["allowedSubnets"] = o.AllowedSubnets
	}
	return toSerialize, nil
}

type NullablePostAccessPoliciesRequestConditions struct {
	value *PostAccessPoliciesRequestConditions
	isSet bool
}

func (v NullablePostAccessPoliciesRequestConditions) Get() *PostAccessPoliciesRequestConditions {
	return v.value
}

func (v *NullablePostAccessPoliciesRequestConditions) Set(val *PostAccessPoliciesRequestConditions) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccessPoliciesRequestConditions) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccessPoliciesRequestConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccessPoliciesRequestConditions(val *PostAccessPoliciesRequestConditions) *NullablePostAccessPoliciesRequestConditions {
	return &NullablePostAccessPoliciesRequestConditions{value: val, isSet: true}
}

func (v NullablePostAccessPoliciesRequestConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccessPoliciesRequestConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


