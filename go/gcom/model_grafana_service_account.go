/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"fmt"
)

// checks if the GrafanaServiceAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrafanaServiceAccount{}

// GrafanaServiceAccount struct for GrafanaServiceAccount
type GrafanaServiceAccount struct {
	Id                   float32 `json:"id"`
	Name                 string  `json:"name"`
	Login                string  `json:"login"`
	IsDisabled           bool    `json:"isDisabled"`
	Role                 string  `json:"role"`
	Tokens               float32 `json:"tokens"`
	AvatarUrl            string  `json:"avatarUrl"`
	AdditionalProperties map[string]interface{}
}

type _GrafanaServiceAccount GrafanaServiceAccount

// NewGrafanaServiceAccount instantiates a new GrafanaServiceAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrafanaServiceAccount(id float32, name string, login string, isDisabled bool, role string, tokens float32, avatarUrl string) *GrafanaServiceAccount {
	this := GrafanaServiceAccount{}
	this.Id = id
	this.Name = name
	this.Login = login
	this.IsDisabled = isDisabled
	this.Role = role
	this.Tokens = tokens
	this.AvatarUrl = avatarUrl
	return &this
}

// NewGrafanaServiceAccountWithDefaults instantiates a new GrafanaServiceAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrafanaServiceAccountWithDefaults() *GrafanaServiceAccount {
	this := GrafanaServiceAccount{}
	return &this
}

// GetId returns the Id field value
func (o *GrafanaServiceAccount) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GrafanaServiceAccount) SetId(v float32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GrafanaServiceAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GrafanaServiceAccount) SetName(v string) {
	o.Name = v
}

// GetLogin returns the Login field value
func (o *GrafanaServiceAccount) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *GrafanaServiceAccount) SetLogin(v string) {
	o.Login = v
}

// GetIsDisabled returns the IsDisabled field value
func (o *GrafanaServiceAccount) GetIsDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetIsDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDisabled, true
}

// SetIsDisabled sets field value
func (o *GrafanaServiceAccount) SetIsDisabled(v bool) {
	o.IsDisabled = v
}

// GetRole returns the Role field value
func (o *GrafanaServiceAccount) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *GrafanaServiceAccount) SetRole(v string) {
	o.Role = v
}

// GetTokens returns the Tokens field value
func (o *GrafanaServiceAccount) GetTokens() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetTokensOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tokens, true
}

// SetTokens sets field value
func (o *GrafanaServiceAccount) SetTokens(v float32) {
	o.Tokens = v
}

// GetAvatarUrl returns the AvatarUrl field value
func (o *GrafanaServiceAccount) GetAvatarUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value
// and a boolean to check if the value has been set.
func (o *GrafanaServiceAccount) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvatarUrl, true
}

// SetAvatarUrl sets field value
func (o *GrafanaServiceAccount) SetAvatarUrl(v string) {
	o.AvatarUrl = v
}

func (o GrafanaServiceAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GrafanaServiceAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["login"] = o.Login
	toSerialize["isDisabled"] = o.IsDisabled
	toSerialize["role"] = o.Role
	toSerialize["tokens"] = o.Tokens
	toSerialize["avatarUrl"] = o.AvatarUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GrafanaServiceAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"login",
		"isDisabled",
		"role",
		"tokens",
		"avatarUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGrafanaServiceAccount := _GrafanaServiceAccount{}

	err = json.Unmarshal(data, &varGrafanaServiceAccount)

	if err != nil {
		return err
	}

	*o = GrafanaServiceAccount(varGrafanaServiceAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "login")
		delete(additionalProperties, "isDisabled")
		delete(additionalProperties, "role")
		delete(additionalProperties, "tokens")
		delete(additionalProperties, "avatarUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGrafanaServiceAccount struct {
	value *GrafanaServiceAccount
	isSet bool
}

func (v NullableGrafanaServiceAccount) Get() *GrafanaServiceAccount {
	return v.value
}

func (v *NullableGrafanaServiceAccount) Set(val *GrafanaServiceAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableGrafanaServiceAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableGrafanaServiceAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrafanaServiceAccount(val *GrafanaServiceAccount) *NullableGrafanaServiceAccount {
	return &NullableGrafanaServiceAccount{value: val, isSet: true}
}

func (v NullableGrafanaServiceAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrafanaServiceAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
