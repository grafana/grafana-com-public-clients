/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ItemsInner3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemsInner3{}

// ItemsInner3 struct for ItemsInner3
type ItemsInner3 struct {
	Usages               []UsagesInner `json:"usages"`
	AdditionalProperties map[string]interface{}
}

type _ItemsInner3 ItemsInner3

// NewItemsInner3 instantiates a new ItemsInner3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemsInner3(usages []UsagesInner) *ItemsInner3 {
	this := ItemsInner3{}
	this.Usages = usages
	return &this
}

// NewItemsInner3WithDefaults instantiates a new ItemsInner3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemsInner3WithDefaults() *ItemsInner3 {
	this := ItemsInner3{}
	return &this
}

// GetUsages returns the Usages field value
func (o *ItemsInner3) GetUsages() []UsagesInner {
	if o == nil {
		var ret []UsagesInner
		return ret
	}

	return o.Usages
}

// GetUsagesOk returns a tuple with the Usages field value
// and a boolean to check if the value has been set.
func (o *ItemsInner3) GetUsagesOk() ([]UsagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Usages, true
}

// SetUsages sets field value
func (o *ItemsInner3) SetUsages(v []UsagesInner) {
	o.Usages = v
}

func (o ItemsInner3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemsInner3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["usages"] = o.Usages

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ItemsInner3) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varItemsInner3 := _ItemsInner3{}

	err = json.Unmarshal(data, &varItemsInner3)

	if err != nil {
		return err
	}

	*o = ItemsInner3(varItemsInner3)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "usages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableItemsInner3 struct {
	value *ItemsInner3
	isSet bool
}

func (v NullableItemsInner3) Get() *ItemsInner3 {
	return v.value
}

func (v *NullableItemsInner3) Set(val *ItemsInner3) {
	v.value = val
	v.isSet = true
}

func (v NullableItemsInner3) IsSet() bool {
	return v.isSet
}

func (v *NullableItemsInner3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemsInner3(val *ItemsInner3) *NullableItemsInner3 {
	return &NullableItemsInner3{value: val, isSet: true}
}

func (v NullableItemsInner3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemsInner3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
