/*
GCOM API

 Grafana.com API (or GCOM). This documentation includes all endpoints of GCOM API including the staff ones.  Looking for GCOM API client packages? You can find them at [grafana-com-clients](https://github.com/grafana/grafana-com-clients) repository.  If you have any questions, please contact us at #grafana_com on Slack or open an issue at [Grafana-com repository](https://github.com/grafana/grafana-com/issues/new).  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: internal
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PostInstancesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostInstancesRequest{}

// PostInstancesRequest struct for PostInstancesRequest
type PostInstancesRequest struct {
	AdminUserInstance               *bool      `json:"adminUserInstance,omitempty"`
	AlertQuota                      *int32     `json:"alertQuota,omitempty"`
	Alerts                          *bool      `json:"alerts,omitempty"`
	AmCluster                       *string    `json:"amCluster,omitempty"`
	BillingEndDate                  *time.Time `json:"billingEndDate,omitempty"`
	BillingStartDate                *time.Time `json:"billingStartDate,omitempty"`
	Cluster                         *string    `json:"cluster,omitempty"`
	CreateTemporaryLicenseIfMissing *bool      `json:"createTemporaryLicenseIfMissing,omitempty"`
	DashboardQuota                  *int32     `json:"dashboardQuota,omitempty"`
	Description                     *string    `json:"description,omitempty"`
	Graphite                        *bool      `json:"graphite,omitempty"`
	HlCluster                       *string    `json:"hlCluster,omitempty"`
	HlInstanceId                    *int32     `json:"hlInstanceId,omitempty"`
	HmGraphiteCluster               *string    `json:"hmGraphiteCluster,omitempty"`
	HmGraphiteType                  *string    `json:"hmGraphiteType,omitempty"`
	HmPromCluster                   *string    `json:"hmPromCluster,omitempty"`
	Hosted                          *bool      `json:"hosted,omitempty"`
	HtCluster                       *string    `json:"htCluster,omitempty"`
	Incident                        *bool      `json:"incident,omitempty"`
	IssueLink                       *string    `json:"issueLink,omitempty"`
	K6OrgId                         *int32     `json:"k6OrgId,omitempty"`
	Logs                            *bool      `json:"logs,omitempty"`
	MachineLearning                 *bool      `json:"machineLearning,omitempty"`
	MachineLearningLogsToken        *string    `json:"machineLearningLogsToken,omitempty"`
	Multitenant                     *bool      `json:"multitenant,omitempty"`
	Name                            string     `json:"name"`
	Org                             *string    `json:"org,omitempty"`
	Plan                            *string    `json:"plan,omitempty"`
	Plugins                         []string   `json:"plugins,omitempty"`
	Prometheus                      *bool      `json:"prometheus,omitempty"`
	PublicInstance                  *bool      `json:"publicInstance,omitempty"`
	ReasonType                      *string    `json:"reasonType,omitempty"`
	Region                          *string    `json:"region,omitempty"`
	SkipOrgConflictCheck            *bool      `json:"skipOrgConflictCheck,omitempty"`
	Slug                            *string    `json:"slug,omitempty"`
	Trial                           *bool      `json:"trial,omitempty"`
	TrialExpiresAt                  *time.Time `json:"trialExpiresAt,omitempty"`
	Url                             *string    `json:"url,omitempty"`
	UsernameOrEmail                 *string    `json:"usernameOrEmail,omitempty"`
	UserQuota                       *int32     `json:"userQuota,omitempty"`
	Version                         *string    `json:"version,omitempty"`
	WaitForReadiness                *bool      `json:"waitForReadiness,omitempty"`
}

type _PostInstancesRequest PostInstancesRequest

// NewPostInstancesRequest instantiates a new PostInstancesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostInstancesRequest(name string) *PostInstancesRequest {
	this := PostInstancesRequest{}
	this.Name = name
	var waitForReadiness bool = true
	this.WaitForReadiness = &waitForReadiness
	return &this
}

// NewPostInstancesRequestWithDefaults instantiates a new PostInstancesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostInstancesRequestWithDefaults() *PostInstancesRequest {
	this := PostInstancesRequest{}
	var waitForReadiness bool = true
	this.WaitForReadiness = &waitForReadiness
	return &this
}

// GetAdminUserInstance returns the AdminUserInstance field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetAdminUserInstance() bool {
	if o == nil || IsNil(o.AdminUserInstance) {
		var ret bool
		return ret
	}
	return *o.AdminUserInstance
}

// GetAdminUserInstanceOk returns a tuple with the AdminUserInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetAdminUserInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.AdminUserInstance) {
		return nil, false
	}
	return o.AdminUserInstance, true
}

// HasAdminUserInstance returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasAdminUserInstance() bool {
	if o != nil && !IsNil(o.AdminUserInstance) {
		return true
	}

	return false
}

// SetAdminUserInstance gets a reference to the given bool and assigns it to the AdminUserInstance field.
func (o *PostInstancesRequest) SetAdminUserInstance(v bool) {
	o.AdminUserInstance = &v
}

// GetAlertQuota returns the AlertQuota field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetAlertQuota() int32 {
	if o == nil || IsNil(o.AlertQuota) {
		var ret int32
		return ret
	}
	return *o.AlertQuota
}

// GetAlertQuotaOk returns a tuple with the AlertQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetAlertQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertQuota) {
		return nil, false
	}
	return o.AlertQuota, true
}

// HasAlertQuota returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasAlertQuota() bool {
	if o != nil && !IsNil(o.AlertQuota) {
		return true
	}

	return false
}

// SetAlertQuota gets a reference to the given int32 and assigns it to the AlertQuota field.
func (o *PostInstancesRequest) SetAlertQuota(v int32) {
	o.AlertQuota = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetAlerts() bool {
	if o == nil || IsNil(o.Alerts) {
		var ret bool
		return ret
	}
	return *o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetAlertsOk() (*bool, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given bool and assigns it to the Alerts field.
func (o *PostInstancesRequest) SetAlerts(v bool) {
	o.Alerts = &v
}

// GetAmCluster returns the AmCluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetAmCluster() string {
	if o == nil || IsNil(o.AmCluster) {
		var ret string
		return ret
	}
	return *o.AmCluster
}

// GetAmClusterOk returns a tuple with the AmCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetAmClusterOk() (*string, bool) {
	if o == nil || IsNil(o.AmCluster) {
		return nil, false
	}
	return o.AmCluster, true
}

// HasAmCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasAmCluster() bool {
	if o != nil && !IsNil(o.AmCluster) {
		return true
	}

	return false
}

// SetAmCluster gets a reference to the given string and assigns it to the AmCluster field.
func (o *PostInstancesRequest) SetAmCluster(v string) {
	o.AmCluster = &v
}

// GetBillingEndDate returns the BillingEndDate field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetBillingEndDate() time.Time {
	if o == nil || IsNil(o.BillingEndDate) {
		var ret time.Time
		return ret
	}
	return *o.BillingEndDate
}

// GetBillingEndDateOk returns a tuple with the BillingEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetBillingEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BillingEndDate) {
		return nil, false
	}
	return o.BillingEndDate, true
}

// HasBillingEndDate returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasBillingEndDate() bool {
	if o != nil && !IsNil(o.BillingEndDate) {
		return true
	}

	return false
}

// SetBillingEndDate gets a reference to the given time.Time and assigns it to the BillingEndDate field.
func (o *PostInstancesRequest) SetBillingEndDate(v time.Time) {
	o.BillingEndDate = &v
}

// GetBillingStartDate returns the BillingStartDate field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetBillingStartDate() time.Time {
	if o == nil || IsNil(o.BillingStartDate) {
		var ret time.Time
		return ret
	}
	return *o.BillingStartDate
}

// GetBillingStartDateOk returns a tuple with the BillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetBillingStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BillingStartDate) {
		return nil, false
	}
	return o.BillingStartDate, true
}

// HasBillingStartDate returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasBillingStartDate() bool {
	if o != nil && !IsNil(o.BillingStartDate) {
		return true
	}

	return false
}

// SetBillingStartDate gets a reference to the given time.Time and assigns it to the BillingStartDate field.
func (o *PostInstancesRequest) SetBillingStartDate(v time.Time) {
	o.BillingStartDate = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *PostInstancesRequest) SetCluster(v string) {
	o.Cluster = &v
}

// GetCreateTemporaryLicenseIfMissing returns the CreateTemporaryLicenseIfMissing field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetCreateTemporaryLicenseIfMissing() bool {
	if o == nil || IsNil(o.CreateTemporaryLicenseIfMissing) {
		var ret bool
		return ret
	}
	return *o.CreateTemporaryLicenseIfMissing
}

// GetCreateTemporaryLicenseIfMissingOk returns a tuple with the CreateTemporaryLicenseIfMissing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetCreateTemporaryLicenseIfMissingOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateTemporaryLicenseIfMissing) {
		return nil, false
	}
	return o.CreateTemporaryLicenseIfMissing, true
}

// HasCreateTemporaryLicenseIfMissing returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasCreateTemporaryLicenseIfMissing() bool {
	if o != nil && !IsNil(o.CreateTemporaryLicenseIfMissing) {
		return true
	}

	return false
}

// SetCreateTemporaryLicenseIfMissing gets a reference to the given bool and assigns it to the CreateTemporaryLicenseIfMissing field.
func (o *PostInstancesRequest) SetCreateTemporaryLicenseIfMissing(v bool) {
	o.CreateTemporaryLicenseIfMissing = &v
}

// GetDashboardQuota returns the DashboardQuota field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetDashboardQuota() int32 {
	if o == nil || IsNil(o.DashboardQuota) {
		var ret int32
		return ret
	}
	return *o.DashboardQuota
}

// GetDashboardQuotaOk returns a tuple with the DashboardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetDashboardQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.DashboardQuota) {
		return nil, false
	}
	return o.DashboardQuota, true
}

// HasDashboardQuota returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasDashboardQuota() bool {
	if o != nil && !IsNil(o.DashboardQuota) {
		return true
	}

	return false
}

// SetDashboardQuota gets a reference to the given int32 and assigns it to the DashboardQuota field.
func (o *PostInstancesRequest) SetDashboardQuota(v int32) {
	o.DashboardQuota = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostInstancesRequest) SetDescription(v string) {
	o.Description = &v
}

// GetGraphite returns the Graphite field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetGraphite() bool {
	if o == nil || IsNil(o.Graphite) {
		var ret bool
		return ret
	}
	return *o.Graphite
}

// GetGraphiteOk returns a tuple with the Graphite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetGraphiteOk() (*bool, bool) {
	if o == nil || IsNil(o.Graphite) {
		return nil, false
	}
	return o.Graphite, true
}

// HasGraphite returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasGraphite() bool {
	if o != nil && !IsNil(o.Graphite) {
		return true
	}

	return false
}

// SetGraphite gets a reference to the given bool and assigns it to the Graphite field.
func (o *PostInstancesRequest) SetGraphite(v bool) {
	o.Graphite = &v
}

// GetHlCluster returns the HlCluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHlCluster() string {
	if o == nil || IsNil(o.HlCluster) {
		var ret string
		return ret
	}
	return *o.HlCluster
}

// GetHlClusterOk returns a tuple with the HlCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHlClusterOk() (*string, bool) {
	if o == nil || IsNil(o.HlCluster) {
		return nil, false
	}
	return o.HlCluster, true
}

// HasHlCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHlCluster() bool {
	if o != nil && !IsNil(o.HlCluster) {
		return true
	}

	return false
}

// SetHlCluster gets a reference to the given string and assigns it to the HlCluster field.
func (o *PostInstancesRequest) SetHlCluster(v string) {
	o.HlCluster = &v
}

// GetHlInstanceId returns the HlInstanceId field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHlInstanceId() int32 {
	if o == nil || IsNil(o.HlInstanceId) {
		var ret int32
		return ret
	}
	return *o.HlInstanceId
}

// GetHlInstanceIdOk returns a tuple with the HlInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHlInstanceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HlInstanceId) {
		return nil, false
	}
	return o.HlInstanceId, true
}

// HasHlInstanceId returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHlInstanceId() bool {
	if o != nil && !IsNil(o.HlInstanceId) {
		return true
	}

	return false
}

// SetHlInstanceId gets a reference to the given int32 and assigns it to the HlInstanceId field.
func (o *PostInstancesRequest) SetHlInstanceId(v int32) {
	o.HlInstanceId = &v
}

// GetHmGraphiteCluster returns the HmGraphiteCluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHmGraphiteCluster() string {
	if o == nil || IsNil(o.HmGraphiteCluster) {
		var ret string
		return ret
	}
	return *o.HmGraphiteCluster
}

// GetHmGraphiteClusterOk returns a tuple with the HmGraphiteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHmGraphiteClusterOk() (*string, bool) {
	if o == nil || IsNil(o.HmGraphiteCluster) {
		return nil, false
	}
	return o.HmGraphiteCluster, true
}

// HasHmGraphiteCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHmGraphiteCluster() bool {
	if o != nil && !IsNil(o.HmGraphiteCluster) {
		return true
	}

	return false
}

// SetHmGraphiteCluster gets a reference to the given string and assigns it to the HmGraphiteCluster field.
func (o *PostInstancesRequest) SetHmGraphiteCluster(v string) {
	o.HmGraphiteCluster = &v
}

// GetHmGraphiteType returns the HmGraphiteType field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHmGraphiteType() string {
	if o == nil || IsNil(o.HmGraphiteType) {
		var ret string
		return ret
	}
	return *o.HmGraphiteType
}

// GetHmGraphiteTypeOk returns a tuple with the HmGraphiteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHmGraphiteTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HmGraphiteType) {
		return nil, false
	}
	return o.HmGraphiteType, true
}

// HasHmGraphiteType returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHmGraphiteType() bool {
	if o != nil && !IsNil(o.HmGraphiteType) {
		return true
	}

	return false
}

// SetHmGraphiteType gets a reference to the given string and assigns it to the HmGraphiteType field.
func (o *PostInstancesRequest) SetHmGraphiteType(v string) {
	o.HmGraphiteType = &v
}

// GetHmPromCluster returns the HmPromCluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHmPromCluster() string {
	if o == nil || IsNil(o.HmPromCluster) {
		var ret string
		return ret
	}
	return *o.HmPromCluster
}

// GetHmPromClusterOk returns a tuple with the HmPromCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHmPromClusterOk() (*string, bool) {
	if o == nil || IsNil(o.HmPromCluster) {
		return nil, false
	}
	return o.HmPromCluster, true
}

// HasHmPromCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHmPromCluster() bool {
	if o != nil && !IsNil(o.HmPromCluster) {
		return true
	}

	return false
}

// SetHmPromCluster gets a reference to the given string and assigns it to the HmPromCluster field.
func (o *PostInstancesRequest) SetHmPromCluster(v string) {
	o.HmPromCluster = &v
}

// GetHosted returns the Hosted field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHosted() bool {
	if o == nil || IsNil(o.Hosted) {
		var ret bool
		return ret
	}
	return *o.Hosted
}

// GetHostedOk returns a tuple with the Hosted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHostedOk() (*bool, bool) {
	if o == nil || IsNil(o.Hosted) {
		return nil, false
	}
	return o.Hosted, true
}

// HasHosted returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHosted() bool {
	if o != nil && !IsNil(o.Hosted) {
		return true
	}

	return false
}

// SetHosted gets a reference to the given bool and assigns it to the Hosted field.
func (o *PostInstancesRequest) SetHosted(v bool) {
	o.Hosted = &v
}

// GetHtCluster returns the HtCluster field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetHtCluster() string {
	if o == nil || IsNil(o.HtCluster) {
		var ret string
		return ret
	}
	return *o.HtCluster
}

// GetHtClusterOk returns a tuple with the HtCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetHtClusterOk() (*string, bool) {
	if o == nil || IsNil(o.HtCluster) {
		return nil, false
	}
	return o.HtCluster, true
}

// HasHtCluster returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasHtCluster() bool {
	if o != nil && !IsNil(o.HtCluster) {
		return true
	}

	return false
}

// SetHtCluster gets a reference to the given string and assigns it to the HtCluster field.
func (o *PostInstancesRequest) SetHtCluster(v string) {
	o.HtCluster = &v
}

// GetIncident returns the Incident field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetIncident() bool {
	if o == nil || IsNil(o.Incident) {
		var ret bool
		return ret
	}
	return *o.Incident
}

// GetIncidentOk returns a tuple with the Incident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetIncidentOk() (*bool, bool) {
	if o == nil || IsNil(o.Incident) {
		return nil, false
	}
	return o.Incident, true
}

// HasIncident returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasIncident() bool {
	if o != nil && !IsNil(o.Incident) {
		return true
	}

	return false
}

// SetIncident gets a reference to the given bool and assigns it to the Incident field.
func (o *PostInstancesRequest) SetIncident(v bool) {
	o.Incident = &v
}

// GetIssueLink returns the IssueLink field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetIssueLink() string {
	if o == nil || IsNil(o.IssueLink) {
		var ret string
		return ret
	}
	return *o.IssueLink
}

// GetIssueLinkOk returns a tuple with the IssueLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetIssueLinkOk() (*string, bool) {
	if o == nil || IsNil(o.IssueLink) {
		return nil, false
	}
	return o.IssueLink, true
}

// HasIssueLink returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasIssueLink() bool {
	if o != nil && !IsNil(o.IssueLink) {
		return true
	}

	return false
}

// SetIssueLink gets a reference to the given string and assigns it to the IssueLink field.
func (o *PostInstancesRequest) SetIssueLink(v string) {
	o.IssueLink = &v
}

// GetK6OrgId returns the K6OrgId field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetK6OrgId() int32 {
	if o == nil || IsNil(o.K6OrgId) {
		var ret int32
		return ret
	}
	return *o.K6OrgId
}

// GetK6OrgIdOk returns a tuple with the K6OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetK6OrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.K6OrgId) {
		return nil, false
	}
	return o.K6OrgId, true
}

// HasK6OrgId returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasK6OrgId() bool {
	if o != nil && !IsNil(o.K6OrgId) {
		return true
	}

	return false
}

// SetK6OrgId gets a reference to the given int32 and assigns it to the K6OrgId field.
func (o *PostInstancesRequest) SetK6OrgId(v int32) {
	o.K6OrgId = &v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetLogs() bool {
	if o == nil || IsNil(o.Logs) {
		var ret bool
		return ret
	}
	return *o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetLogsOk() (*bool, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given bool and assigns it to the Logs field.
func (o *PostInstancesRequest) SetLogs(v bool) {
	o.Logs = &v
}

// GetMachineLearning returns the MachineLearning field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetMachineLearning() bool {
	if o == nil || IsNil(o.MachineLearning) {
		var ret bool
		return ret
	}
	return *o.MachineLearning
}

// GetMachineLearningOk returns a tuple with the MachineLearning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetMachineLearningOk() (*bool, bool) {
	if o == nil || IsNil(o.MachineLearning) {
		return nil, false
	}
	return o.MachineLearning, true
}

// HasMachineLearning returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasMachineLearning() bool {
	if o != nil && !IsNil(o.MachineLearning) {
		return true
	}

	return false
}

// SetMachineLearning gets a reference to the given bool and assigns it to the MachineLearning field.
func (o *PostInstancesRequest) SetMachineLearning(v bool) {
	o.MachineLearning = &v
}

// GetMachineLearningLogsToken returns the MachineLearningLogsToken field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetMachineLearningLogsToken() string {
	if o == nil || IsNil(o.MachineLearningLogsToken) {
		var ret string
		return ret
	}
	return *o.MachineLearningLogsToken
}

// GetMachineLearningLogsTokenOk returns a tuple with the MachineLearningLogsToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetMachineLearningLogsTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MachineLearningLogsToken) {
		return nil, false
	}
	return o.MachineLearningLogsToken, true
}

// HasMachineLearningLogsToken returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasMachineLearningLogsToken() bool {
	if o != nil && !IsNil(o.MachineLearningLogsToken) {
		return true
	}

	return false
}

// SetMachineLearningLogsToken gets a reference to the given string and assigns it to the MachineLearningLogsToken field.
func (o *PostInstancesRequest) SetMachineLearningLogsToken(v string) {
	o.MachineLearningLogsToken = &v
}

// GetMultitenant returns the Multitenant field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetMultitenant() bool {
	if o == nil || IsNil(o.Multitenant) {
		var ret bool
		return ret
	}
	return *o.Multitenant
}

// GetMultitenantOk returns a tuple with the Multitenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetMultitenantOk() (*bool, bool) {
	if o == nil || IsNil(o.Multitenant) {
		return nil, false
	}
	return o.Multitenant, true
}

// HasMultitenant returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasMultitenant() bool {
	if o != nil && !IsNil(o.Multitenant) {
		return true
	}

	return false
}

// SetMultitenant gets a reference to the given bool and assigns it to the Multitenant field.
func (o *PostInstancesRequest) SetMultitenant(v bool) {
	o.Multitenant = &v
}

// GetName returns the Name field value
func (o *PostInstancesRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostInstancesRequest) SetName(v string) {
	o.Name = v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetOrg() string {
	if o == nil || IsNil(o.Org) {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetOrgOk() (*string, bool) {
	if o == nil || IsNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasOrg() bool {
	if o != nil && !IsNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *PostInstancesRequest) SetOrg(v string) {
	o.Org = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *PostInstancesRequest) SetPlan(v string) {
	o.Plan = &v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetPlugins() []string {
	if o == nil || IsNil(o.Plugins) {
		var ret []string
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetPluginsOk() ([]string, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []string and assigns it to the Plugins field.
func (o *PostInstancesRequest) SetPlugins(v []string) {
	o.Plugins = v
}

// GetPrometheus returns the Prometheus field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetPrometheus() bool {
	if o == nil || IsNil(o.Prometheus) {
		var ret bool
		return ret
	}
	return *o.Prometheus
}

// GetPrometheusOk returns a tuple with the Prometheus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetPrometheusOk() (*bool, bool) {
	if o == nil || IsNil(o.Prometheus) {
		return nil, false
	}
	return o.Prometheus, true
}

// HasPrometheus returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasPrometheus() bool {
	if o != nil && !IsNil(o.Prometheus) {
		return true
	}

	return false
}

// SetPrometheus gets a reference to the given bool and assigns it to the Prometheus field.
func (o *PostInstancesRequest) SetPrometheus(v bool) {
	o.Prometheus = &v
}

// GetPublicInstance returns the PublicInstance field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetPublicInstance() bool {
	if o == nil || IsNil(o.PublicInstance) {
		var ret bool
		return ret
	}
	return *o.PublicInstance
}

// GetPublicInstanceOk returns a tuple with the PublicInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetPublicInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicInstance) {
		return nil, false
	}
	return o.PublicInstance, true
}

// HasPublicInstance returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasPublicInstance() bool {
	if o != nil && !IsNil(o.PublicInstance) {
		return true
	}

	return false
}

// SetPublicInstance gets a reference to the given bool and assigns it to the PublicInstance field.
func (o *PostInstancesRequest) SetPublicInstance(v bool) {
	o.PublicInstance = &v
}

// GetReasonType returns the ReasonType field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetReasonType() string {
	if o == nil || IsNil(o.ReasonType) {
		var ret string
		return ret
	}
	return *o.ReasonType
}

// GetReasonTypeOk returns a tuple with the ReasonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetReasonTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonType) {
		return nil, false
	}
	return o.ReasonType, true
}

// HasReasonType returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasReasonType() bool {
	if o != nil && !IsNil(o.ReasonType) {
		return true
	}

	return false
}

// SetReasonType gets a reference to the given string and assigns it to the ReasonType field.
func (o *PostInstancesRequest) SetReasonType(v string) {
	o.ReasonType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PostInstancesRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSkipOrgConflictCheck returns the SkipOrgConflictCheck field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetSkipOrgConflictCheck() bool {
	if o == nil || IsNil(o.SkipOrgConflictCheck) {
		var ret bool
		return ret
	}
	return *o.SkipOrgConflictCheck
}

// GetSkipOrgConflictCheckOk returns a tuple with the SkipOrgConflictCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetSkipOrgConflictCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOrgConflictCheck) {
		return nil, false
	}
	return o.SkipOrgConflictCheck, true
}

// HasSkipOrgConflictCheck returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasSkipOrgConflictCheck() bool {
	if o != nil && !IsNil(o.SkipOrgConflictCheck) {
		return true
	}

	return false
}

// SetSkipOrgConflictCheck gets a reference to the given bool and assigns it to the SkipOrgConflictCheck field.
func (o *PostInstancesRequest) SetSkipOrgConflictCheck(v bool) {
	o.SkipOrgConflictCheck = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *PostInstancesRequest) SetSlug(v string) {
	o.Slug = &v
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetTrial() bool {
	if o == nil || IsNil(o.Trial) {
		var ret bool
		return ret
	}
	return *o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.Trial) {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasTrial() bool {
	if o != nil && !IsNil(o.Trial) {
		return true
	}

	return false
}

// SetTrial gets a reference to the given bool and assigns it to the Trial field.
func (o *PostInstancesRequest) SetTrial(v bool) {
	o.Trial = &v
}

// GetTrialExpiresAt returns the TrialExpiresAt field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetTrialExpiresAt() time.Time {
	if o == nil || IsNil(o.TrialExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.TrialExpiresAt
}

// GetTrialExpiresAtOk returns a tuple with the TrialExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetTrialExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TrialExpiresAt) {
		return nil, false
	}
	return o.TrialExpiresAt, true
}

// HasTrialExpiresAt returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasTrialExpiresAt() bool {
	if o != nil && !IsNil(o.TrialExpiresAt) {
		return true
	}

	return false
}

// SetTrialExpiresAt gets a reference to the given time.Time and assigns it to the TrialExpiresAt field.
func (o *PostInstancesRequest) SetTrialExpiresAt(v time.Time) {
	o.TrialExpiresAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PostInstancesRequest) SetUrl(v string) {
	o.Url = &v
}

// GetUsernameOrEmail returns the UsernameOrEmail field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetUsernameOrEmail() string {
	if o == nil || IsNil(o.UsernameOrEmail) {
		var ret string
		return ret
	}
	return *o.UsernameOrEmail
}

// GetUsernameOrEmailOk returns a tuple with the UsernameOrEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetUsernameOrEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UsernameOrEmail) {
		return nil, false
	}
	return o.UsernameOrEmail, true
}

// HasUsernameOrEmail returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasUsernameOrEmail() bool {
	if o != nil && !IsNil(o.UsernameOrEmail) {
		return true
	}

	return false
}

// SetUsernameOrEmail gets a reference to the given string and assigns it to the UsernameOrEmail field.
func (o *PostInstancesRequest) SetUsernameOrEmail(v string) {
	o.UsernameOrEmail = &v
}

// GetUserQuota returns the UserQuota field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetUserQuota() int32 {
	if o == nil || IsNil(o.UserQuota) {
		var ret int32
		return ret
	}
	return *o.UserQuota
}

// GetUserQuotaOk returns a tuple with the UserQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetUserQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.UserQuota) {
		return nil, false
	}
	return o.UserQuota, true
}

// HasUserQuota returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasUserQuota() bool {
	if o != nil && !IsNil(o.UserQuota) {
		return true
	}

	return false
}

// SetUserQuota gets a reference to the given int32 and assigns it to the UserQuota field.
func (o *PostInstancesRequest) SetUserQuota(v int32) {
	o.UserQuota = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PostInstancesRequest) SetVersion(v string) {
	o.Version = &v
}

// GetWaitForReadiness returns the WaitForReadiness field value if set, zero value otherwise.
func (o *PostInstancesRequest) GetWaitForReadiness() bool {
	if o == nil || IsNil(o.WaitForReadiness) {
		var ret bool
		return ret
	}
	return *o.WaitForReadiness
}

// GetWaitForReadinessOk returns a tuple with the WaitForReadiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostInstancesRequest) GetWaitForReadinessOk() (*bool, bool) {
	if o == nil || IsNil(o.WaitForReadiness) {
		return nil, false
	}
	return o.WaitForReadiness, true
}

// HasWaitForReadiness returns a boolean if a field has been set.
func (o *PostInstancesRequest) HasWaitForReadiness() bool {
	if o != nil && !IsNil(o.WaitForReadiness) {
		return true
	}

	return false
}

// SetWaitForReadiness gets a reference to the given bool and assigns it to the WaitForReadiness field.
func (o *PostInstancesRequest) SetWaitForReadiness(v bool) {
	o.WaitForReadiness = &v
}

func (o PostInstancesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostInstancesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminUserInstance) {
		toSerialize["adminUserInstance"] = o.AdminUserInstance
	}
	if !IsNil(o.AlertQuota) {
		toSerialize["alertQuota"] = o.AlertQuota
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !IsNil(o.AmCluster) {
		toSerialize["amCluster"] = o.AmCluster
	}
	if !IsNil(o.BillingEndDate) {
		toSerialize["billingEndDate"] = o.BillingEndDate
	}
	if !IsNil(o.BillingStartDate) {
		toSerialize["billingStartDate"] = o.BillingStartDate
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.CreateTemporaryLicenseIfMissing) {
		toSerialize["createTemporaryLicenseIfMissing"] = o.CreateTemporaryLicenseIfMissing
	}
	if !IsNil(o.DashboardQuota) {
		toSerialize["dashboardQuota"] = o.DashboardQuota
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Graphite) {
		toSerialize["graphite"] = o.Graphite
	}
	if !IsNil(o.HlCluster) {
		toSerialize["hlCluster"] = o.HlCluster
	}
	if !IsNil(o.HlInstanceId) {
		toSerialize["hlInstanceId"] = o.HlInstanceId
	}
	if !IsNil(o.HmGraphiteCluster) {
		toSerialize["hmGraphiteCluster"] = o.HmGraphiteCluster
	}
	if !IsNil(o.HmGraphiteType) {
		toSerialize["hmGraphiteType"] = o.HmGraphiteType
	}
	if !IsNil(o.HmPromCluster) {
		toSerialize["hmPromCluster"] = o.HmPromCluster
	}
	if !IsNil(o.Hosted) {
		toSerialize["hosted"] = o.Hosted
	}
	if !IsNil(o.HtCluster) {
		toSerialize["htCluster"] = o.HtCluster
	}
	if !IsNil(o.Incident) {
		toSerialize["incident"] = o.Incident
	}
	if !IsNil(o.IssueLink) {
		toSerialize["issueLink"] = o.IssueLink
	}
	if !IsNil(o.K6OrgId) {
		toSerialize["k6OrgId"] = o.K6OrgId
	}
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	if !IsNil(o.MachineLearning) {
		toSerialize["machineLearning"] = o.MachineLearning
	}
	if !IsNil(o.MachineLearningLogsToken) {
		toSerialize["machineLearningLogsToken"] = o.MachineLearningLogsToken
	}
	if !IsNil(o.Multitenant) {
		toSerialize["multitenant"] = o.Multitenant
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	if !IsNil(o.Prometheus) {
		toSerialize["prometheus"] = o.Prometheus
	}
	if !IsNil(o.PublicInstance) {
		toSerialize["publicInstance"] = o.PublicInstance
	}
	if !IsNil(o.ReasonType) {
		toSerialize["reasonType"] = o.ReasonType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SkipOrgConflictCheck) {
		toSerialize["skipOrgConflictCheck"] = o.SkipOrgConflictCheck
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Trial) {
		toSerialize["trial"] = o.Trial
	}
	if !IsNil(o.TrialExpiresAt) {
		toSerialize["trialExpiresAt"] = o.TrialExpiresAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UsernameOrEmail) {
		toSerialize["usernameOrEmail"] = o.UsernameOrEmail
	}
	if !IsNil(o.UserQuota) {
		toSerialize["userQuota"] = o.UserQuota
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.WaitForReadiness) {
		toSerialize["waitForReadiness"] = o.WaitForReadiness
	}
	return toSerialize, nil
}

func (o *PostInstancesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostInstancesRequest := _PostInstancesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostInstancesRequest)

	if err != nil {
		return err
	}

	*o = PostInstancesRequest(varPostInstancesRequest)

	return err
}

type NullablePostInstancesRequest struct {
	value *PostInstancesRequest
	isSet bool
}

func (v NullablePostInstancesRequest) Get() *PostInstancesRequest {
	return v.value
}

func (v *NullablePostInstancesRequest) Set(val *PostInstancesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostInstancesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostInstancesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostInstancesRequest(val *PostInstancesRequest) *NullablePostInstancesRequest {
	return &NullablePostInstancesRequest{value: val, isSet: true}
}

func (v NullablePostInstancesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostInstancesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
