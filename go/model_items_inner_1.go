/*
GCOM API

Grafana.com API (public).  Looking for GCOM API client packages? You can find them at [grafana-com-public-clients](https://github.com/grafana/grafana-com-public-clients) repository.  If you have any questions, please contact support in the Grafana Cloud UI.  This spec is in *Beta* stage, so use it with caution: - Not all endpoint responses are properly typed for the time being. - Some request parameter types may not be precise

API version: public
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ItemsInner1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemsInner1{}

// ItemsInner1 struct for ItemsInner1
type ItemsInner1 struct {
	LastSeenAt           *string `json:"lastSeenAt,omitempty"`
	CreatedAt            string  `json:"createdAt"`
	UpdatedAt            string  `json:"updatedAt"`
	Email                string  `json:"email"`
	Login                string  `json:"login"`
	Name                 string  `json:"name"`
	Role                 string  `json:"role"`
	Id                   float32 `json:"id"`
	IsServiceAccount     bool    `json:"isServiceAccount"`
	AdditionalProperties map[string]interface{}
}

type _ItemsInner1 ItemsInner1

// NewItemsInner1 instantiates a new ItemsInner1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemsInner1(createdAt string, updatedAt string, email string, login string, name string, role string, id float32, isServiceAccount bool) *ItemsInner1 {
	this := ItemsInner1{}
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Email = email
	this.Login = login
	this.Name = name
	this.Role = role
	this.Id = id
	this.IsServiceAccount = isServiceAccount
	return &this
}

// NewItemsInner1WithDefaults instantiates a new ItemsInner1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemsInner1WithDefaults() *ItemsInner1 {
	this := ItemsInner1{}
	return &this
}

// GetLastSeenAt returns the LastSeenAt field value if set, zero value otherwise.
func (o *ItemsInner1) GetLastSeenAt() string {
	if o == nil || IsNil(o.LastSeenAt) {
		var ret string
		return ret
	}
	return *o.LastSeenAt
}

// GetLastSeenAtOk returns a tuple with the LastSeenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetLastSeenAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastSeenAt) {
		return nil, false
	}
	return o.LastSeenAt, true
}

// HasLastSeenAt returns a boolean if a field has been set.
func (o *ItemsInner1) HasLastSeenAt() bool {
	if o != nil && !IsNil(o.LastSeenAt) {
		return true
	}

	return false
}

// SetLastSeenAt gets a reference to the given string and assigns it to the LastSeenAt field.
func (o *ItemsInner1) SetLastSeenAt(v string) {
	o.LastSeenAt = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ItemsInner1) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ItemsInner1) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ItemsInner1) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ItemsInner1) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetEmail returns the Email field value
func (o *ItemsInner1) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ItemsInner1) SetEmail(v string) {
	o.Email = v
}

// GetLogin returns the Login field value
func (o *ItemsInner1) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *ItemsInner1) SetLogin(v string) {
	o.Login = v
}

// GetName returns the Name field value
func (o *ItemsInner1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ItemsInner1) SetName(v string) {
	o.Name = v
}

// GetRole returns the Role field value
func (o *ItemsInner1) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ItemsInner1) SetRole(v string) {
	o.Role = v
}

// GetId returns the Id field value
func (o *ItemsInner1) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ItemsInner1) SetId(v float32) {
	o.Id = v
}

// GetIsServiceAccount returns the IsServiceAccount field value
func (o *ItemsInner1) GetIsServiceAccount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsServiceAccount
}

// GetIsServiceAccountOk returns a tuple with the IsServiceAccount field value
// and a boolean to check if the value has been set.
func (o *ItemsInner1) GetIsServiceAccountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsServiceAccount, true
}

// SetIsServiceAccount sets field value
func (o *ItemsInner1) SetIsServiceAccount(v bool) {
	o.IsServiceAccount = v
}

func (o ItemsInner1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemsInner1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastSeenAt) {
		toSerialize["lastSeenAt"] = o.LastSeenAt
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["email"] = o.Email
	toSerialize["login"] = o.Login
	toSerialize["name"] = o.Name
	toSerialize["role"] = o.Role
	toSerialize["id"] = o.Id
	toSerialize["isServiceAccount"] = o.IsServiceAccount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ItemsInner1) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varItemsInner1 := _ItemsInner1{}

	err = json.Unmarshal(data, &varItemsInner1)

	if err != nil {
		return err
	}

	*o = ItemsInner1(varItemsInner1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lastSeenAt")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "email")
		delete(additionalProperties, "login")
		delete(additionalProperties, "name")
		delete(additionalProperties, "role")
		delete(additionalProperties, "id")
		delete(additionalProperties, "isServiceAccount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableItemsInner1 struct {
	value *ItemsInner1
	isSet bool
}

func (v NullableItemsInner1) Get() *ItemsInner1 {
	return v.value
}

func (v *NullableItemsInner1) Set(val *ItemsInner1) {
	v.value = val
	v.isSet = true
}

func (v NullableItemsInner1) IsSet() bool {
	return v.isSet
}

func (v *NullableItemsInner1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemsInner1(val *ItemsInner1) *NullableItemsInner1 {
	return &NullableItemsInner1{value: val, isSet: true}
}

func (v NullableItemsInner1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemsInner1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
